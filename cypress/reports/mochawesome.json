{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-11T22:55:10.985Z",
    "end": "2021-09-11T22:56:43.366Z",
    "duration": 92381,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fb27eb0f-2533-48a5-9c70-783b30d00b69",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cf0f1e39-8eb1-4fc0-96a6-4bf1343a6fdb",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 360,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "04d8dd49-2069-40b1-8e7b-3c6216d26a93",
              "parentUUID": "cf0f1e39-8eb1-4fc0-96a6-4bf1343a6fdb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04d8dd49-2069-40b1-8e7b-3c6216d26a93"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 360,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f2a33c1d-409a-4f85-86dd-a07d9e6d8364",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "7249774c-46f5-4c37-b980-273ce7c7bd5a",
              "parentUUID": "f2a33c1d-409a-4f85-86dd-a07d9e6d8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "be75470a-3296-4a5b-8d0d-8d6444c763f4",
              "parentUUID": "f2a33c1d-409a-4f85-86dd-a07d9e6d8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "07efa875-4a1d-4101-8730-136de3aab75e",
              "parentUUID": "f2a33c1d-409a-4f85-86dd-a07d9e6d8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "c54f9817-e4ae-4877-995b-f3b2033fd603",
              "parentUUID": "f2a33c1d-409a-4f85-86dd-a07d9e6d8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "37c0082f-d9bb-4c1e-914e-f5b126e4b2c7",
              "parentUUID": "f2a33c1d-409a-4f85-86dd-a07d9e6d8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "6ac7961c-2219-4316-96d5-300e57346445",
              "parentUUID": "f2a33c1d-409a-4f85-86dd-a07d9e6d8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "1cd7ae84-2ec0-4774-89c0-bdba11b4fabf",
              "parentUUID": "f2a33c1d-409a-4f85-86dd-a07d9e6d8364",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7249774c-46f5-4c37-b980-273ce7c7bd5a",
            "be75470a-3296-4a5b-8d0d-8d6444c763f4",
            "07efa875-4a1d-4101-8730-136de3aab75e",
            "c54f9817-e4ae-4877-995b-f3b2033fd603",
            "37c0082f-d9bb-4c1e-914e-f5b126e4b2c7",
            "6ac7961c-2219-4316-96d5-300e57346445",
            "1cd7ae84-2ec0-4774-89c0-bdba11b4fabf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1707,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "407b54ca-33ce-49f3-b7da-ada4c7426c7a",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "80a4c37a-50c1-4e03-a079-cc8897453eb5",
              "parentUUID": "407b54ca-33ce-49f3-b7da-ada4c7426c7a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 351,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "0de4fad6-5964-4850-bcec-70deee36bbad",
              "parentUUID": "407b54ca-33ce-49f3-b7da-ada4c7426c7a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "80a4c37a-50c1-4e03-a079-cc8897453eb5",
            "0de4fad6-5964-4850-bcec-70deee36bbad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 585,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cf841933-9176-4c17-a279-c3912783bef2",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "c58db70a-23d6-4e2f-adc4-ba50982d9d0e",
              "parentUUID": "cf841933-9176-4c17-a279-c3912783bef2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "47b0cf6e-8933-460c-8ec0-a7c38a7118e4",
              "parentUUID": "cf841933-9176-4c17-a279-c3912783bef2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 347,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "7d75d9fa-9b5d-46ac-baac-a14a72546ed0",
              "parentUUID": "cf841933-9176-4c17-a279-c3912783bef2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "04e438ae-c005-4b58-9c38-9abdb48c9583",
              "parentUUID": "cf841933-9176-4c17-a279-c3912783bef2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c58db70a-23d6-4e2f-adc4-ba50982d9d0e",
            "47b0cf6e-8933-460c-8ec0-a7c38a7118e4",
            "7d75d9fa-9b5d-46ac-baac-a14a72546ed0",
            "04e438ae-c005-4b58-9c38-9abdb48c9583"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 867,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "13709aa7-e0f5-4620-88d0-1087e59101c2",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 600,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "a542eb0f-7081-4699-abf2-6501a387227a",
              "parentUUID": "13709aa7-e0f5-4620-88d0-1087e59101c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 568,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "763abe44-2cc9-4330-8e86-3195c8e10b92",
              "parentUUID": "13709aa7-e0f5-4620-88d0-1087e59101c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a542eb0f-7081-4699-abf2-6501a387227a",
            "763abe44-2cc9-4330-8e86-3195c8e10b92"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1168,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ee81bb02-bb24-4c70-8161-49dfc31804c9",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "4c663e31-5780-4d46-bd2b-0b2bbb0200d6",
              "parentUUID": "ee81bb02-bb24-4c70-8161-49dfc31804c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "393172bb-223b-408e-9f74-191e3d7c2298",
              "parentUUID": "ee81bb02-bb24-4c70-8161-49dfc31804c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c663e31-5780-4d46-bd2b-0b2bbb0200d6",
            "393172bb-223b-408e-9f74-191e3d7c2298"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 408,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3ed9b62f-9410-43d3-9cc4-59a44c611f93",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 570,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "4729aa3d-efc9-486e-b439-da8a0f6e3f3d",
              "parentUUID": "3ed9b62f-9410-43d3-9cc4-59a44c611f93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9417,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "4d6e846e-8af1-4d96-bad1-93fd191aeafc",
              "parentUUID": "3ed9b62f-9410-43d3-9cc4-59a44c611f93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4729aa3d-efc9-486e-b439-da8a0f6e3f3d",
            "4d6e846e-8af1-4d96-bad1-93fd191aeafc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9987,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0df43687-1adf-4a27-ba73-97d0ff25b233",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2420,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "e820f85c-0e2b-44a0-96e4-554b3a02fdf4",
              "parentUUID": "0df43687-1adf-4a27-ba73-97d0ff25b233",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "96a88f03-dc47-4621-8184-7020c7e2ee91",
              "parentUUID": "0df43687-1adf-4a27-ba73-97d0ff25b233",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2044,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "3682a827-b02c-4151-a463-3af8d48d355d",
              "parentUUID": "0df43687-1adf-4a27-ba73-97d0ff25b233",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e820f85c-0e2b-44a0-96e4-554b3a02fdf4",
            "96a88f03-dc47-4621-8184-7020c7e2ee91",
            "3682a827-b02c-4151-a463-3af8d48d355d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13734,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1170813b-07a8-4485-9a7c-7df5ac190cf1",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "f77930e5-6900-465f-831c-a5ce1f281c51",
              "parentUUID": "1170813b-07a8-4485-9a7c-7df5ac190cf1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "31fa7303-70bf-4eed-9256-0021941ed067",
              "parentUUID": "1170813b-07a8-4485-9a7c-7df5ac190cf1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "ac57d643-a5e0-4a0f-99e1-55369d3d0e24",
              "parentUUID": "1170813b-07a8-4485-9a7c-7df5ac190cf1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2580,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "3d68fc38-dbb0-4776-9cd0-43b346cea4e8",
              "parentUUID": "1170813b-07a8-4485-9a7c-7df5ac190cf1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f77930e5-6900-465f-831c-a5ce1f281c51",
            "31fa7303-70bf-4eed-9256-0021941ed067",
            "ac57d643-a5e0-4a0f-99e1-55369d3d0e24",
            "3d68fc38-dbb0-4776-9cd0-43b346cea4e8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3227,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8b3662a0-58aa-4bf1-a137-3092c77674ac",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4538,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7f307410-3739-4645-b29d-04688c72738c",
              "parentUUID": "8b3662a0-58aa-4bf1-a137-3092c77674ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4712,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e2c003c2-f81a-4aff-82d5-a9632b7e5de3",
              "parentUUID": "8b3662a0-58aa-4bf1-a137-3092c77674ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4686,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "999dd4bc-3eef-42ef-90b9-be0fe761f9a0",
              "parentUUID": "8b3662a0-58aa-4bf1-a137-3092c77674ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4822,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2e993beb-3b0d-4bf7-9115-65045d16c1c3",
              "parentUUID": "8b3662a0-58aa-4bf1-a137-3092c77674ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4726,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0d134f5b-4fd6-4362-b4b4-b7c28af86ee9",
              "parentUUID": "8b3662a0-58aa-4bf1-a137-3092c77674ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4733,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "771392a2-7745-4c2e-8689-f5679560762e",
              "parentUUID": "8b3662a0-58aa-4bf1-a137-3092c77674ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4652,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "06834a85-ad27-4c52-9848-a7b25aea8fa7",
              "parentUUID": "8b3662a0-58aa-4bf1-a137-3092c77674ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4707,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6ddf4415-d076-4e0d-b62d-de59ecd7435e",
              "parentUUID": "8b3662a0-58aa-4bf1-a137-3092c77674ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4723,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a87c1ecf-cac4-4e2c-bf43-e4b871d21fa9",
              "parentUUID": "8b3662a0-58aa-4bf1-a137-3092c77674ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7f307410-3739-4645-b29d-04688c72738c",
            "e2c003c2-f81a-4aff-82d5-a9632b7e5de3",
            "999dd4bc-3eef-42ef-90b9-be0fe761f9a0",
            "2e993beb-3b0d-4bf7-9115-65045d16c1c3",
            "0d134f5b-4fd6-4362-b4b4-b7c28af86ee9",
            "771392a2-7745-4c2e-8689-f5679560762e",
            "06834a85-ad27-4c52-9848-a7b25aea8fa7",
            "6ddf4415-d076-4e0d-b62d-de59ecd7435e",
            "a87c1ecf-cac4-4e2c-bf43-e4b871d21fa9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 42299,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d491449e-b53e-41f3-a067-f41c75a0473a",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4708,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2a19d314-4134-4477-bb21-ef23e2e9730e",
              "parentUUID": "d491449e-b53e-41f3-a067-f41c75a0473a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4824,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1a93c907-7b8a-49f1-b8d2-631255e7fc04",
              "parentUUID": "d491449e-b53e-41f3-a067-f41c75a0473a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4642,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39051/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39051/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39051/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39051/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39051/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39051/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39051/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3de936a1-6ff2-45a0-a332-ba1228047802",
              "parentUUID": "d491449e-b53e-41f3-a067-f41c75a0473a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2a19d314-4134-4477-bb21-ef23e2e9730e",
            "1a93c907-7b8a-49f1-b8d2-631255e7fc04",
            "3de936a1-6ff2-45a0-a332-ba1228047802"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14174,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c3da3972-067d-4629-b9d3-15de84c45fbb",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1202,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39051/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39051/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39051/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39051/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39051/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39051/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39051/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39051/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "0f3b8490-da7d-444d-8585-9f3d8f4ca2df",
              "parentUUID": "c3da3972-067d-4629-b9d3-15de84c45fbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1102,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39051/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39051/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39051/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39051/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39051/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39051/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39051/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39051/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39051/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39051/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39051/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39051/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "e00b7dbf-4ac9-4c80-adc7-2648a26e86cc",
              "parentUUID": "c3da3972-067d-4629-b9d3-15de84c45fbb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0f3b8490-da7d-444d-8585-9f3d8f4ca2df",
            "e00b7dbf-4ac9-4c80-adc7-2648a26e86cc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2304,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}