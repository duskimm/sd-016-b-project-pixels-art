{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-09-11T19:15:48.559Z",
    "end": "2021-09-11T19:17:17.599Z",
    "duration": 89040,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0c949854-d445-4710-8ef0-159c948228e0",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8bb0e3a7-4549-4160-92d0-54e71f2d952b",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 434,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "552f280c-a500-42e2-8726-9d2e0364401d",
              "parentUUID": "8bb0e3a7-4549-4160-92d0-54e71f2d952b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "552f280c-a500-42e2-8726-9d2e0364401d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 434,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2a378fef-ac3c-461f-96b8-b9f7f8310b69",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 323,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "7e74531e-2e86-4f90-b50b-b95f4bb48fe4",
              "parentUUID": "2a378fef-ac3c-461f-96b8-b9f7f8310b69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "644eb475-fff2-48b9-adfb-fac30c2427ba",
              "parentUUID": "2a378fef-ac3c-461f-96b8-b9f7f8310b69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 340,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "f5027621-731d-497b-b621-2ead1abbc640",
              "parentUUID": "2a378fef-ac3c-461f-96b8-b9f7f8310b69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "c68c1416-43ad-4120-9b8e-636dd1914e98",
              "parentUUID": "2a378fef-ac3c-461f-96b8-b9f7f8310b69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "57ee78b2-0c55-42b1-b92c-9e55aacd025a",
              "parentUUID": "2a378fef-ac3c-461f-96b8-b9f7f8310b69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "3ca39f8f-5d6c-4643-8b08-2af1d839b20c",
              "parentUUID": "2a378fef-ac3c-461f-96b8-b9f7f8310b69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "0054b0f2-3b04-441a-86fc-2994910c0686",
              "parentUUID": "2a378fef-ac3c-461f-96b8-b9f7f8310b69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e74531e-2e86-4f90-b50b-b95f4bb48fe4",
            "644eb475-fff2-48b9-adfb-fac30c2427ba",
            "f5027621-731d-497b-b621-2ead1abbc640",
            "c68c1416-43ad-4120-9b8e-636dd1914e98",
            "57ee78b2-0c55-42b1-b92c-9e55aacd025a",
            "3ca39f8f-5d6c-4643-8b08-2af1d839b20c",
            "0054b0f2-3b04-441a-86fc-2994910c0686"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1753,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "41474566-5253-4ba1-b851-17adb704c823",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b9cc15c5-b970-42d8-8dd6-718fe24167a6",
              "parentUUID": "41474566-5253-4ba1-b851-17adb704c823",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "5c565045-216a-40fa-8bbe-b9657951f60f",
              "parentUUID": "41474566-5253-4ba1-b851-17adb704c823",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b9cc15c5-b970-42d8-8dd6-718fe24167a6",
            "5c565045-216a-40fa-8bbe-b9657951f60f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 484,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c6ba013a-e14c-4882-a214-6aae60dd63bd",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "730dc146-7dfb-4cec-809f-5e9a3457c580",
              "parentUUID": "c6ba013a-e14c-4882-a214-6aae60dd63bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "9617f391-59fa-4295-80b3-cd268b6c722d",
              "parentUUID": "c6ba013a-e14c-4882-a214-6aae60dd63bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "3e201d5e-bb81-42b1-8801-ee53fc9f3252",
              "parentUUID": "c6ba013a-e14c-4882-a214-6aae60dd63bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "48a3ab35-cc34-4634-b95a-b1bf0eec029c",
              "parentUUID": "c6ba013a-e14c-4882-a214-6aae60dd63bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "730dc146-7dfb-4cec-809f-5e9a3457c580",
            "9617f391-59fa-4295-80b3-cd268b6c722d",
            "3e201d5e-bb81-42b1-8801-ee53fc9f3252",
            "48a3ab35-cc34-4634-b95a-b1bf0eec029c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 916,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dbf79a7f-45d1-4072-b622-678e37b1300d",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 454,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "5c79ca73-fd74-4e52-b67d-660e9cb323a2",
              "parentUUID": "dbf79a7f-45d1-4072-b622-678e37b1300d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 421,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "450a6641-1c77-4ac8-90d3-14fbaaec757c",
              "parentUUID": "dbf79a7f-45d1-4072-b622-678e37b1300d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c79ca73-fd74-4e52-b67d-660e9cb323a2",
            "450a6641-1c77-4ac8-90d3-14fbaaec757c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 875,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bec617ec-d406-4d09-930b-2e65a9c22e52",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "89d027a2-25da-4b7f-b06b-d4b57e19f626",
              "parentUUID": "bec617ec-d406-4d09-930b-2e65a9c22e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "3dc9a603-b665-4309-ac48-708e7f74d9cb",
              "parentUUID": "bec617ec-d406-4d09-930b-2e65a9c22e52",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89d027a2-25da-4b7f-b06b-d4b57e19f626",
            "3dc9a603-b665-4309-ac48-708e7f74d9cb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 398,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "06d8b19f-4027-45df-8362-0bb2fb37a361",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 529,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "e166eda5-f4c6-4d8d-bca4-537d22b4e97d",
              "parentUUID": "06d8b19f-4027-45df-8362-0bb2fb37a361",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "cc6982af-5e76-4612-ab20-cffb8f76a41c",
              "parentUUID": "06d8b19f-4027-45df-8362-0bb2fb37a361",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e166eda5-f4c6-4d8d-bca4-537d22b4e97d",
            "cc6982af-5e76-4612-ab20-cffb8f76a41c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9829,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f567b935-1c22-4d77-90ed-6f5876387840",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2420,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "a3cbb8cf-7841-44ea-9033-f61cc8d54fc7",
              "parentUUID": "f567b935-1c22-4d77-90ed-6f5876387840",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "4e71d1d1-e80b-40d6-8130-54d45b72e6df",
              "parentUUID": "f567b935-1c22-4d77-90ed-6f5876387840",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "1f75c430-71e5-475b-b1c3-7f1343bd57a4",
              "parentUUID": "f567b935-1c22-4d77-90ed-6f5876387840",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3cbb8cf-7841-44ea-9033-f61cc8d54fc7",
            "4e71d1d1-e80b-40d6-8130-54d45b72e6df",
            "1f75c430-71e5-475b-b1c3-7f1343bd57a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13731,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cdc35914-72eb-477b-bcf8-96b4c04f1494",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 303,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "5136bc60-0c0a-4318-bea5-afbc5caa392b",
              "parentUUID": "cdc35914-72eb-477b-bcf8-96b4c04f1494",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "bcb0d052-61e3-4e03-b633-cf5cbe6dae95",
              "parentUUID": "cdc35914-72eb-477b-bcf8-96b4c04f1494",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "8a67b36f-0089-4cab-a4bc-e1fabd2f0357",
              "parentUUID": "cdc35914-72eb-477b-bcf8-96b4c04f1494",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2635,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "a66b6b82-6e6f-41a4-905f-7292a190b9ef",
              "parentUUID": "cdc35914-72eb-477b-bcf8-96b4c04f1494",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5136bc60-0c0a-4318-bea5-afbc5caa392b",
            "bcb0d052-61e3-4e03-b633-cf5cbe6dae95",
            "8a67b36f-0089-4cab-a4bc-e1fabd2f0357",
            "a66b6b82-6e6f-41a4-905f-7292a190b9ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3249,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "02c7cefd-264e-43ae-8d98-2287d654a790",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4622,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38111/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38111/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38111/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38111/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38111/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38111/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38111/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38111/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38111/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "70768d56-ef04-49b7-99fe-85afa814977a",
              "parentUUID": "02c7cefd-264e-43ae-8d98-2287d654a790",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4506,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38111/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38111/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38111/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38111/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38111/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38111/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38111/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38111/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38111/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "88eed626-32a4-4e19-809c-2f7721f05b8a",
              "parentUUID": "02c7cefd-264e-43ae-8d98-2287d654a790",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4451,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38111/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38111/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38111/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38111/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38111/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38111/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38111/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38111/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38111/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b53e015e-ede2-4aaa-90a8-0d54ca5206d7",
              "parentUUID": "02c7cefd-264e-43ae-8d98-2287d654a790",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4640,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38111/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38111/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38111/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38111/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38111/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38111/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38111/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38111/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38111/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e83d241a-9634-4983-b032-063ce54824e1",
              "parentUUID": "02c7cefd-264e-43ae-8d98-2287d654a790",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4503,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38111/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38111/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38111/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38111/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38111/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38111/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38111/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38111/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38111/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "de80c8d0-7c69-45f6-9fd4-f68e6e860bc2",
              "parentUUID": "02c7cefd-264e-43ae-8d98-2287d654a790",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4543,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38111/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38111/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38111/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38111/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38111/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38111/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38111/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38111/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38111/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2baee8b4-4456-458b-992d-13e4fff85e7c",
              "parentUUID": "02c7cefd-264e-43ae-8d98-2287d654a790",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4515,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38111/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38111/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38111/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38111/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38111/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38111/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38111/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38111/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38111/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c10ba4db-a5f2-4b87-b9f0-480b4287efac",
              "parentUUID": "02c7cefd-264e-43ae-8d98-2287d654a790",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4450,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38111/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38111/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38111/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38111/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38111/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38111/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38111/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38111/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38111/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0d112a94-3481-48c5-9f79-e7003a6e222f",
              "parentUUID": "02c7cefd-264e-43ae-8d98-2287d654a790",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4532,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38111/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38111/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38111/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38111/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38111/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38111/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38111/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38111/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38111/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "25ebeba6-baba-4e2c-b88b-6ac5a5ba8860",
              "parentUUID": "02c7cefd-264e-43ae-8d98-2287d654a790",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "70768d56-ef04-49b7-99fe-85afa814977a",
            "88eed626-32a4-4e19-809c-2f7721f05b8a",
            "b53e015e-ede2-4aaa-90a8-0d54ca5206d7",
            "e83d241a-9634-4983-b032-063ce54824e1",
            "de80c8d0-7c69-45f6-9fd4-f68e6e860bc2",
            "2baee8b4-4456-458b-992d-13e4fff85e7c",
            "c10ba4db-a5f2-4b87-b9f0-480b4287efac",
            "0d112a94-3481-48c5-9f79-e7003a6e222f",
            "25ebeba6-baba-4e2c-b88b-6ac5a5ba8860"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40762,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ef6b25fd-a6fd-4e81-bdeb-1f785ef5f5cb",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4502,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38111/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38111/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38111/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38111/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38111/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38111/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38111/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38111/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38111/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7f968111-7933-4156-a4db-2115edd641fb",
              "parentUUID": "ef6b25fd-a6fd-4e81-bdeb-1f785ef5f5cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4571,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38111/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38111/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38111/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38111/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38111/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38111/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38111/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38111/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38111/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "187f5069-4158-4ba5-97f4-962096b8efe7",
              "parentUUID": "ef6b25fd-a6fd-4e81-bdeb-1f785ef5f5cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4492,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38111/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38111/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38111/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38111/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38111/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38111/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38111/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38111/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38111/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38111/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38111/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "587c0c5c-9fa1-415a-ba74-33c433aeeb13",
              "parentUUID": "ef6b25fd-a6fd-4e81-bdeb-1f785ef5f5cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7f968111-7933-4156-a4db-2115edd641fb",
            "187f5069-4158-4ba5-97f4-962096b8efe7",
            "587c0c5c-9fa1-415a-ba74-33c433aeeb13"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13565,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3ad6fcb1-d7b4-4c6a-9885-09b2634115d4",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 786,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "ad4c099e-8f07-4235-ad1f-f7eebe930e17",
              "parentUUID": "3ad6fcb1-d7b4-4c6a-9885-09b2634115d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 815,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "22bc5346-22e2-409b-8342-3b5233c70522",
              "parentUUID": "3ad6fcb1-d7b4-4c6a-9885-09b2634115d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad4c099e-8f07-4235-ad1f-f7eebe930e17",
            "22bc5346-22e2-409b-8342-3b5233c70522"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1601,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}