{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-12T05:53:35.032Z",
    "end": "2021-09-12T05:55:11.615Z",
    "duration": 96583,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f200f187-0f8c-44cb-808e-c4ec2fccccd7",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "884d86bc-ecd0-4a50-9420-1b6e1b0427dd",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 745,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "39d33fce-74a4-4e86-be7a-5113135d7623",
              "parentUUID": "884d86bc-ecd0-4a50-9420-1b6e1b0427dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39d33fce-74a4-4e86-be7a-5113135d7623"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 745,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fc88c02e-8dcd-461b-baea-e7e6c53e657e",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 339,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "be7e215b-c095-435e-99ea-30e008852ae7",
              "parentUUID": "fc88c02e-8dcd-461b-baea-e7e6c53e657e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "19682420-d40c-4d13-80b1-c836b676d5c4",
              "parentUUID": "fc88c02e-8dcd-461b-baea-e7e6c53e657e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 600,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "17b46a85-6433-4fa2-b012-43b2fcd3aa8b",
              "parentUUID": "fc88c02e-8dcd-461b-baea-e7e6c53e657e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "829eba5f-04a4-450c-b65f-3a851cddc4c2",
              "parentUUID": "fc88c02e-8dcd-461b-baea-e7e6c53e657e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "15c2fd58-21f5-4217-9e13-178d848ca7f2",
              "parentUUID": "fc88c02e-8dcd-461b-baea-e7e6c53e657e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 315,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "6589ba0f-b86b-45e4-82d9-f0e333654352",
              "parentUUID": "fc88c02e-8dcd-461b-baea-e7e6c53e657e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "c6d011a1-13fc-456f-8905-2ca2b7180bf1",
              "parentUUID": "fc88c02e-8dcd-461b-baea-e7e6c53e657e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be7e215b-c095-435e-99ea-30e008852ae7",
            "19682420-d40c-4d13-80b1-c836b676d5c4",
            "17b46a85-6433-4fa2-b012-43b2fcd3aa8b",
            "829eba5f-04a4-450c-b65f-3a851cddc4c2",
            "15c2fd58-21f5-4217-9e13-178d848ca7f2",
            "6589ba0f-b86b-45e4-82d9-f0e333654352",
            "c6d011a1-13fc-456f-8905-2ca2b7180bf1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2517,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7f0d4a8d-ea66-489e-812b-685d1887001a",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d8f36274-e57d-4ecb-93bd-8e910580515c",
              "parentUUID": "7f0d4a8d-ea66-489e-812b-685d1887001a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 363,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "bb1f43b6-b0ed-485d-95b9-f7b07f18685b",
              "parentUUID": "7f0d4a8d-ea66-489e-812b-685d1887001a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8f36274-e57d-4ecb-93bd-8e910580515c",
            "bb1f43b6-b0ed-485d-95b9-f7b07f18685b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 565,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "70d4a918-c4c6-4727-9b2c-3e38ebd326ce",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "88169606-556e-4bbf-9d6b-2fd2076e403c",
              "parentUUID": "70d4a918-c4c6-4727-9b2c-3e38ebd326ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 281,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "a8b2a9aa-bc63-4e60-8f84-4b10c71f2f66",
              "parentUUID": "70d4a918-c4c6-4727-9b2c-3e38ebd326ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "45227f8c-ab10-4068-b9e9-601bf2716baf",
              "parentUUID": "70d4a918-c4c6-4727-9b2c-3e38ebd326ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "52851d8a-2144-4256-9300-5dd44ab624b0",
              "parentUUID": "70d4a918-c4c6-4727-9b2c-3e38ebd326ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88169606-556e-4bbf-9d6b-2fd2076e403c",
            "a8b2a9aa-bc63-4e60-8f84-4b10c71f2f66",
            "45227f8c-ab10-4068-b9e9-601bf2716baf",
            "52851d8a-2144-4256-9300-5dd44ab624b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1147,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ad8999ca-bec0-4651-be44-6c96dfb8aa62",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 717,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "2ed3f450-e1cb-4235-a24f-2489136d10fd",
              "parentUUID": "ad8999ca-bec0-4651-be44-6c96dfb8aa62",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 602,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "27033758-12b3-4097-8220-85dfdc39ac70",
              "parentUUID": "ad8999ca-bec0-4651-be44-6c96dfb8aa62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ed3f450-e1cb-4235-a24f-2489136d10fd",
            "27033758-12b3-4097-8220-85dfdc39ac70"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1319,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e03725e3-2cdd-4d62-950a-4af0cf2a025e",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f5957704-2753-4708-8633-a3b7c3579d01",
              "parentUUID": "e03725e3-2cdd-4d62-950a-4af0cf2a025e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "4ba6fe78-e7a9-4cc6-a5fd-66131e757408",
              "parentUUID": "e03725e3-2cdd-4d62-950a-4af0cf2a025e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f5957704-2753-4708-8633-a3b7c3579d01",
            "4ba6fe78-e7a9-4cc6-a5fd-66131e757408"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 524,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "84d103a8-55b8-48cc-8e41-52cc8b48673d",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 610,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "0b742b85-090d-4f3e-bb16-5331b6f7d6c8",
              "parentUUID": "84d103a8-55b8-48cc-8e41-52cc8b48673d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8787,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "2b09426c-774e-4160-a89f-c0b18d12c024",
              "parentUUID": "84d103a8-55b8-48cc-8e41-52cc8b48673d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b742b85-090d-4f3e-bb16-5331b6f7d6c8",
            "2b09426c-774e-4160-a89f-c0b18d12c024"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9397,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "89b90699-9cfc-422e-ba8a-e68a0bdc2077",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2459,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "b3a06103-caba-4ee9-b662-08f17e4c2e0e",
              "parentUUID": "89b90699-9cfc-422e-ba8a-e68a0bdc2077",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8732,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "5121bdb5-157d-4204-9b01-bbded3c4ad02",
              "parentUUID": "89b90699-9cfc-422e-ba8a-e68a0bdc2077",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "c0540c33-6742-414f-8c37-1d9458a68398",
              "parentUUID": "89b90699-9cfc-422e-ba8a-e68a0bdc2077",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b3a06103-caba-4ee9-b662-08f17e4c2e0e",
            "5121bdb5-157d-4204-9b01-bbded3c4ad02",
            "c0540c33-6742-414f-8c37-1d9458a68398"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13418,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "920c9669-d279-4572-9955-582ca8cc0e32",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 323,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "4b2bd8e4-812a-461a-b4ac-2f7f46efb57c",
              "parentUUID": "920c9669-d279-4572-9955-582ca8cc0e32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "b6f80ee4-4869-474e-b4da-f780c0fef5e9",
              "parentUUID": "920c9669-d279-4572-9955-582ca8cc0e32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "e1275fc3-425a-4013-9764-95819b101b6a",
              "parentUUID": "920c9669-d279-4572-9955-582ca8cc0e32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2516,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "38b7bd55-671a-4c20-88e2-d63d152dce4a",
              "parentUUID": "920c9669-d279-4572-9955-582ca8cc0e32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4b2bd8e4-812a-461a-b4ac-2f7f46efb57c",
            "b6f80ee4-4869-474e-b4da-f780c0fef5e9",
            "e1275fc3-425a-4013-9764-95819b101b6a",
            "38b7bd55-671a-4c20-88e2-d63d152dce4a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3279,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2b8531d3-edbe-4610-9044-ebba820673e3",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4792,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:63387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:63387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:63387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:63387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:63387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:63387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:63387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fe9e1599-684a-4d21-881d-49397360c1f9",
              "parentUUID": "2b8531d3-edbe-4610-9044-ebba820673e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4652,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:63387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:63387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:63387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:63387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:63387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:63387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:63387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d744e60e-082d-4e8e-9135-866c9cf1fda0",
              "parentUUID": "2b8531d3-edbe-4610-9044-ebba820673e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 5210,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:63387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:63387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:63387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:63387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:63387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:63387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:63387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "65aedbd4-6650-4f77-b62b-0704376de44c",
              "parentUUID": "2b8531d3-edbe-4610-9044-ebba820673e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4923,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:63387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:63387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:63387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:63387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:63387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:63387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:63387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "49df8709-9ea3-4009-b79c-625127d0ac92",
              "parentUUID": "2b8531d3-edbe-4610-9044-ebba820673e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4769,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:63387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:63387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:63387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:63387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:63387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:63387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:63387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f6f41888-f545-4376-bf85-f22ee651acc1",
              "parentUUID": "2b8531d3-edbe-4610-9044-ebba820673e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4862,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:63387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:63387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:63387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:63387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:63387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:63387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:63387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c16a0302-5677-4766-b787-09641eb232a7",
              "parentUUID": "2b8531d3-edbe-4610-9044-ebba820673e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 5103,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:63387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:63387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:63387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:63387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:63387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:63387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:63387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e1c25a26-f317-4b47-be8c-2439a6ca0f93",
              "parentUUID": "2b8531d3-edbe-4610-9044-ebba820673e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4916,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:63387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:63387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:63387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:63387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:63387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:63387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:63387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "13549d87-f0bd-4dfd-91ed-8cfd0b767166",
              "parentUUID": "2b8531d3-edbe-4610-9044-ebba820673e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4973,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:63387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:63387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:63387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:63387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:63387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:63387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:63387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "24ae55de-82f1-45cc-a3f6-f362dd28b78d",
              "parentUUID": "2b8531d3-edbe-4610-9044-ebba820673e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fe9e1599-684a-4d21-881d-49397360c1f9",
            "d744e60e-082d-4e8e-9135-866c9cf1fda0",
            "65aedbd4-6650-4f77-b62b-0704376de44c",
            "49df8709-9ea3-4009-b79c-625127d0ac92",
            "f6f41888-f545-4376-bf85-f22ee651acc1",
            "c16a0302-5677-4766-b787-09641eb232a7",
            "e1c25a26-f317-4b47-be8c-2439a6ca0f93",
            "13549d87-f0bd-4dfd-91ed-8cfd0b767166",
            "24ae55de-82f1-45cc-a3f6-f362dd28b78d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 44200,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6495399a-da9f-4865-bbdd-3a10e9d78194",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4963,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:63387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:63387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:63387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:63387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:63387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:63387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:63387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e306bd3c-0bfa-4442-8eb4-46d181b913e2",
              "parentUUID": "6495399a-da9f-4865-bbdd-3a10e9d78194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4903,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:63387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:63387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:63387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:63387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:63387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:63387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:63387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "daa6ed05-f327-488b-8234-466910e797a5",
              "parentUUID": "6495399a-da9f-4865-bbdd-3a10e9d78194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5252,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:63387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:63387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:63387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:63387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:63387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:63387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:63387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:63387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e3c07d57-e320-449f-9afd-01923ceebf21",
              "parentUUID": "6495399a-da9f-4865-bbdd-3a10e9d78194",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e306bd3c-0bfa-4442-8eb4-46d181b913e2",
            "daa6ed05-f327-488b-8234-466910e797a5",
            "e3c07d57-e320-449f-9afd-01923ceebf21"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15118,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "67fd7c78-8ce5-4593-a7f2-07aa1d7a957e",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1540,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:63387/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:63387/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:63387/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:63387/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:63387/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:63387/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:63387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:63387/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:63387/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "f716c0de-d79b-4502-8f7d-5f2f0c565c5c",
              "parentUUID": "67fd7c78-8ce5-4593-a7f2-07aa1d7a957e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1381,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:63387/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:63387/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:63387/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:63387/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:63387/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:63387/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:63387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:63387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:63387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:63387/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:63387/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:63387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "48d28025-c03e-4311-823f-d2c25e94e7dd",
              "parentUUID": "67fd7c78-8ce5-4593-a7f2-07aa1d7a957e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f716c0de-d79b-4502-8f7d-5f2f0c565c5c",
            "48d28025-c03e-4311-823f-d2c25e94e7dd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2921,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}