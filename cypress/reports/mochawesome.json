{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-14T21:44:57.057Z",
    "end": "2021-09-14T21:46:17.196Z",
    "duration": 80139,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3963a9d6-8acb-485a-939f-ec6b7d8a3051",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2bc5465e-efe7-456e-917e-db8a9af115e4",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 443,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "fb5a4bb1-fada-463a-ba2e-9758fe3689b1",
              "parentUUID": "2bc5465e-efe7-456e-917e-db8a9af115e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb5a4bb1-fada-463a-ba2e-9758fe3689b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 443,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "572de15d-428c-4f60-824c-9947ab670676",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "f22eb2ed-9724-4463-9781-aa3fb5550d1c",
              "parentUUID": "572de15d-428c-4f60-824c-9947ab670676",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "2620e8fd-6933-45e5-9162-27725eeb6181",
              "parentUUID": "572de15d-428c-4f60-824c-9947ab670676",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "edd7587b-9c73-490e-8063-271ee88e9ce1",
              "parentUUID": "572de15d-428c-4f60-824c-9947ab670676",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "20794411-0920-4b4e-b55f-7c4d4215d768",
              "parentUUID": "572de15d-428c-4f60-824c-9947ab670676",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "4c740fb6-a151-45b6-9366-2d5b00b367e9",
              "parentUUID": "572de15d-428c-4f60-824c-9947ab670676",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "279162a9-8966-46a9-84d0-69eb7ef9ee1a",
              "parentUUID": "572de15d-428c-4f60-824c-9947ab670676",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "2ee7f151-105c-4ef9-b710-cf8f46336248",
              "parentUUID": "572de15d-428c-4f60-824c-9947ab670676",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f22eb2ed-9724-4463-9781-aa3fb5550d1c",
            "2620e8fd-6933-45e5-9162-27725eeb6181",
            "edd7587b-9c73-490e-8063-271ee88e9ce1",
            "20794411-0920-4b4e-b55f-7c4d4215d768",
            "4c740fb6-a151-45b6-9366-2d5b00b367e9",
            "279162a9-8966-46a9-84d0-69eb7ef9ee1a",
            "2ee7f151-105c-4ef9-b710-cf8f46336248"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 951,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9f144cda-da28-46fe-9f61-92aeb2202742",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f7217c30-89ea-4409-b483-c68b65875dc8",
              "parentUUID": "9f144cda-da28-46fe-9f61-92aeb2202742",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "271c2fc6-1561-4e60-9460-cb62a653aaac",
              "parentUUID": "9f144cda-da28-46fe-9f61-92aeb2202742",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7217c30-89ea-4409-b483-c68b65875dc8",
            "271c2fc6-1561-4e60-9460-cb62a653aaac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 286,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7a0b984d-e37c-4508-b848-61c349a4bc5d",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "546a9c6a-7abc-4bd3-92b3-4cb1936438a6",
              "parentUUID": "7a0b984d-e37c-4508-b848-61c349a4bc5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "0aa626c8-255f-4a52-85f1-e6133ace25ac",
              "parentUUID": "7a0b984d-e37c-4508-b848-61c349a4bc5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "b0f00c85-e1ce-4999-94b9-8b8ccd2950ad",
              "parentUUID": "7a0b984d-e37c-4508-b848-61c349a4bc5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "559724c5-eec6-462b-8d6b-ee70163a8920",
              "parentUUID": "7a0b984d-e37c-4508-b848-61c349a4bc5d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "546a9c6a-7abc-4bd3-92b3-4cb1936438a6",
            "0aa626c8-255f-4a52-85f1-e6133ace25ac",
            "b0f00c85-e1ce-4999-94b9-8b8ccd2950ad",
            "559724c5-eec6-462b-8d6b-ee70163a8920"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 518,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ee051a46-45ad-466d-bdc8-341f3f823dd7",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "20a3a55e-88b9-406c-a4cb-bf88c8db2a9b",
              "parentUUID": "ee051a46-45ad-466d-bdc8-341f3f823dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "d59db6eb-b004-4592-9649-bd4e8c711896",
              "parentUUID": "ee051a46-45ad-466d-bdc8-341f3f823dd7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "20a3a55e-88b9-406c-a4cb-bf88c8db2a9b",
            "d59db6eb-b004-4592-9649-bd4e8c711896"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 538,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c378164a-04a7-4681-9152-2adfc8e3717a",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "8f380f9c-8240-4eaf-a865-d0aa9fd29a56",
              "parentUUID": "c378164a-04a7-4681-9152-2adfc8e3717a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "0f8ae053-7021-41dc-a4d6-3718527312ac",
              "parentUUID": "c378164a-04a7-4681-9152-2adfc8e3717a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8f380f9c-8240-4eaf-a865-d0aa9fd29a56",
            "0f8ae053-7021-41dc-a4d6-3718527312ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 170,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "01aa9ac5-f931-4120-a629-0ced4a32ed46",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "2da66a8c-abd1-4847-8d7e-176b66e19490",
              "parentUUID": "01aa9ac5-f931-4120-a629-0ced4a32ed46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8661,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "e21c9c6c-43ed-4b96-8c5f-30608f6e35c8",
              "parentUUID": "01aa9ac5-f931-4120-a629-0ced4a32ed46",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2da66a8c-abd1-4847-8d7e-176b66e19490",
            "e21c9c6c-43ed-4b96-8c5f-30608f6e35c8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9142,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7daebcd1-3399-4d23-8c5b-73beb01fb513",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "a2b5b238-76a9-4707-9a85-32958c6944e6",
              "parentUUID": "7daebcd1-3399-4d23-8c5b-73beb01fb513",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8611,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "1c71750a-5ebe-4fb3-a505-f09437c031d6",
              "parentUUID": "7daebcd1-3399-4d23-8c5b-73beb01fb513",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1385,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "14b65a54-ca9d-41bb-a20d-5bdd073cd78f",
              "parentUUID": "7daebcd1-3399-4d23-8c5b-73beb01fb513",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2b5b238-76a9-4707-9a85-32958c6944e6",
            "1c71750a-5ebe-4fb3-a505-f09437c031d6",
            "14b65a54-ca9d-41bb-a20d-5bdd073cd78f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12203,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5e6609b0-4a93-4561-a700-0c7c979cb0c5",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "d80865dc-3c3a-4e67-b606-bc9ab0568c41",
              "parentUUID": "5e6609b0-4a93-4561-a700-0c7c979cb0c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "e7cf9410-ec4e-43c3-bb30-4f80333a75f1",
              "parentUUID": "5e6609b0-4a93-4561-a700-0c7c979cb0c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "a1681924-51ef-4459-bc1a-9f38c9bede8e",
              "parentUUID": "5e6609b0-4a93-4561-a700-0c7c979cb0c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2353,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "535b1af5-ed98-4a4b-befd-4c339f94c9b0",
              "parentUUID": "5e6609b0-4a93-4561-a700-0c7c979cb0c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d80865dc-3c3a-4e67-b606-bc9ab0568c41",
            "e7cf9410-ec4e-43c3-bb30-4f80333a75f1",
            "a1681924-51ef-4459-bc1a-9f38c9bede8e",
            "535b1af5-ed98-4a4b-befd-4c339f94c9b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2679,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "456567a8-430c-4ade-adad-318c7dcaed2a",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4343,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40417/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40417/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40417/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40417/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40417/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40417/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40417/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40417/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "283878c3-211d-4181-b061-705323ca00d5",
              "parentUUID": "456567a8-430c-4ade-adad-318c7dcaed2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4302,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40417/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40417/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40417/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40417/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40417/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40417/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40417/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40417/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cf9eb6e5-f4cd-49af-b22f-4fb061ff692e",
              "parentUUID": "456567a8-430c-4ade-adad-318c7dcaed2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4285,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40417/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40417/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40417/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40417/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40417/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40417/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40417/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40417/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "09998bc8-5901-4406-9e03-d5879690b01d",
              "parentUUID": "456567a8-430c-4ade-adad-318c7dcaed2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4279,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40417/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40417/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40417/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40417/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40417/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40417/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40417/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40417/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7b0c725a-7afd-4c1c-9ff9-bfeddd6edc70",
              "parentUUID": "456567a8-430c-4ade-adad-318c7dcaed2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4294,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40417/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40417/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40417/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40417/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40417/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40417/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40417/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40417/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "82f8b834-4e01-4a68-8509-782594ee1245",
              "parentUUID": "456567a8-430c-4ade-adad-318c7dcaed2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4290,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40417/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40417/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40417/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40417/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40417/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40417/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40417/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40417/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "70083d00-af7d-450e-98fb-4a27a5cd1652",
              "parentUUID": "456567a8-430c-4ade-adad-318c7dcaed2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4271,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40417/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40417/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40417/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40417/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40417/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40417/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40417/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40417/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4404f1c6-211f-4a5f-bb39-3849a4052aec",
              "parentUUID": "456567a8-430c-4ade-adad-318c7dcaed2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4306,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40417/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40417/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40417/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40417/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40417/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40417/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40417/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40417/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "aceccc79-3f85-4dd6-b337-26ae578567a5",
              "parentUUID": "456567a8-430c-4ade-adad-318c7dcaed2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4297,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40417/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40417/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40417/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40417/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40417/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40417/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40417/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40417/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7265044f-ec77-4a58-b323-217d4d113359",
              "parentUUID": "456567a8-430c-4ade-adad-318c7dcaed2a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "283878c3-211d-4181-b061-705323ca00d5",
            "cf9eb6e5-f4cd-49af-b22f-4fb061ff692e",
            "09998bc8-5901-4406-9e03-d5879690b01d",
            "7b0c725a-7afd-4c1c-9ff9-bfeddd6edc70",
            "82f8b834-4e01-4a68-8509-782594ee1245",
            "70083d00-af7d-450e-98fb-4a27a5cd1652",
            "4404f1c6-211f-4a5f-bb39-3849a4052aec",
            "aceccc79-3f85-4dd6-b337-26ae578567a5",
            "7265044f-ec77-4a58-b323-217d4d113359"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38667,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1f02fa0f-6164-4c47-9219-9af5734b671d",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4290,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40417/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40417/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40417/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40417/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40417/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40417/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40417/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40417/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3392a248-3ae6-4b5b-bfbe-43fdfc78ac36",
              "parentUUID": "1f02fa0f-6164-4c47-9219-9af5734b671d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4276,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40417/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40417/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40417/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40417/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40417/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40417/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40417/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40417/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "314b3cf8-a3c1-40e7-a8ce-cd4b7a15b60b",
              "parentUUID": "1f02fa0f-6164-4c47-9219-9af5734b671d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4276,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40417/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40417/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40417/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40417/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40417/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40417/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40417/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40417/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40417/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fac6aca3-8338-468e-9521-b4f2ab88b322",
              "parentUUID": "1f02fa0f-6164-4c47-9219-9af5734b671d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3392a248-3ae6-4b5b-bfbe-43fdfc78ac36",
            "314b3cf8-a3c1-40e7-a8ce-cd4b7a15b60b",
            "fac6aca3-8338-468e-9521-b4f2ab88b322"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12842,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7c46c354-f044-4cb7-9f10-68b44fb36382",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 369,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:40417/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:40417/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:40417/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:40417/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:40417/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:40417/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40417/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40417/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:40417/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40417/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "0d07d251-2a66-4bc1-a329-2f7b64fa9248",
              "parentUUID": "7c46c354-f044-4cb7-9f10-68b44fb36382",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 356,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:40417/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:40417/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:40417/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:40417/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:40417/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:40417/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:40417/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40417/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40417/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:40417/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40417/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40417/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "3b6fea7e-a0a7-4de4-b40c-09e2fe7ddc72",
              "parentUUID": "7c46c354-f044-4cb7-9f10-68b44fb36382",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0d07d251-2a66-4bc1-a329-2f7b64fa9248",
            "3b6fea7e-a0a7-4de4-b40c-09e2fe7ddc72"
          ],
          "pending": [],
          "skipped": [],
          "duration": 725,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}