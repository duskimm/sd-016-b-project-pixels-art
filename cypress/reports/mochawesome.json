{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-09-10T22:27:18.557Z",
    "end": "2021-09-10T22:29:29.420Z",
    "duration": 130863,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "89460d80-e7b2-431f-90ae-ec47355d5bef",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "93739ad6-64fd-4e71-a90f-a4c80074401a",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 919,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "26b4e7c1-de9d-4a6a-910f-ec9e02fd2235",
              "parentUUID": "93739ad6-64fd-4e71-a90f-a4c80074401a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26b4e7c1-de9d-4a6a-910f-ec9e02fd2235"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 919,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d2f5252a-fc54-42d8-82d3-32fe1ba80977",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 779,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "696def9b-bf0f-4808-85e0-b3b9b13e7a90",
              "parentUUID": "d2f5252a-fc54-42d8-82d3-32fe1ba80977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 680,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "1901c40d-997f-4644-bbf0-8dc1f95106c0",
              "parentUUID": "d2f5252a-fc54-42d8-82d3-32fe1ba80977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 538,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "2ca13c9c-5fdf-4304-bfd9-9eb8cf175693",
              "parentUUID": "d2f5252a-fc54-42d8-82d3-32fe1ba80977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "af8f7b53-a79b-4360-aa2b-f7154649394f",
              "parentUUID": "d2f5252a-fc54-42d8-82d3-32fe1ba80977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "6c568fec-0471-46c3-9fb6-7a869549db3b",
              "parentUUID": "d2f5252a-fc54-42d8-82d3-32fe1ba80977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 401,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "a6cb8cfc-81b5-4a71-a498-72a45e0c5fb1",
              "parentUUID": "d2f5252a-fc54-42d8-82d3-32fe1ba80977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "1226ebdf-04de-42b4-8dc6-c112107128b3",
              "parentUUID": "d2f5252a-fc54-42d8-82d3-32fe1ba80977",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "696def9b-bf0f-4808-85e0-b3b9b13e7a90",
            "1901c40d-997f-4644-bbf0-8dc1f95106c0",
            "2ca13c9c-5fdf-4304-bfd9-9eb8cf175693",
            "af8f7b53-a79b-4360-aa2b-f7154649394f",
            "6c568fec-0471-46c3-9fb6-7a869549db3b",
            "a6cb8cfc-81b5-4a71-a498-72a45e0c5fb1",
            "1226ebdf-04de-42b4-8dc6-c112107128b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3768,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b149824-af0d-4c30-9a14-66ede4d4b3f3",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 375,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "a8edecba-a56e-4f6e-b6b3-f3652f0189af",
              "parentUUID": "6b149824-af0d-4c30-9a14-66ede4d4b3f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 904,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "bc41b8c6-53ba-4787-9ba5-ef22245fba9d",
              "parentUUID": "6b149824-af0d-4c30-9a14-66ede4d4b3f3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8edecba-a56e-4f6e-b6b3-f3652f0189af",
            "bc41b8c6-53ba-4787-9ba5-ef22245fba9d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1279,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6186ac83-f024-48fa-91c6-7500ee26d625",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 346,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "4058a018-7f96-4905-9ff1-c51391583ebe",
              "parentUUID": "6186ac83-f024-48fa-91c6-7500ee26d625",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "5e00ecac-74ab-40c1-b26f-7fae25579a7d",
              "parentUUID": "6186ac83-f024-48fa-91c6-7500ee26d625",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 621,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "6ab1eea1-aa3c-4581-baa5-7f6799bc4ee1",
              "parentUUID": "6186ac83-f024-48fa-91c6-7500ee26d625",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 608,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "d2b89048-bca9-4f61-9b3a-becc9753caa9",
              "parentUUID": "6186ac83-f024-48fa-91c6-7500ee26d625",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4058a018-7f96-4905-9ff1-c51391583ebe",
            "5e00ecac-74ab-40c1-b26f-7fae25579a7d",
            "6ab1eea1-aa3c-4581-baa5-7f6799bc4ee1",
            "d2b89048-bca9-4f61-9b3a-becc9753caa9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2267,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d139793b-e12b-4655-93e7-63891085a956",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 1028,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "221d84ee-199b-4e43-a778-284ab490cbfc",
              "parentUUID": "d139793b-e12b-4655-93e7-63891085a956",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 1158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "7f389160-e21b-4824-9a75-732cb4e41ab5",
              "parentUUID": "d139793b-e12b-4655-93e7-63891085a956",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "221d84ee-199b-4e43-a778-284ab490cbfc",
            "7f389160-e21b-4824-9a75-732cb4e41ab5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2186,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "69b1e40c-468b-466c-b7e6-3191c49b1758",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 617,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d04200d5-7821-4e0d-949b-df67c2127b28",
              "parentUUID": "69b1e40c-468b-466c-b7e6-3191c49b1758",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "060553f1-47c8-4525-8d42-5f3722bfd64e",
              "parentUUID": "69b1e40c-468b-466c-b7e6-3191c49b1758",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d04200d5-7821-4e0d-949b-df67c2127b28",
            "060553f1-47c8-4525-8d42-5f3722bfd64e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 983,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ff789032-2cbe-4a55-8956-b84c3d6a357b",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 1020,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "914f1de1-e777-4ca0-8c95-6ce61a622d56",
              "parentUUID": "ff789032-2cbe-4a55-8956-b84c3d6a357b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 11396,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "3a3b934c-8ff9-488d-93df-36486e601ff0",
              "parentUUID": "ff789032-2cbe-4a55-8956-b84c3d6a357b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "914f1de1-e777-4ca0-8c95-6ce61a622d56",
            "3a3b934c-8ff9-488d-93df-36486e601ff0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12416,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2b1e9a17-7dcb-49d5-b661-94c509b416f8",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 3214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "c1bf15fa-1845-40bb-9e58-04590e8bb529",
              "parentUUID": "2b1e9a17-7dcb-49d5-b661-94c509b416f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 11374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "94e37ac9-d7bf-4261-8410-bafe4be2f45c",
              "parentUUID": "2b1e9a17-7dcb-49d5-b661-94c509b416f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 3995,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "07911193-0409-4843-ad37-ebbb02487c56",
              "parentUUID": "2b1e9a17-7dcb-49d5-b661-94c509b416f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c1bf15fa-1845-40bb-9e58-04590e8bb529",
            "94e37ac9-d7bf-4261-8410-bafe4be2f45c",
            "07911193-0409-4843-ad37-ebbb02487c56"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18583,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "963f2793-56f2-471e-8c99-c4749893b147",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 425,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "d2a9af13-fee5-48a0-9e1c-d69fb913f61e",
              "parentUUID": "963f2793-56f2-471e-8c99-c4749893b147",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "4ac83e3c-8226-471d-92af-e90376752472",
              "parentUUID": "963f2793-56f2-471e-8c99-c4749893b147",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 385,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "b92e99e0-b9de-4a8c-aa47-1a415ed9d4cd",
              "parentUUID": "963f2793-56f2-471e-8c99-c4749893b147",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 3617,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "06a3df0f-dc5a-487d-99a7-94f37629a262",
              "parentUUID": "963f2793-56f2-471e-8c99-c4749893b147",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2a9af13-fee5-48a0-9e1c-d69fb913f61e",
            "4ac83e3c-8226-471d-92af-e90376752472",
            "b92e99e0-b9de-4a8c-aa47-1a415ed9d4cd",
            "06a3df0f-dc5a-487d-99a7-94f37629a262"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4699,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b6410d48-8958-45c9-8843-a61f61408954",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4996,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43117/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43117/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43117/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43117/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43117/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43117/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43117/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43117/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43117/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "28e75c98-8aa6-4b84-8430-8b3b43b71f6e",
              "parentUUID": "b6410d48-8958-45c9-8843-a61f61408954",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5431,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43117/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43117/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43117/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43117/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43117/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43117/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43117/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43117/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43117/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7b329f4a-c62b-40ed-89a1-d8b46e0dfb47",
              "parentUUID": "b6410d48-8958-45c9-8843-a61f61408954",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4928,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43117/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43117/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43117/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43117/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43117/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43117/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43117/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43117/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43117/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1dd0b7cf-0919-4b4c-8e83-3fb98eabd7f8",
              "parentUUID": "b6410d48-8958-45c9-8843-a61f61408954",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 5954,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43117/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43117/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43117/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43117/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43117/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43117/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43117/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43117/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43117/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "80854dd3-1521-4140-97a9-24ffbbd7fc64",
              "parentUUID": "b6410d48-8958-45c9-8843-a61f61408954",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 6590,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43117/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43117/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43117/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43117/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43117/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43117/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43117/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43117/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43117/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "85814b28-076d-4d65-8046-4823dc1dafb3",
              "parentUUID": "b6410d48-8958-45c9-8843-a61f61408954",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 6269,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43117/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43117/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43117/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43117/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43117/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43117/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43117/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43117/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43117/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6c5d84fb-7013-49ab-9dc4-e7f364f0dc38",
              "parentUUID": "b6410d48-8958-45c9-8843-a61f61408954",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 6136,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43117/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43117/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43117/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43117/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43117/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43117/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43117/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43117/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43117/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e0e8626a-4431-4c48-8aec-5d64d7959f65",
              "parentUUID": "b6410d48-8958-45c9-8843-a61f61408954",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 6274,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43117/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43117/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43117/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43117/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43117/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43117/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43117/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43117/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43117/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e439d41a-60bb-4a1f-834f-ef70985ea690",
              "parentUUID": "b6410d48-8958-45c9-8843-a61f61408954",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 6440,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43117/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43117/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43117/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43117/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43117/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43117/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43117/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43117/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43117/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7359d936-83b5-4801-a8f9-1f34796a8853",
              "parentUUID": "b6410d48-8958-45c9-8843-a61f61408954",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "28e75c98-8aa6-4b84-8430-8b3b43b71f6e",
            "7b329f4a-c62b-40ed-89a1-d8b46e0dfb47",
            "1dd0b7cf-0919-4b4c-8e83-3fb98eabd7f8",
            "80854dd3-1521-4140-97a9-24ffbbd7fc64",
            "85814b28-076d-4d65-8046-4823dc1dafb3",
            "6c5d84fb-7013-49ab-9dc4-e7f364f0dc38",
            "e0e8626a-4431-4c48-8aec-5d64d7959f65",
            "e439d41a-60bb-4a1f-834f-ef70985ea690",
            "7359d936-83b5-4801-a8f9-1f34796a8853"
          ],
          "pending": [],
          "skipped": [],
          "duration": 53018,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ffff2bc6-53bf-48f1-84b7-77206c17c254",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 6486,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43117/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43117/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43117/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43117/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43117/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43117/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43117/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43117/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43117/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "50e95659-3616-47be-a5f8-5b756cc7e75a",
              "parentUUID": "ffff2bc6-53bf-48f1-84b7-77206c17c254",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 6829,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43117/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43117/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43117/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43117/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43117/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43117/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43117/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43117/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43117/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d75d5e2f-4b0d-44c4-8adb-96b808e5c099",
              "parentUUID": "ffff2bc6-53bf-48f1-84b7-77206c17c254",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 6480,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43117/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43117/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43117/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43117/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43117/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43117/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43117/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43117/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43117/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43117/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43117/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7ea2d57f-1c6b-47bf-a856-73f09d46f5eb",
              "parentUUID": "ffff2bc6-53bf-48f1-84b7-77206c17c254",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "50e95659-3616-47be-a5f8-5b756cc7e75a",
            "d75d5e2f-4b0d-44c4-8adb-96b808e5c099",
            "7ea2d57f-1c6b-47bf-a856-73f09d46f5eb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 19795,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b844650f-a704-404e-9691-b2519dcf8d0e",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 5758,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "c4cdf961-7879-44dd-b2f0-894dbada0f4c",
              "parentUUID": "b844650f-a704-404e-9691-b2519dcf8d0e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1604,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "2ea99e3f-1a2b-40e5-b994-f3b1853d20fa",
              "parentUUID": "b844650f-a704-404e-9691-b2519dcf8d0e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c4cdf961-7879-44dd-b2f0-894dbada0f4c",
            "2ea99e3f-1a2b-40e5-b994-f3b1853d20fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7362,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}