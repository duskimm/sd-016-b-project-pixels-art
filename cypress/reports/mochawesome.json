{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-12T17:02:10.541Z",
    "end": "2021-09-12T17:03:56.124Z",
    "duration": 105583,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "86e62b71-87af-4ac0-8aeb-7f98f3648730",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c4adfc95-6776-443a-b780-1aed98d77dfd",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 810,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "6e064f7f-dfb1-4ab1-90e0-e4565c3f9d0e",
              "parentUUID": "c4adfc95-6776-443a-b780-1aed98d77dfd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6e064f7f-dfb1-4ab1-90e0-e4565c3f9d0e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 810,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "75d17505-b8f9-4c07-9cca-12fe476ebab7",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 369,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "bbb38e18-ef78-477e-841a-780bd1f0b318",
              "parentUUID": "75d17505-b8f9-4c07-9cca-12fe476ebab7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 348,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "8076e025-0165-4918-8880-a441382a026c",
              "parentUUID": "75d17505-b8f9-4c07-9cca-12fe476ebab7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 469,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "7d4ce663-3f5e-4dde-9e30-c73e64e5e722",
              "parentUUID": "75d17505-b8f9-4c07-9cca-12fe476ebab7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "c43daea3-f10f-49a4-8543-0f8e229d6042",
              "parentUUID": "75d17505-b8f9-4c07-9cca-12fe476ebab7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "b98a2b2d-ed16-4e91-a7fb-28601f8ed079",
              "parentUUID": "75d17505-b8f9-4c07-9cca-12fe476ebab7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 252,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "1f2b6d44-5b76-4e0b-99dd-933bef99b71d",
              "parentUUID": "75d17505-b8f9-4c07-9cca-12fe476ebab7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "4543ec7b-8ebe-4e0c-9534-991405e59719",
              "parentUUID": "75d17505-b8f9-4c07-9cca-12fe476ebab7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbb38e18-ef78-477e-841a-780bd1f0b318",
            "8076e025-0165-4918-8880-a441382a026c",
            "7d4ce663-3f5e-4dde-9e30-c73e64e5e722",
            "c43daea3-f10f-49a4-8543-0f8e229d6042",
            "b98a2b2d-ed16-4e91-a7fb-28601f8ed079",
            "1f2b6d44-5b76-4e0b-99dd-933bef99b71d",
            "4543ec7b-8ebe-4e0c-9534-991405e59719"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2348,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d35042f0-dc60-4100-80cf-1bbf91710a85",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "46554c07-d906-4c71-88c5-55b29f37f311",
              "parentUUID": "d35042f0-dc60-4100-80cf-1bbf91710a85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 558,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "8bdbf545-568e-4bf4-9c7a-84c7c643b7fc",
              "parentUUID": "d35042f0-dc60-4100-80cf-1bbf91710a85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46554c07-d906-4c71-88c5-55b29f37f311",
            "8bdbf545-568e-4bf4-9c7a-84c7c643b7fc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 718,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5ad3e78a-e774-42c7-954b-a409525dfa09",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 293,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "b2721722-8867-423a-a25b-f9cb085f51aa",
              "parentUUID": "5ad3e78a-e774-42c7-954b-a409525dfa09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "cf6ac3a9-9b3b-49c6-9e89-2f55a2c4564c",
              "parentUUID": "5ad3e78a-e774-42c7-954b-a409525dfa09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 518,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "856a0825-e1fa-45e3-b29f-c0792fb37c21",
              "parentUUID": "5ad3e78a-e774-42c7-954b-a409525dfa09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 306,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "ecf0110e-7814-4226-9021-928376d9a0b3",
              "parentUUID": "5ad3e78a-e774-42c7-954b-a409525dfa09",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b2721722-8867-423a-a25b-f9cb085f51aa",
            "cf6ac3a9-9b3b-49c6-9e89-2f55a2c4564c",
            "856a0825-e1fa-45e3-b29f-c0792fb37c21",
            "ecf0110e-7814-4226-9021-928376d9a0b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1441,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bf6df8fd-c583-49fa-9c4b-1e3861d6e6fa",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 799,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "478dfbb6-5f49-4326-a354-af622acb393d",
              "parentUUID": "bf6df8fd-c583-49fa-9c4b-1e3861d6e6fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 764,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "db71315e-4738-4f3f-9efb-c766ce4033de",
              "parentUUID": "bf6df8fd-c583-49fa-9c4b-1e3861d6e6fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "478dfbb6-5f49-4326-a354-af622acb393d",
            "db71315e-4738-4f3f-9efb-c766ce4033de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1563,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9373c109-c968-4699-bdae-480e98a1fc30",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "5438dcc6-35dd-4196-8111-aa12d13bccf8",
              "parentUUID": "9373c109-c968-4699-bdae-480e98a1fc30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "f4020644-72d9-4496-9534-e448be4630f8",
              "parentUUID": "9373c109-c968-4699-bdae-480e98a1fc30",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5438dcc6-35dd-4196-8111-aa12d13bccf8",
            "f4020644-72d9-4496-9534-e448be4630f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 570,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "87e3df29-4c68-4730-b591-d908aafe85b1",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 699,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "e14597b6-19a9-4b5f-af30-be438b80de8a",
              "parentUUID": "87e3df29-4c68-4730-b591-d908aafe85b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 10331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "1656591a-c556-456f-9df1-1c035ea9df4b",
              "parentUUID": "87e3df29-4c68-4730-b591-d908aafe85b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e14597b6-19a9-4b5f-af30-be438b80de8a",
            "1656591a-c556-456f-9df1-1c035ea9df4b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11030,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "46673708-10ef-4016-9629-5bcf0ca9c6b5",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2687,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "7f06d86e-dc38-45b5-8573-5ba51aa95ec4",
              "parentUUID": "46673708-10ef-4016-9629-5bcf0ca9c6b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 10730,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "a993c90d-6599-4d48-96f9-34398aca9cdd",
              "parentUUID": "46673708-10ef-4016-9629-5bcf0ca9c6b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 5018,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "78ff20ec-bfa5-43c4-a59e-79c7921c69d5",
              "parentUUID": "46673708-10ef-4016-9629-5bcf0ca9c6b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f06d86e-dc38-45b5-8573-5ba51aa95ec4",
            "a993c90d-6599-4d48-96f9-34398aca9cdd",
            "78ff20ec-bfa5-43c4-a59e-79c7921c69d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18435,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "52f2a9fa-3919-4191-9c26-572794867387",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 656,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "66278802-b7fe-47f0-9367-bd9de3f39fb4",
              "parentUUID": "52f2a9fa-3919-4191-9c26-572794867387",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 755,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "647322c6-fe17-40d5-bebf-5e99013f736c",
              "parentUUID": "52f2a9fa-3919-4191-9c26-572794867387",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "d30f4e77-72a1-4f20-9f28-1aa08421107c",
              "parentUUID": "52f2a9fa-3919-4191-9c26-572794867387",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 3784,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "67c39cda-0865-482d-b12a-6984767ae31d",
              "parentUUID": "52f2a9fa-3919-4191-9c26-572794867387",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66278802-b7fe-47f0-9367-bd9de3f39fb4",
            "647322c6-fe17-40d5-bebf-5e99013f736c",
            "d30f4e77-72a1-4f20-9f28-1aa08421107c",
            "67c39cda-0865-482d-b12a-6984767ae31d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5527,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9c2fc18a-2050-4ad0-b9e6-02a202404d6e",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4595,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39405/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39405/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39405/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39405/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39405/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39405/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39405/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39405/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d573bbb6-6540-4697-b053-b5df8468a27d",
              "parentUUID": "9c2fc18a-2050-4ad0-b9e6-02a202404d6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4874,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39405/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39405/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39405/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39405/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39405/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39405/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39405/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39405/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2490916a-6d6c-4247-b155-52c4533a6a9b",
              "parentUUID": "9c2fc18a-2050-4ad0-b9e6-02a202404d6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4859,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39405/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39405/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39405/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39405/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39405/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39405/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39405/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39405/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "60bfe9e6-a850-4c77-babe-520545bc2256",
              "parentUUID": "9c2fc18a-2050-4ad0-b9e6-02a202404d6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4704,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39405/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39405/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39405/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39405/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39405/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39405/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39405/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39405/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "03f7e1dc-e34d-4065-8ba6-70fc1070926f",
              "parentUUID": "9c2fc18a-2050-4ad0-b9e6-02a202404d6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 5059,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39405/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39405/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39405/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39405/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39405/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39405/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39405/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39405/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9421a499-b756-487d-80b8-15c02663f8bd",
              "parentUUID": "9c2fc18a-2050-4ad0-b9e6-02a202404d6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4786,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39405/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39405/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39405/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39405/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39405/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39405/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39405/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39405/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c9e38c54-56b5-4171-90cc-5a4d0a0ef7ef",
              "parentUUID": "9c2fc18a-2050-4ad0-b9e6-02a202404d6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4725,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39405/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39405/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39405/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39405/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39405/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39405/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39405/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39405/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "30ba55bd-95fa-46d6-be1b-9eb12515f260",
              "parentUUID": "9c2fc18a-2050-4ad0-b9e6-02a202404d6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4989,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39405/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39405/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39405/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39405/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39405/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39405/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39405/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39405/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "30abc596-8e5d-42c4-bf32-8896b8098d9f",
              "parentUUID": "9c2fc18a-2050-4ad0-b9e6-02a202404d6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4862,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39405/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39405/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39405/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39405/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39405/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39405/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39405/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39405/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "607819d0-054f-4bb2-9146-c1e56bf9c215",
              "parentUUID": "9c2fc18a-2050-4ad0-b9e6-02a202404d6e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d573bbb6-6540-4697-b053-b5df8468a27d",
            "2490916a-6d6c-4247-b155-52c4533a6a9b",
            "60bfe9e6-a850-4c77-babe-520545bc2256",
            "03f7e1dc-e34d-4065-8ba6-70fc1070926f",
            "9421a499-b756-487d-80b8-15c02663f8bd",
            "c9e38c54-56b5-4171-90cc-5a4d0a0ef7ef",
            "30ba55bd-95fa-46d6-be1b-9eb12515f260",
            "30abc596-8e5d-42c4-bf32-8896b8098d9f",
            "607819d0-054f-4bb2-9146-c1e56bf9c215"
          ],
          "pending": [],
          "skipped": [],
          "duration": 43453,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "97fec31c-4c32-4424-bfba-23ffe00bafd2",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4862,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39405/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39405/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39405/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39405/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39405/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39405/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39405/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39405/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "987bb8f9-5016-4cac-b230-4eff873b9219",
              "parentUUID": "97fec31c-4c32-4424-bfba-23ffe00bafd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4925,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39405/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39405/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39405/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39405/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39405/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39405/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39405/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39405/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ed489174-40f1-45c6-9015-a96922a92315",
              "parentUUID": "97fec31c-4c32-4424-bfba-23ffe00bafd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5058,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39405/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39405/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39405/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39405/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39405/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39405/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39405/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39405/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39405/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3bbdf05b-93a3-4c42-b12e-dcb7990c71ad",
              "parentUUID": "97fec31c-4c32-4424-bfba-23ffe00bafd2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "987bb8f9-5016-4cac-b230-4eff873b9219",
            "ed489174-40f1-45c6-9015-a96922a92315",
            "3bbdf05b-93a3-4c42-b12e-dcb7990c71ad"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14845,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0250b79d-26c9-433e-ae70-f053850c2aa9",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 947,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39405/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39405/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39405/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39405/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39405/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39405/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39405/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39405/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39405/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39405/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "d9cac01b-fe87-4a2d-88d4-e453385a356c",
              "parentUUID": "0250b79d-26c9-433e-ae70-f053850c2aa9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1113,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39405/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39405/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39405/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39405/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39405/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39405/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39405/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39405/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39405/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39405/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39405/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39405/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "6287fbf1-f7ce-4995-bc3c-01eb16ad916e",
              "parentUUID": "0250b79d-26c9-433e-ae70-f053850c2aa9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d9cac01b-fe87-4a2d-88d4-e453385a356c",
            "6287fbf1-f7ce-4995-bc3c-01eb16ad916e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2060,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}