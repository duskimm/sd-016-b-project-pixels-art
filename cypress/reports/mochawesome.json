{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-12T22:14:32.864Z",
    "end": "2021-09-12T22:15:57.630Z",
    "duration": 84766,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ef88b62d-6fc7-484b-83e0-3012305e0406",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c2e5ad24-b0d3-408c-bd32-314805e1125c",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "9427f74c-bba6-461d-b582-788a00e46b05",
              "parentUUID": "c2e5ad24-b0d3-408c-bd32-314805e1125c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9427f74c-bba6-461d-b582-788a00e46b05"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 246,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ebc62dd4-0932-4db1-b917-ddd2f49b79d4",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "527638d3-586f-48a9-9b7d-fd7370bd6631",
              "parentUUID": "ebc62dd4-0932-4db1-b917-ddd2f49b79d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "d7e99489-e215-42ab-831b-38fa6827fd91",
              "parentUUID": "ebc62dd4-0932-4db1-b917-ddd2f49b79d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "c44ba686-f467-4281-9745-8600002374f3",
              "parentUUID": "ebc62dd4-0932-4db1-b917-ddd2f49b79d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "5dd1a1fa-a64f-4a96-9fb5-524c0939d43c",
              "parentUUID": "ebc62dd4-0932-4db1-b917-ddd2f49b79d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "b8a355e9-a624-4aab-84c5-bfc926e4de4c",
              "parentUUID": "ebc62dd4-0932-4db1-b917-ddd2f49b79d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "c635e95a-8401-4d13-88ef-d27b26582ec0",
              "parentUUID": "ebc62dd4-0932-4db1-b917-ddd2f49b79d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "b5ca16b8-41af-4e73-93b0-07f960eb91c8",
              "parentUUID": "ebc62dd4-0932-4db1-b917-ddd2f49b79d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "527638d3-586f-48a9-9b7d-fd7370bd6631",
            "d7e99489-e215-42ab-831b-38fa6827fd91",
            "c44ba686-f467-4281-9745-8600002374f3",
            "5dd1a1fa-a64f-4a96-9fb5-524c0939d43c",
            "b8a355e9-a624-4aab-84c5-bfc926e4de4c",
            "c635e95a-8401-4d13-88ef-d27b26582ec0",
            "b5ca16b8-41af-4e73-93b0-07f960eb91c8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1212,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "72a38e5d-3b18-4945-a11d-258570bdcefe",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "53c94352-c8e1-4323-b2cc-de33e143a703",
              "parentUUID": "72a38e5d-3b18-4945-a11d-258570bdcefe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 252,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "95aa2ccf-6501-4840-8030-72ad9a401719",
              "parentUUID": "72a38e5d-3b18-4945-a11d-258570bdcefe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53c94352-c8e1-4323-b2cc-de33e143a703",
            "95aa2ccf-6501-4840-8030-72ad9a401719"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 396,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1755b449-29b1-4241-af0a-cac5f6a822cc",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "9e1e8340-2159-4d52-b6a7-e28d901d6166",
              "parentUUID": "1755b449-29b1-4241-af0a-cac5f6a822cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "345301ec-46ef-4e01-9bcd-065cb8a6fa14",
              "parentUUID": "1755b449-29b1-4241-af0a-cac5f6a822cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 225,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "313657a1-c126-476f-9ed3-5307e63adeb4",
              "parentUUID": "1755b449-29b1-4241-af0a-cac5f6a822cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "5f1b479b-5a2c-42b3-88d0-2354d6a3d8a6",
              "parentUUID": "1755b449-29b1-4241-af0a-cac5f6a822cc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e1e8340-2159-4d52-b6a7-e28d901d6166",
            "345301ec-46ef-4e01-9bcd-065cb8a6fa14",
            "313657a1-c126-476f-9ed3-5307e63adeb4",
            "5f1b479b-5a2c-42b3-88d0-2354d6a3d8a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 635,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d9b5f510-8278-4098-9f04-f349495aee39",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 338,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "e581e66f-dc26-4ec8-8c1b-98eb5b5b3a23",
              "parentUUID": "d9b5f510-8278-4098-9f04-f349495aee39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "897b58c4-e924-48fc-aa0c-f253d26291f5",
              "parentUUID": "d9b5f510-8278-4098-9f04-f349495aee39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e581e66f-dc26-4ec8-8c1b-98eb5b5b3a23",
            "897b58c4-e924-48fc-aa0c-f253d26291f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 664,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a43ced16-f7a0-4a8a-a218-f39671c5d0ce",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "74c4d582-cc41-4c5d-8835-1fe672b0cd36",
              "parentUUID": "a43ced16-f7a0-4a8a-a218-f39671c5d0ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "d8d30f84-fdfb-455c-8678-af5c513e0f72",
              "parentUUID": "a43ced16-f7a0-4a8a-a218-f39671c5d0ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74c4d582-cc41-4c5d-8835-1fe672b0cd36",
            "d8d30f84-fdfb-455c-8678-af5c513e0f72"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 233,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ff22d9b6-2d84-42c4-af3e-2ef604a091e6",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 528,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "d4d6cf2b-fc38-4c20-a715-030e5e5bc100",
              "parentUUID": "ff22d9b6-2d84-42c4-af3e-2ef604a091e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "4a35d31c-324d-452e-9af1-e33cb1fb5c67",
              "parentUUID": "ff22d9b6-2d84-42c4-af3e-2ef604a091e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4d6cf2b-fc38-4c20-a715-030e5e5bc100",
            "4a35d31c-324d-452e-9af1-e33cb1fb5c67"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dab92d37-5c3f-4c51-9f64-435a5f32f0c7",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2334,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "0f8ed24a-4ce7-499b-ae57-7aa31016c0c1",
              "parentUUID": "dab92d37-5c3f-4c51-9f64-435a5f32f0c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "94ced0a8-6319-4a2d-af15-855a14e2a5c2",
              "parentUUID": "dab92d37-5c3f-4c51-9f64-435a5f32f0c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2047,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "48e11fc2-7f31-46ca-b9a6-4d313d2d6dec",
              "parentUUID": "dab92d37-5c3f-4c51-9f64-435a5f32f0c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f8ed24a-4ce7-499b-ae57-7aa31016c0c1",
            "94ced0a8-6319-4a2d-af15-855a14e2a5c2",
            "48e11fc2-7f31-46ca-b9a6-4d313d2d6dec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13489,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4aea63cc-557b-4a08-b8fc-42c51529d721",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "9a8fa873-245c-4e9d-ba67-70c1381895f6",
              "parentUUID": "4aea63cc-557b-4a08-b8fc-42c51529d721",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "27604830-db18-4803-8317-d8d630b94705",
              "parentUUID": "4aea63cc-557b-4a08-b8fc-42c51529d721",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "ea7f6f75-6cd7-4b10-812b-329834cfe694",
              "parentUUID": "4aea63cc-557b-4a08-b8fc-42c51529d721",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2644,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "9547d339-b697-4ad6-b181-927f5594f21e",
              "parentUUID": "4aea63cc-557b-4a08-b8fc-42c51529d721",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9a8fa873-245c-4e9d-ba67-70c1381895f6",
            "27604830-db18-4803-8317-d8d630b94705",
            "ea7f6f75-6cd7-4b10-812b-329834cfe694",
            "9547d339-b697-4ad6-b181-927f5594f21e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3069,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0e9ee8db-5cd1-48a5-8728-b979e66c611a",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4438,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33363/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33363/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33363/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33363/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33363/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33363/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33363/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33363/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8395b11e-cb54-46df-8025-256228c13dde",
              "parentUUID": "0e9ee8db-5cd1-48a5-8728-b979e66c611a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4391,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33363/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33363/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33363/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33363/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33363/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33363/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33363/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33363/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "09351096-f5e9-46d5-b620-04ac654bc432",
              "parentUUID": "0e9ee8db-5cd1-48a5-8728-b979e66c611a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4396,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33363/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33363/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33363/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33363/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33363/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33363/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33363/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33363/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2a0e463f-49bb-4623-a35a-b21879f58bec",
              "parentUUID": "0e9ee8db-5cd1-48a5-8728-b979e66c611a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4407,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33363/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33363/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33363/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33363/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33363/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33363/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33363/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33363/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c7b39337-3ed8-4024-b292-aecd17a24d4c",
              "parentUUID": "0e9ee8db-5cd1-48a5-8728-b979e66c611a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4410,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33363/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33363/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33363/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33363/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33363/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33363/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33363/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33363/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b7e1f97b-0341-4f3e-a2b9-9d8ad7162a86",
              "parentUUID": "0e9ee8db-5cd1-48a5-8728-b979e66c611a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4518,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33363/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33363/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33363/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33363/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33363/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33363/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33363/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33363/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1349c1e0-c35b-4808-ba97-2a78aecb2a75",
              "parentUUID": "0e9ee8db-5cd1-48a5-8728-b979e66c611a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4439,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33363/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33363/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33363/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33363/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33363/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33363/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33363/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33363/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "17892347-6f16-4c0b-a8ba-7a940693a161",
              "parentUUID": "0e9ee8db-5cd1-48a5-8728-b979e66c611a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4392,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33363/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33363/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33363/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33363/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33363/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33363/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33363/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33363/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "26de4395-9332-4c83-b0e4-253fc1747615",
              "parentUUID": "0e9ee8db-5cd1-48a5-8728-b979e66c611a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4424,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33363/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33363/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33363/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33363/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33363/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33363/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33363/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33363/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2dd458b8-70a7-4e69-839d-4ebe7f3ee901",
              "parentUUID": "0e9ee8db-5cd1-48a5-8728-b979e66c611a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8395b11e-cb54-46df-8025-256228c13dde",
            "09351096-f5e9-46d5-b620-04ac654bc432",
            "2a0e463f-49bb-4623-a35a-b21879f58bec",
            "c7b39337-3ed8-4024-b292-aecd17a24d4c",
            "b7e1f97b-0341-4f3e-a2b9-9d8ad7162a86",
            "1349c1e0-c35b-4808-ba97-2a78aecb2a75",
            "17892347-6f16-4c0b-a8ba-7a940693a161",
            "26de4395-9332-4c83-b0e4-253fc1747615",
            "2dd458b8-70a7-4e69-839d-4ebe7f3ee901"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39815,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "914ff4fd-ebd4-46cb-b695-10fd52bffa7c",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4425,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33363/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33363/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33363/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33363/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33363/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33363/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33363/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33363/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "37a24ee8-4a69-4b6a-9f0d-5c9944c08184",
              "parentUUID": "914ff4fd-ebd4-46cb-b695-10fd52bffa7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4425,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33363/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33363/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33363/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33363/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33363/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33363/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33363/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33363/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d2ab81b6-bcab-4642-a0ce-932eb4002e29",
              "parentUUID": "914ff4fd-ebd4-46cb-b695-10fd52bffa7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4381,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33363/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33363/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33363/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33363/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33363/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33363/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33363/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33363/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33363/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "75a065e7-2372-42fa-8c7e-34a361b56b55",
              "parentUUID": "914ff4fd-ebd4-46cb-b695-10fd52bffa7c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "37a24ee8-4a69-4b6a-9f0d-5c9944c08184",
            "d2ab81b6-bcab-4642-a0ce-932eb4002e29",
            "75a065e7-2372-42fa-8c7e-34a361b56b55"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13231,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d18842ee-48f0-4183-a029-d31727deb191",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 535,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33363/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33363/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33363/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33363/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33363/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33363/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33363/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33363/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33363/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33363/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "b0b0467d-185c-4f61-b7f5-d329e831791d",
              "parentUUID": "d18842ee-48f0-4183-a029-d31727deb191",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 443,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33363/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33363/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33363/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33363/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33363/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33363/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33363/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33363/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33363/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33363/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33363/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33363/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "774c40f2-b3ed-4129-b2c2-3cf04b9bccf6",
              "parentUUID": "d18842ee-48f0-4183-a029-d31727deb191",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b0b0467d-185c-4f61-b7f5-d329e831791d",
            "774c40f2-b3ed-4129-b2c2-3cf04b9bccf6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 978,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}