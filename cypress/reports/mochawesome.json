{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-12T20:25:55.438Z",
    "end": "2021-09-12T20:28:08.073Z",
    "duration": 132635,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e20e537b-d894-48ea-8563-35b3c8524a11",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0e3e1c2f-925c-43ab-a7ba-e3bb1748ac74",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 1939,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "e1a88618-5dd4-4940-93e9-a5f897a8592a",
              "parentUUID": "0e3e1c2f-925c-43ab-a7ba-e3bb1748ac74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1a88618-5dd4-4940-93e9-a5f897a8592a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1939,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eede792a-6eef-4d69-9ccc-d7936913aeb1",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 1024,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "ecb00b4a-75f5-4097-bdf6-d4a9de2a0840",
              "parentUUID": "eede792a-6eef-4d69-9ccc-d7936913aeb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 1445,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "313e8ecf-1d4f-4fd2-bf52-e7bbd2df2fa0",
              "parentUUID": "eede792a-6eef-4d69-9ccc-d7936913aeb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 909,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "76289d09-e360-4dcd-853d-c6b7d3b84e4d",
              "parentUUID": "eede792a-6eef-4d69-9ccc-d7936913aeb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 790,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "9af1a1ba-787d-461b-940c-fca8fb13fefd",
              "parentUUID": "eede792a-6eef-4d69-9ccc-d7936913aeb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 459,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "1f823af2-b075-4312-b2d2-82e546d812f9",
              "parentUUID": "eede792a-6eef-4d69-9ccc-d7936913aeb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 915,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "e4082065-57aa-482f-acec-dec8aed05147",
              "parentUUID": "eede792a-6eef-4d69-9ccc-d7936913aeb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 585,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "0a133725-0e83-4ee1-88a6-923f9b856718",
              "parentUUID": "eede792a-6eef-4d69-9ccc-d7936913aeb1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ecb00b4a-75f5-4097-bdf6-d4a9de2a0840",
            "313e8ecf-1d4f-4fd2-bf52-e7bbd2df2fa0",
            "76289d09-e360-4dcd-853d-c6b7d3b84e4d",
            "9af1a1ba-787d-461b-940c-fca8fb13fefd",
            "1f823af2-b075-4312-b2d2-82e546d812f9",
            "e4082065-57aa-482f-acec-dec8aed05147",
            "0a133725-0e83-4ee1-88a6-923f9b856718"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6127,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0780790b-a234-46dc-86a5-3604f1c314ec",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 846,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "a2685d6b-0919-4294-bdb2-6065af01f68f",
              "parentUUID": "0780790b-a234-46dc-86a5-3604f1c314ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 1308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "66ea2980-b3ef-4a2d-81ac-e3b08001852d",
              "parentUUID": "0780790b-a234-46dc-86a5-3604f1c314ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2685d6b-0919-4294-bdb2-6065af01f68f",
            "66ea2980-b3ef-4a2d-81ac-e3b08001852d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2154,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "56dbb46e-9c9b-40f1-a143-cf21a69c3215",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 520,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "24239c47-7dd4-4fc7-b1a0-8a0872f8b593",
              "parentUUID": "56dbb46e-9c9b-40f1-a143-cf21a69c3215",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 510,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "2a037003-bd98-4f9f-81dc-577ca6341e6e",
              "parentUUID": "56dbb46e-9c9b-40f1-a143-cf21a69c3215",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 705,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "83ed7360-3ee9-4bac-8dce-b113a0488206",
              "parentUUID": "56dbb46e-9c9b-40f1-a143-cf21a69c3215",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "d8b3be38-212f-4f59-9833-34c0ebff22c7",
              "parentUUID": "56dbb46e-9c9b-40f1-a143-cf21a69c3215",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "24239c47-7dd4-4fc7-b1a0-8a0872f8b593",
            "2a037003-bd98-4f9f-81dc-577ca6341e6e",
            "83ed7360-3ee9-4bac-8dce-b113a0488206",
            "d8b3be38-212f-4f59-9833-34c0ebff22c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2227,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a2cdcfe4-505f-415c-88a1-44fbc65fa566",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 1431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "adc5d9dd-38f8-4ffc-b6b1-e000637e945f",
              "parentUUID": "a2cdcfe4-505f-415c-88a1-44fbc65fa566",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 1708,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "631e7910-7f31-4d06-9e1d-124857ba1d92",
              "parentUUID": "a2cdcfe4-505f-415c-88a1-44fbc65fa566",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "adc5d9dd-38f8-4ffc-b6b1-e000637e945f",
            "631e7910-7f31-4d06-9e1d-124857ba1d92"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3139,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2ede236e-a19a-4b65-9a5e-eb759f6c9fa4",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 869,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "65bf12e1-a9ec-4684-876f-871a4f304225",
              "parentUUID": "2ede236e-a19a-4b65-9a5e-eb759f6c9fa4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 777,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "d613a37d-2ae3-4bc0-9a59-cfeacfe9496c",
              "parentUUID": "2ede236e-a19a-4b65-9a5e-eb759f6c9fa4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "65bf12e1-a9ec-4684-876f-871a4f304225",
            "d613a37d-2ae3-4bc0-9a59-cfeacfe9496c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1646,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "789a8e1f-9cbc-45be-a75d-e5589c06ef9c",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 2021,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "dc1fe994-aa06-465d-9c67-a2640a5b9a88",
              "parentUUID": "789a8e1f-9cbc-45be-a75d-e5589c06ef9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 12258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "b1c11ec7-4a07-47e3-ad82-fb5b834953e4",
              "parentUUID": "789a8e1f-9cbc-45be-a75d-e5589c06ef9c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc1fe994-aa06-465d-9c67-a2640a5b9a88",
            "b1c11ec7-4a07-47e3-ad82-fb5b834953e4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14279,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e1cd8754-cd2d-44b4-b07a-36bece9ced5a",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 4234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "70246b5e-5c80-4a5b-8df4-20708276c36d",
              "parentUUID": "e1cd8754-cd2d-44b4-b07a-36bece9ced5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 13186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "f0d866de-7103-4b71-860f-093703af3026",
              "parentUUID": "e1cd8754-cd2d-44b4-b07a-36bece9ced5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 4578,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "a14cf736-3d03-467d-a1e2-e049e3d51699",
              "parentUUID": "e1cd8754-cd2d-44b4-b07a-36bece9ced5a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70246b5e-5c80-4a5b-8df4-20708276c36d",
            "f0d866de-7103-4b71-860f-093703af3026",
            "a14cf736-3d03-467d-a1e2-e049e3d51699"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21998,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "86ae99f6-0909-4b78-9da7-5ec6aa197671",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 557,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "4d11e9e8-e87f-4b17-b651-9d3504cc68e5",
              "parentUUID": "86ae99f6-0909-4b78-9da7-5ec6aa197671",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "87374764-7b84-47d0-94c3-775b8bcfc76e",
              "parentUUID": "86ae99f6-0909-4b78-9da7-5ec6aa197671",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "1f4cab91-0787-49f6-b780-ebc1bd2b5610",
              "parentUUID": "86ae99f6-0909-4b78-9da7-5ec6aa197671",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 3692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "2042f8b9-a23e-4806-8c4c-1d4ede036bc7",
              "parentUUID": "86ae99f6-0909-4b78-9da7-5ec6aa197671",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4d11e9e8-e87f-4b17-b651-9d3504cc68e5",
            "87374764-7b84-47d0-94c3-775b8bcfc76e",
            "1f4cab91-0787-49f6-b780-ebc1bd2b5610",
            "2042f8b9-a23e-4806-8c4c-1d4ede036bc7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5006,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6d5c8ca5-5b5b-4b33-80e9-fa0c4045dc23",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 5366,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33485/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33485/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33485/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33485/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33485/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33485/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33485/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33485/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "54fe2cfa-f352-4d21-9264-2d56cd4866db",
              "parentUUID": "6d5c8ca5-5b5b-4b33-80e9-fa0c4045dc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5851,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33485/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33485/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33485/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33485/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33485/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33485/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33485/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33485/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "bf3d2cb1-650c-43ac-a246-71bb52ff2c2c",
              "parentUUID": "6d5c8ca5-5b5b-4b33-80e9-fa0c4045dc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4995,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33485/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33485/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33485/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33485/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33485/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33485/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33485/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33485/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4d7b87e3-fbfe-485d-9aa9-9a32c9e4a3ac",
              "parentUUID": "6d5c8ca5-5b5b-4b33-80e9-fa0c4045dc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 6286,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33485/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33485/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33485/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33485/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33485/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33485/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33485/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33485/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "add4fa20-43dd-4425-b138-e065275a198d",
              "parentUUID": "6d5c8ca5-5b5b-4b33-80e9-fa0c4045dc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 5360,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33485/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33485/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33485/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33485/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33485/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33485/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33485/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33485/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "edb9c859-0c76-4e2f-8db6-dcb28e8bd8e5",
              "parentUUID": "6d5c8ca5-5b5b-4b33-80e9-fa0c4045dc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 5338,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33485/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33485/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33485/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33485/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33485/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33485/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33485/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33485/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6a3db873-e216-44b1-9420-5a4115fd9d40",
              "parentUUID": "6d5c8ca5-5b5b-4b33-80e9-fa0c4045dc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 5262,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33485/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33485/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33485/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33485/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33485/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33485/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33485/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33485/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "06f08fdb-3e38-41a9-a1ad-99bd0fa53a41",
              "parentUUID": "6d5c8ca5-5b5b-4b33-80e9-fa0c4045dc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 5062,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33485/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33485/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33485/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33485/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33485/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33485/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33485/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33485/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dc050e67-62ea-4446-9a66-6fa13381ffaa",
              "parentUUID": "6d5c8ca5-5b5b-4b33-80e9-fa0c4045dc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 5083,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33485/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33485/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33485/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33485/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33485/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33485/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33485/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33485/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b455656a-84cf-4a19-8bf7-cb775b86bbfb",
              "parentUUID": "6d5c8ca5-5b5b-4b33-80e9-fa0c4045dc23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "54fe2cfa-f352-4d21-9264-2d56cd4866db",
            "bf3d2cb1-650c-43ac-a246-71bb52ff2c2c",
            "4d7b87e3-fbfe-485d-9aa9-9a32c9e4a3ac",
            "add4fa20-43dd-4425-b138-e065275a198d",
            "edb9c859-0c76-4e2f-8db6-dcb28e8bd8e5",
            "6a3db873-e216-44b1-9420-5a4115fd9d40",
            "06f08fdb-3e38-41a9-a1ad-99bd0fa53a41",
            "dc050e67-62ea-4446-9a66-6fa13381ffaa",
            "b455656a-84cf-4a19-8bf7-cb775b86bbfb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 48603,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b81d5b39-853c-45b4-8049-a3597d117a10",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5390,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33485/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33485/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33485/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33485/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33485/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33485/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33485/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33485/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1638032d-861c-4fde-abbd-8361a2d6b27c",
              "parentUUID": "b81d5b39-853c-45b4-8049-a3597d117a10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 5262,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33485/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33485/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33485/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33485/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33485/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33485/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33485/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33485/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6dd70560-9d04-433e-a51c-cb345abb538d",
              "parentUUID": "b81d5b39-853c-45b4-8049-a3597d117a10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5320,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33485/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33485/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33485/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33485/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33485/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33485/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33485/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33485/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33485/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "80058a99-04a2-4cba-b482-a331194c33fe",
              "parentUUID": "b81d5b39-853c-45b4-8049-a3597d117a10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1638032d-861c-4fde-abbd-8361a2d6b27c",
            "6dd70560-9d04-433e-a51c-cb345abb538d",
            "80058a99-04a2-4cba-b482-a331194c33fe"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15972,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "be3bd9af-757c-4f5a-a24e-c74c20c7baa6",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1554,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33485/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33485/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33485/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33485/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33485/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33485/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33485/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33485/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33485/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33485/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "290d6f81-9076-434d-840c-e82e68aa7ff8",
              "parentUUID": "be3bd9af-757c-4f5a-a24e-c74c20c7baa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 1380,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33485/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33485/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33485/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33485/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33485/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33485/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33485/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33485/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33485/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33485/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33485/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33485/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "183bc4bb-03a6-49a1-abdd-29048694d2a4",
              "parentUUID": "be3bd9af-757c-4f5a-a24e-c74c20c7baa6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "290d6f81-9076-434d-840c-e82e68aa7ff8",
            "183bc4bb-03a6-49a1-abdd-29048694d2a4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2934,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}