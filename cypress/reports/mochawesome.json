{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 33,
    "pending": 0,
    "failures": 8,
    "start": "2021-09-15T15:21:50.233Z",
    "end": "2021-09-15T15:22:57.748Z",
    "duration": 67515,
    "testsRegistered": 41,
    "passPercent": 80.48780487804879,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5bce0ed4-c300-4e10-82f1-7aa97bcf386b",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c9503793-45e2-451e-b0a8-c653fd0dc929",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 403,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "190acb92-de2c-46df-9c6b-2a64824b98d2",
              "parentUUID": "c9503793-45e2-451e-b0a8-c653fd0dc929",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "190acb92-de2c-46df-9c6b-2a64824b98d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 403,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "66fe017e-37c5-453b-b847-42d65f631711",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 4516,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div#color-palette>' to be 'visible'\n\nThis element '<div#color-palette>' is not visible because it has an effective width and height of: '1366 x 0' pixels.",
                "estack": "CypressError: Timed out retrying: expected '<div#color-palette>' to be 'visible'\n\nThis element '<div#color-palette>' is not visible because it has an effective width and height of: '1366 x 0' pixels.\n    at cypressErr (http://localhost:41345/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41345/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41345/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41345/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41345/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41345/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41345/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41345/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41345/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41345/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41345/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a685f909-43ea-4f5c-a36c-7f97694822cc",
              "parentUUID": "66fe017e-37c5-453b-b847-42d65f631711",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 393,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "a10845c1-c364-4554-87b6-2da38bfb9a5e",
              "parentUUID": "66fe017e-37c5-453b-b847-42d65f631711",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 264,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "e49b52fe-938e-4c27-9323-a20aac88d3cf",
              "parentUUID": "66fe017e-37c5-453b-b847-42d65f631711",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "400e8ab2-f8f4-4720-89ad-8f66a2aa77f1",
              "parentUUID": "66fe017e-37c5-453b-b847-42d65f631711",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "59b3c44a-0b84-4c2d-ae5c-e7e04c0a9e86",
              "parentUUID": "66fe017e-37c5-453b-b847-42d65f631711",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "b156e992-eb38-4a5d-b830-1e751bb19d32",
              "parentUUID": "66fe017e-37c5-453b-b847-42d65f631711",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "7a085e02-aeca-4036-b2ba-476b46b46015",
              "parentUUID": "66fe017e-37c5-453b-b847-42d65f631711",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a10845c1-c364-4554-87b6-2da38bfb9a5e",
            "e49b52fe-938e-4c27-9323-a20aac88d3cf",
            "400e8ab2-f8f4-4720-89ad-8f66a2aa77f1",
            "59b3c44a-0b84-4c2d-ae5c-e7e04c0a9e86",
            "b156e992-eb38-4a5d-b830-1e751bb19d32",
            "7a085e02-aeca-4036-b2ba-476b46b46015"
          ],
          "failures": [
            "a685f909-43ea-4f5c-a36c-7f97694822cc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6058,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dae09706-eba9-4024-9d59-7f540bf5ef5b",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d98fdd71-ee4d-4e94-be2d-9575a4ed49f3",
              "parentUUID": "dae09706-eba9-4024-9d59-7f540bf5ef5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "bbdb81e5-8ced-485a-935b-4f9b872720df",
              "parentUUID": "dae09706-eba9-4024-9d59-7f540bf5ef5b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d98fdd71-ee4d-4e94-be2d-9575a4ed49f3",
            "bbdb81e5-8ced-485a-935b-4f9b872720df"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 601,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ec759306-5723-4b26-beef-df56b3b8df9f",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "063434ca-8d02-4d36-bc59-c561b36920ae",
              "parentUUID": "ec759306-5723-4b26-beef-df56b3b8df9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "c900bfc7-80e7-44ac-b9fc-12f188176fcb",
              "parentUUID": "ec759306-5723-4b26-beef-df56b3b8df9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "49e4051e-e841-40a8-8a07-2f3d177e1866",
              "parentUUID": "ec759306-5723-4b26-beef-df56b3b8df9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "06ec8112-011e-4db5-ba11-e1707a5da310",
              "parentUUID": "ec759306-5723-4b26-beef-df56b3b8df9f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "063434ca-8d02-4d36-bc59-c561b36920ae",
            "c900bfc7-80e7-44ac-b9fc-12f188176fcb",
            "49e4051e-e841-40a8-8a07-2f3d177e1866",
            "06ec8112-011e-4db5-ba11-e1707a5da310"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1093,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eddd339e-897d-4b8a-affa-065c3de56ecd",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 646,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "5ebecda1-e735-4a4b-a9a7-d001c72e4ba2",
              "parentUUID": "eddd339e-897d-4b8a-affa-065c3de56ecd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 564,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "8da6fab5-0d13-4280-b930-c445ff88568d",
              "parentUUID": "eddd339e-897d-4b8a-affa-065c3de56ecd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ebecda1-e735-4a4b-a9a7-d001c72e4ba2",
            "8da6fab5-0d13-4280-b930-c445ff88568d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1210,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fd5085ef-1e58-4ce6-9afe-be2c00b1e84e",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "ccd5dc55-6fa2-48b1-8005-644eb53b5f9d",
              "parentUUID": "fd5085ef-1e58-4ce6-9afe-be2c00b1e84e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "b9894386-127b-4308-93be-06d83644e488",
              "parentUUID": "fd5085ef-1e58-4ce6-9afe-be2c00b1e84e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ccd5dc55-6fa2-48b1-8005-644eb53b5f9d",
            "b9894386-127b-4308-93be-06d83644e488"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 322,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "31f9b2d6-8d0f-43fb-af9b-b171f1282ec4",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 670,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "922a5aef-091d-4a5a-becc-6f355741a06f",
              "parentUUID": "31f9b2d6-8d0f-43fb-af9b-b171f1282ec4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 10210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "aa11a176-5bf5-4a2f-9df3-219561f04ea3",
              "parentUUID": "31f9b2d6-8d0f-43fb-af9b-b171f1282ec4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "922a5aef-091d-4a5a-becc-6f355741a06f",
            "aa11a176-5bf5-4a2f-9df3-219561f04ea3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10880,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "86b4d354-d3e5-46df-8d87-43bf6e493e4e",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 4723,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(0, 0, 0)', but the value was 'rgb(255, 255, 255)'",
                "estack": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(0, 0, 0)', but the value was 'rgb(255, 255, 255)'\n    at cypressErr (http://localhost:41345/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41345/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41345/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41345/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41345/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41345/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41345/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41345/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41345/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41345/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41345/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f5650c24-99b7-49c8-aad9-9fff17e7d19f",
              "parentUUID": "86b4d354-d3e5-46df-8d87-43bf6e493e4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 4812,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(0, 0, 0)', but the value was 'rgb(255, 255, 255)'",
                "estack": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(0, 0, 0)', but the value was 'rgb(255, 255, 255)'\n    at cypressErr (http://localhost:41345/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41345/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41345/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41345/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41345/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41345/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41345/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41345/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41345/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41345/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41345/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "68a8e2b0-69d5-4a5f-9298-686fc927c155",
              "parentUUID": "86b4d354-d3e5-46df-8d87-43bf6e493e4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 3218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "5fc3a8d1-b3b5-4a21-b215-b13bd09aba7f",
              "parentUUID": "86b4d354-d3e5-46df-8d87-43bf6e493e4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5fc3a8d1-b3b5-4a21-b215-b13bd09aba7f"
          ],
          "failures": [
            "f5650c24-99b7-49c8-aad9-9fff17e7d19f",
            "68a8e2b0-69d5-4a5f-9298-686fc927c155"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12753,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1397e0ae-882b-468a-a898-01dd2e05d9c9",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "e1d87146-645a-4475-915a-ce1400e14116",
              "parentUUID": "1397e0ae-882b-468a-a898-01dd2e05d9c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "372244ce-1ddc-44ed-bf37-ba7fa2d264d1",
              "parentUUID": "1397e0ae-882b-468a-a898-01dd2e05d9c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "1f0aa7a8-e2ee-4d8e-b098-ae56d5d72589",
              "parentUUID": "1397e0ae-882b-468a-a898-01dd2e05d9c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 4625,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(81, 245, 4)', but the value was 'rgb(255, 255, 255)'",
                "estack": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(81, 245, 4)', but the value was 'rgb(255, 255, 255)'\n    at cypressErr (http://localhost:41345/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41345/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41345/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41345/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41345/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41345/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41345/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41345/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41345/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41345/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41345/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dfc27cbb-b55b-4b65-876d-96e521cf27a9",
              "parentUUID": "1397e0ae-882b-468a-a898-01dd2e05d9c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1d87146-645a-4475-915a-ce1400e14116",
            "372244ce-1ddc-44ed-bf37-ba7fa2d264d1",
            "1f0aa7a8-e2ee-4d8e-b098-ae56d5d72589"
          ],
          "failures": [
            "dfc27cbb-b55b-4b65-876d-96e521cf27a9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5345,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c36a7ac8-799a-4e70-8139-4a68d3ebab2d",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 305,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "a777e3e1-c79c-49d7-b6c0-75da6150341f",
              "parentUUID": "c36a7ac8-799a-4e70-8139-4a68d3ebab2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "8484c1e6-8552-4a4f-91ff-1054709ae330",
              "parentUUID": "c36a7ac8-799a-4e70-8139-4a68d3ebab2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4415,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:41345/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41345/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41345/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41345/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41345/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41345/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41345/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41345/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41345/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41345/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41345/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f53e7d43-414c-4453-b88c-36ac3c505acb",
              "parentUUID": "c36a7ac8-799a-4e70-8139-4a68d3ebab2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 291,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "9417efe9-0511-4b2a-8240-26ceb15661bf",
              "parentUUID": "c36a7ac8-799a-4e70-8139-4a68d3ebab2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "d4e4c2cb-9559-41a4-8f8a-7cf48028c8cf",
              "parentUUID": "c36a7ac8-799a-4e70-8139-4a68d3ebab2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "188be70d-b739-4b27-98fd-5db0ca1519be",
              "parentUUID": "c36a7ac8-799a-4e70-8139-4a68d3ebab2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 504,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:41345/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41345/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41345/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41345/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41345/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41345/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41345/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41345/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41345/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41345/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41345/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41345/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9cd08960-258a-40ff-8279-830834978060",
              "parentUUID": "c36a7ac8-799a-4e70-8139-4a68d3ebab2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 972,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {},
              "uuid": "7ead8c6e-85cb-4a75-8a65-0726dc93fe9c",
              "parentUUID": "c36a7ac8-799a-4e70-8139-4a68d3ebab2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 799,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "0f503151-5049-4579-89a7-523cfc6dbb82",
              "parentUUID": "c36a7ac8-799a-4e70-8139-4a68d3ebab2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a777e3e1-c79c-49d7-b6c0-75da6150341f",
            "8484c1e6-8552-4a4f-91ff-1054709ae330",
            "9417efe9-0511-4b2a-8240-26ceb15661bf",
            "d4e4c2cb-9559-41a4-8f8a-7cf48028c8cf",
            "188be70d-b739-4b27-98fd-5db0ca1519be",
            "7ead8c6e-85cb-4a75-8a65-0726dc93fe9c",
            "0f503151-5049-4579-89a7-523cfc6dbb82"
          ],
          "failures": [
            "f53e7d43-414c-4453-b88c-36ac3c505acb",
            "9cd08960-258a-40ff-8279-830834978060"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7864,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4f62d708-f20c-4843-a855-f2e5c760398b",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 8561,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {},
              "uuid": "bf6c707f-ece3-4b39-8466-688ed713cff3",
              "parentUUID": "4f62d708-f20c-4843-a855-f2e5c760398b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 739,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "1cbf5924-4dbe-42d3-91b0-f01ffa1f84f3",
              "parentUUID": "4f62d708-f20c-4843-a855-f2e5c760398b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 8548,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {},
              "uuid": "964b6d99-6778-4f34-b571-3f0ed5f837ac",
              "parentUUID": "4f62d708-f20c-4843-a855-f2e5c760398b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf6c707f-ece3-4b39-8466-688ed713cff3",
            "1cbf5924-4dbe-42d3-91b0-f01ffa1f84f3",
            "964b6d99-6778-4f34-b571-3f0ed5f837ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17848,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "403b090f-f502-4347-b03a-056ad00dfe8b",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 725,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41345/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41345/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41345/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41345/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41345/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41345/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41345/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41345/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41345/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41345/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41345/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41345/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "a3a19877-374f-4faa-bc67-fa9b9f831d50",
              "parentUUID": "403b090f-f502-4347-b03a-056ad00dfe8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 663,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41345/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41345/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41345/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41345/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41345/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41345/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41345/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41345/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41345/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41345/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41345/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41345/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41345/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "d6cbda1b-7333-46d8-afde-2f5ac1cbce3e",
              "parentUUID": "403b090f-f502-4347-b03a-056ad00dfe8b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a3a19877-374f-4faa-bc67-fa9b9f831d50",
            "d6cbda1b-7333-46d8-afde-2f5ac1cbce3e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1388,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}