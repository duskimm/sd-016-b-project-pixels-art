{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-13T13:37:20.782Z",
    "end": "2021-09-13T13:39:00.842Z",
    "duration": 100060,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "14eb2690-cfd2-4963-9e1c-66abe253ee90",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c2ed071a-6882-45ee-8ec6-8871bad329c6",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 3885,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "aef0982d-7c62-47d1-bbb6-eff3bc4b0548",
              "parentUUID": "c2ed071a-6882-45ee-8ec6-8871bad329c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aef0982d-7c62-47d1-bbb6-eff3bc4b0548"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3885,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d6fd6da6-cf58-46f6-a6ee-3f08ef014877",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "050598f6-7b69-40fa-8b4e-8aba5dabe9a6",
              "parentUUID": "d6fd6da6-cf58-46f6-a6ee-3f08ef014877",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 811,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "e0e43a93-6382-477b-9bf2-90b3ca7c76be",
              "parentUUID": "d6fd6da6-cf58-46f6-a6ee-3f08ef014877",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 642,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "e925aee4-65a0-4cd1-a5b3-8d65ff58839c",
              "parentUUID": "d6fd6da6-cf58-46f6-a6ee-3f08ef014877",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 323,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "d059928b-34d7-4c5d-843f-4839ebb2f280",
              "parentUUID": "d6fd6da6-cf58-46f6-a6ee-3f08ef014877",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 236,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "e7a025c2-edcd-470c-926f-cbe4f8b6a822",
              "parentUUID": "d6fd6da6-cf58-46f6-a6ee-3f08ef014877",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "3edc624a-b9a2-4a6d-962e-58afd583c411",
              "parentUUID": "d6fd6da6-cf58-46f6-a6ee-3f08ef014877",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 243,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "52ddba75-d560-4e91-ab44-09b99f4c9bff",
              "parentUUID": "d6fd6da6-cf58-46f6-a6ee-3f08ef014877",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "050598f6-7b69-40fa-8b4e-8aba5dabe9a6",
            "e0e43a93-6382-477b-9bf2-90b3ca7c76be",
            "e925aee4-65a0-4cd1-a5b3-8d65ff58839c",
            "d059928b-34d7-4c5d-843f-4839ebb2f280",
            "e7a025c2-edcd-470c-926f-cbe4f8b6a822",
            "3edc624a-b9a2-4a6d-962e-58afd583c411",
            "52ddba75-d560-4e91-ab44-09b99f4c9bff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3058,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cb34150a-53be-43f2-b6bc-46afc736960f",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "c8031bc8-ecdf-42b6-bea1-3255e75ba599",
              "parentUUID": "cb34150a-53be-43f2-b6bc-46afc736960f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 439,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "03de461a-acb8-4c4c-916b-cf963c5a891d",
              "parentUUID": "cb34150a-53be-43f2-b6bc-46afc736960f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8031bc8-ecdf-42b6-bea1-3255e75ba599",
            "03de461a-acb8-4c4c-916b-cf963c5a891d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 609,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9a04dded-40c1-4c0e-84bf-d77b9e7e8b17",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "dfc57649-70ae-4261-9da2-ca3fd382a2c9",
              "parentUUID": "9a04dded-40c1-4c0e-84bf-d77b9e7e8b17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "a7be0a60-e8f9-436b-bf84-761a3c8e9424",
              "parentUUID": "9a04dded-40c1-4c0e-84bf-d77b9e7e8b17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 442,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "62ef7b3e-608e-43be-adf5-ea0c951fc529",
              "parentUUID": "9a04dded-40c1-4c0e-84bf-d77b9e7e8b17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "8cfb8ffa-6680-4f78-8b6c-9cc4249bfbb6",
              "parentUUID": "9a04dded-40c1-4c0e-84bf-d77b9e7e8b17",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dfc57649-70ae-4261-9da2-ca3fd382a2c9",
            "a7be0a60-e8f9-436b-bf84-761a3c8e9424",
            "62ef7b3e-608e-43be-adf5-ea0c951fc529",
            "8cfb8ffa-6680-4f78-8b6c-9cc4249bfbb6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1069,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3edb0c86-0c1d-4fa2-ba42-bb1d879ca70d",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 573,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "f3dc2f92-c7da-419c-acb3-099867e76b74",
              "parentUUID": "3edb0c86-0c1d-4fa2-ba42-bb1d879ca70d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 549,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "9f760dad-a069-4e6d-b5ad-e84bae08454c",
              "parentUUID": "3edb0c86-0c1d-4fa2-ba42-bb1d879ca70d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3dc2f92-c7da-419c-acb3-099867e76b74",
            "9f760dad-a069-4e6d-b5ad-e84bae08454c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1122,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "944b21ce-a6cd-4559-8ad3-6447446d7d6d",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "98987cd0-5242-428b-a311-df7e91c282cb",
              "parentUUID": "944b21ce-a6cd-4559-8ad3-6447446d7d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 413,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "09fd9903-a206-4029-8cae-0f0a7d64aa7b",
              "parentUUID": "944b21ce-a6cd-4559-8ad3-6447446d7d6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "98987cd0-5242-428b-a311-df7e91c282cb",
            "09fd9903-a206-4029-8cae-0f0a7d64aa7b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 635,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "361c1315-9db0-4bb0-bc98-689548de1417",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 571,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "6c5f5386-fa55-4a2b-8d20-343dcbb2adeb",
              "parentUUID": "361c1315-9db0-4bb0-bc98-689548de1417",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 10005,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "f5b84041-2a37-436c-a9b1-906ed86ad584",
              "parentUUID": "361c1315-9db0-4bb0-bc98-689548de1417",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c5f5386-fa55-4a2b-8d20-343dcbb2adeb",
            "f5b84041-2a37-436c-a9b1-906ed86ad584"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10576,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "293d758b-3289-4944-afab-950dd61055ff",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2801,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "09d152ea-f5ac-4638-8d25-75bba8e1cede",
              "parentUUID": "293d758b-3289-4944-afab-950dd61055ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 10096,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "b8f6ecb9-8838-4a0a-abd0-eaa6d907592b",
              "parentUUID": "293d758b-3289-4944-afab-950dd61055ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "999a7480-a4ef-498a-acac-bb151c18a3eb",
              "parentUUID": "293d758b-3289-4944-afab-950dd61055ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09d152ea-f5ac-4638-8d25-75bba8e1cede",
            "b8f6ecb9-8838-4a0a-abd0-eaa6d907592b",
            "999a7480-a4ef-498a-acac-bb151c18a3eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15323,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a85dc23b-54b5-4a4e-aca1-51e06c23d942",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "95e9236a-34cf-411a-9b59-7581250a9244",
              "parentUUID": "a85dc23b-54b5-4a4e-aca1-51e06c23d942",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "d9ebb770-d6ec-4fac-a3a2-07106d4f3459",
              "parentUUID": "a85dc23b-54b5-4a4e-aca1-51e06c23d942",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "ee13c6e2-d16c-416d-9821-364593296478",
              "parentUUID": "a85dc23b-54b5-4a4e-aca1-51e06c23d942",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2729,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "c815999c-d3d5-4271-aabb-18174ea9ba70",
              "parentUUID": "a85dc23b-54b5-4a4e-aca1-51e06c23d942",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95e9236a-34cf-411a-9b59-7581250a9244",
            "d9ebb770-d6ec-4fac-a3a2-07106d4f3459",
            "ee13c6e2-d16c-416d-9821-364593296478",
            "c815999c-d3d5-4271-aabb-18174ea9ba70"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3467,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "47ccf9c4-c773-4062-8642-200dd05cdecf",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4716,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42795/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42795/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42795/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42795/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42795/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42795/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42795/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42795/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a358f451-99aa-412f-9b01-414f44bdc36a",
              "parentUUID": "47ccf9c4-c773-4062-8642-200dd05cdecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4792,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42795/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42795/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42795/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42795/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42795/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42795/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42795/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42795/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "df2ecdaf-de1c-4ede-97ff-b13608538482",
              "parentUUID": "47ccf9c4-c773-4062-8642-200dd05cdecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4930,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42795/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42795/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42795/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42795/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42795/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42795/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42795/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42795/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "bb6079b3-ac82-4af4-a731-a5ff843f80c2",
              "parentUUID": "47ccf9c4-c773-4062-8642-200dd05cdecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4568,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42795/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42795/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42795/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42795/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42795/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42795/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42795/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42795/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b1f98aa6-5fe1-449a-920a-cb1ba747bc7e",
              "parentUUID": "47ccf9c4-c773-4062-8642-200dd05cdecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4701,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42795/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42795/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42795/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42795/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42795/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42795/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42795/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42795/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "469f59a3-bbac-4f7f-aefe-4277a3e9d00d",
              "parentUUID": "47ccf9c4-c773-4062-8642-200dd05cdecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4637,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42795/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42795/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42795/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42795/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42795/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42795/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42795/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42795/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5c1c3ddd-9260-42b6-923c-2763985b2bdf",
              "parentUUID": "47ccf9c4-c773-4062-8642-200dd05cdecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4667,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42795/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42795/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42795/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42795/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42795/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42795/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42795/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42795/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3026fe97-da1f-4e05-b5bf-c8a1a505b3f1",
              "parentUUID": "47ccf9c4-c773-4062-8642-200dd05cdecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4602,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42795/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42795/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42795/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42795/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42795/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42795/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42795/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42795/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "67e11533-4f25-49ec-9e51-4a05c7731703",
              "parentUUID": "47ccf9c4-c773-4062-8642-200dd05cdecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4616,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42795/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42795/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42795/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42795/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42795/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42795/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42795/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42795/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cb0496b7-314c-4307-95ad-ec3fbb0cf3e4",
              "parentUUID": "47ccf9c4-c773-4062-8642-200dd05cdecf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a358f451-99aa-412f-9b01-414f44bdc36a",
            "df2ecdaf-de1c-4ede-97ff-b13608538482",
            "bb6079b3-ac82-4af4-a731-a5ff843f80c2",
            "b1f98aa6-5fe1-449a-920a-cb1ba747bc7e",
            "469f59a3-bbac-4f7f-aefe-4277a3e9d00d",
            "5c1c3ddd-9260-42b6-923c-2763985b2bdf",
            "3026fe97-da1f-4e05-b5bf-c8a1a505b3f1",
            "67e11533-4f25-49ec-9e51-4a05c7731703",
            "cb0496b7-314c-4307-95ad-ec3fbb0cf3e4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 42229,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d62f0503-392b-4be0-874c-c36d9dcf86d6",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4747,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42795/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42795/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42795/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42795/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42795/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42795/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42795/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42795/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9301794b-f7aa-40cb-9624-1781f6074ad0",
              "parentUUID": "d62f0503-392b-4be0-874c-c36d9dcf86d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4803,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42795/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42795/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42795/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42795/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42795/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42795/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42795/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42795/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a74044cf-2a45-43fd-a717-6d0362746da2",
              "parentUUID": "d62f0503-392b-4be0-874c-c36d9dcf86d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4905,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42795/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42795/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42795/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42795/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42795/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42795/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42795/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42795/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42795/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0a7c4164-389c-4f9f-abb2-e47394687626",
              "parentUUID": "d62f0503-392b-4be0-874c-c36d9dcf86d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9301794b-f7aa-40cb-9624-1781f6074ad0",
            "a74044cf-2a45-43fd-a717-6d0362746da2",
            "0a7c4164-389c-4f9f-abb2-e47394687626"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14455,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d769966c-8379-47c4-a04d-a1f7cd1d0f9c",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 960,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:42795/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:42795/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:42795/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:42795/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:42795/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:42795/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42795/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42795/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:42795/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42795/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "c7e89655-c426-403e-a7fb-2dbed31f4ac1",
              "parentUUID": "d769966c-8379-47c4-a04d-a1f7cd1d0f9c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 846,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:42795/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:42795/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:42795/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:42795/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:42795/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:42795/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:42795/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42795/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42795/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:42795/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42795/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42795/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "24aab8e3-6d22-4a95-b367-1a47533df5e8",
              "parentUUID": "d769966c-8379-47c4-a04d-a1f7cd1d0f9c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c7e89655-c426-403e-a7fb-2dbed31f4ac1",
            "24aab8e3-6d22-4a95-b367-1a47533df5e8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1806,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}