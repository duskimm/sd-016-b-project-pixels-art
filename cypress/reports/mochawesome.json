{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-11T00:47:39.109Z",
    "end": "2021-09-11T00:49:02.535Z",
    "duration": 83426,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4bee1b53-7a5b-45f8-a456-72342343b39f",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e7f44741-15e5-4cb6-b2cb-247ead95d3d7",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "3f8ff6a0-2f90-4103-a53d-93a294035d25",
              "parentUUID": "e7f44741-15e5-4cb6-b2cb-247ead95d3d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f8ff6a0-2f90-4103-a53d-93a294035d25"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 254,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bf8450f0-1813-4ee4-a6b4-3d1d9a21ca24",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "d1728378-7372-4bf5-975d-f0b7d981a664",
              "parentUUID": "bf8450f0-1813-4ee4-a6b4-3d1d9a21ca24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "b83ba3a9-e4e4-4e69-b717-9da7ab4f3ab7",
              "parentUUID": "bf8450f0-1813-4ee4-a6b4-3d1d9a21ca24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "16b9c810-9550-4119-9f1b-58424a009497",
              "parentUUID": "bf8450f0-1813-4ee4-a6b4-3d1d9a21ca24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "c8a0b240-d7a6-41fe-bc23-480dee533b44",
              "parentUUID": "bf8450f0-1813-4ee4-a6b4-3d1d9a21ca24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "57301875-0416-467a-8e10-c152daefa0b8",
              "parentUUID": "bf8450f0-1813-4ee4-a6b4-3d1d9a21ca24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "b9b3a6b2-7d64-4d7f-a462-4a150658f73d",
              "parentUUID": "bf8450f0-1813-4ee4-a6b4-3d1d9a21ca24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "daa95173-13ba-44b4-aff9-ca3e9b81a8fc",
              "parentUUID": "bf8450f0-1813-4ee4-a6b4-3d1d9a21ca24",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d1728378-7372-4bf5-975d-f0b7d981a664",
            "b83ba3a9-e4e4-4e69-b717-9da7ab4f3ab7",
            "16b9c810-9550-4119-9f1b-58424a009497",
            "c8a0b240-d7a6-41fe-bc23-480dee533b44",
            "57301875-0416-467a-8e10-c152daefa0b8",
            "b9b3a6b2-7d64-4d7f-a462-4a150658f73d",
            "daa95173-13ba-44b4-aff9-ca3e9b81a8fc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1201,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "778016ff-9623-41df-ae0f-c46516dfca2c",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "3f434dea-8ca8-4995-ae84-e088a6d19d9a",
              "parentUUID": "778016ff-9623-41df-ae0f-c46516dfca2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "cc7bbb33-1df5-4d90-9d79-8469d717931a",
              "parentUUID": "778016ff-9623-41df-ae0f-c46516dfca2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f434dea-8ca8-4995-ae84-e088a6d19d9a",
            "cc7bbb33-1df5-4d90-9d79-8469d717931a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 442,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8e6abea0-35ee-43e3-a477-6fd3cc5aac33",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "c5e143bf-1934-4e69-81f4-b872888c8955",
              "parentUUID": "8e6abea0-35ee-43e3-a477-6fd3cc5aac33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 216,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "f34611e5-0d87-4f82-b1a7-1e749ea6917e",
              "parentUUID": "8e6abea0-35ee-43e3-a477-6fd3cc5aac33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "d9ffd233-9667-492f-ac3a-df6703aaa0e0",
              "parentUUID": "8e6abea0-35ee-43e3-a477-6fd3cc5aac33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "d10f3252-751e-4514-814b-c8d86b7ea485",
              "parentUUID": "8e6abea0-35ee-43e3-a477-6fd3cc5aac33",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5e143bf-1934-4e69-81f4-b872888c8955",
            "f34611e5-0d87-4f82-b1a7-1e749ea6917e",
            "d9ffd233-9667-492f-ac3a-df6703aaa0e0",
            "d10f3252-751e-4514-814b-c8d86b7ea485"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 670,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "daf3bf5a-5bd5-43ec-94ac-d503787c9fc5",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 339,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "26b0c7cd-41a8-40e8-803a-b06a1cd3d1e9",
              "parentUUID": "daf3bf5a-5bd5-43ec-94ac-d503787c9fc5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 366,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "0475cde5-992d-44e7-a291-3eab26550379",
              "parentUUID": "daf3bf5a-5bd5-43ec-94ac-d503787c9fc5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26b0c7cd-41a8-40e8-803a-b06a1cd3d1e9",
            "0475cde5-992d-44e7-a291-3eab26550379"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 705,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c71b58f2-db9e-4e9d-b50d-a572fd662661",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f580c079-a7a5-456e-9243-f131c688434a",
              "parentUUID": "c71b58f2-db9e-4e9d-b50d-a572fd662661",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "3e47ff3b-42fd-463f-bb79-53d1c149eaac",
              "parentUUID": "c71b58f2-db9e-4e9d-b50d-a572fd662661",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f580c079-a7a5-456e-9243-f131c688434a",
            "3e47ff3b-42fd-463f-bb79-53d1c149eaac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 299,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "74cd2816-5a5d-4a49-8992-6c0607b0efd4",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "97f8f0e1-777e-4309-acbb-37d198e677be",
              "parentUUID": "74cd2816-5a5d-4a49-8992-6c0607b0efd4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8844,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "df3f914d-0da6-438e-a289-ba25f29af878",
              "parentUUID": "74cd2816-5a5d-4a49-8992-6c0607b0efd4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "97f8f0e1-777e-4309-acbb-37d198e677be",
            "df3f914d-0da6-438e-a289-ba25f29af878"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9325,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c2c5cdb4-fec7-477e-bc6d-eeda17030a61",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "3db31891-4e3e-435f-9504-4742e4d2d2ee",
              "parentUUID": "c2c5cdb4-fec7-477e-bc6d-eeda17030a61",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8729,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "2a37d7f7-ad2b-4b40-b696-506dcea005bb",
              "parentUUID": "c2c5cdb4-fec7-477e-bc6d-eeda17030a61",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "38cafc65-fb3c-4e79-ba5d-23801ef24cf7",
              "parentUUID": "c2c5cdb4-fec7-477e-bc6d-eeda17030a61",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3db31891-4e3e-435f-9504-4742e4d2d2ee",
            "2a37d7f7-ad2b-4b40-b696-506dcea005bb",
            "38cafc65-fb3c-4e79-ba5d-23801ef24cf7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12473,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3137bcf1-8677-46de-a186-d9dae58fd363",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "97e5f68d-850f-4bd3-98fb-ef42852b718d",
              "parentUUID": "3137bcf1-8677-46de-a186-d9dae58fd363",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "205e2141-366b-4674-9742-de7d6a13ee48",
              "parentUUID": "3137bcf1-8677-46de-a186-d9dae58fd363",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "c52cbd7c-1ba1-4386-9707-ffe6a8b20708",
              "parentUUID": "3137bcf1-8677-46de-a186-d9dae58fd363",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2391,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "72ce2c45-c74e-482e-9e85-e791967c8854",
              "parentUUID": "3137bcf1-8677-46de-a186-d9dae58fd363",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "97e5f68d-850f-4bd3-98fb-ef42852b718d",
            "205e2141-366b-4674-9742-de7d6a13ee48",
            "c52cbd7c-1ba1-4386-9707-ffe6a8b20708",
            "72ce2c45-c74e-482e-9e85-e791967c8854"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2800,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "95efdb9f-b8cd-46e4-85ba-6acf6533b57e",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4444,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39075/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39075/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39075/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39075/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39075/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39075/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39075/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39075/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "36ade547-2b19-45c1-8ee2-242acbc108cc",
              "parentUUID": "95efdb9f-b8cd-46e4-85ba-6acf6533b57e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4409,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39075/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39075/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39075/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39075/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39075/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39075/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39075/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39075/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "02762c98-ad6a-4093-bf97-fed53def7697",
              "parentUUID": "95efdb9f-b8cd-46e4-85ba-6acf6533b57e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4426,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39075/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39075/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39075/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39075/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39075/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39075/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39075/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39075/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "14052881-4e23-4184-883f-ad8d784be2f6",
              "parentUUID": "95efdb9f-b8cd-46e4-85ba-6acf6533b57e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4414,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39075/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39075/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39075/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39075/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39075/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39075/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39075/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39075/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9afbe526-36ab-4447-96ec-9ed2e8037e46",
              "parentUUID": "95efdb9f-b8cd-46e4-85ba-6acf6533b57e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4396,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39075/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39075/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39075/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39075/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39075/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39075/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39075/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39075/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cba3d4dc-b722-4a36-ba5b-ee90a9705822",
              "parentUUID": "95efdb9f-b8cd-46e4-85ba-6acf6533b57e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4431,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39075/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39075/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39075/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39075/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39075/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39075/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39075/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39075/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1e20269b-fb2e-4424-a706-84a575e711e8",
              "parentUUID": "95efdb9f-b8cd-46e4-85ba-6acf6533b57e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4438,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39075/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39075/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39075/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39075/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39075/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39075/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39075/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39075/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "97f5bbf7-3aa2-44df-b8bf-744ba64a3067",
              "parentUUID": "95efdb9f-b8cd-46e4-85ba-6acf6533b57e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4392,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39075/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39075/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39075/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39075/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39075/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39075/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39075/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39075/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "51549c76-5cc8-4c7a-9c11-00e47bf55771",
              "parentUUID": "95efdb9f-b8cd-46e4-85ba-6acf6533b57e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4379,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39075/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39075/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39075/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39075/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39075/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39075/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39075/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39075/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c7321c20-675d-4f32-a3fb-cd06b7116865",
              "parentUUID": "95efdb9f-b8cd-46e4-85ba-6acf6533b57e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "36ade547-2b19-45c1-8ee2-242acbc108cc",
            "02762c98-ad6a-4093-bf97-fed53def7697",
            "14052881-4e23-4184-883f-ad8d784be2f6",
            "9afbe526-36ab-4447-96ec-9ed2e8037e46",
            "cba3d4dc-b722-4a36-ba5b-ee90a9705822",
            "1e20269b-fb2e-4424-a706-84a575e711e8",
            "97f5bbf7-3aa2-44df-b8bf-744ba64a3067",
            "51549c76-5cc8-4c7a-9c11-00e47bf55771",
            "c7321c20-675d-4f32-a3fb-cd06b7116865"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39729,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "680d0218-26ff-47f8-b5ac-aecdb61794e9",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4432,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39075/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39075/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39075/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39075/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39075/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39075/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39075/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39075/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6ecd591a-9168-4606-a550-925f19296d43",
              "parentUUID": "680d0218-26ff-47f8-b5ac-aecdb61794e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4425,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39075/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39075/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39075/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39075/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39075/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39075/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39075/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39075/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3985291f-36b4-46a2-b289-16191aa8e4fe",
              "parentUUID": "680d0218-26ff-47f8-b5ac-aecdb61794e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4446,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39075/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39075/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39075/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39075/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39075/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39075/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39075/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39075/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39075/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b462783c-92fc-4c73-ae86-640438a4efa1",
              "parentUUID": "680d0218-26ff-47f8-b5ac-aecdb61794e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6ecd591a-9168-4606-a550-925f19296d43",
            "3985291f-36b4-46a2-b289-16191aa8e4fe",
            "b462783c-92fc-4c73-ae86-640438a4efa1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13303,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f4cc7a56-5fd0-48d1-ac62-e47d3e466fca",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 506,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39075/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39075/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39075/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39075/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39075/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39075/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39075/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39075/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39075/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39075/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "0a92ee6f-a600-49f5-84f8-7eb1eb0f21c5",
              "parentUUID": "f4cc7a56-5fd0-48d1-ac62-e47d3e466fca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 545,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39075/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39075/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39075/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39075/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39075/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39075/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39075/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39075/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39075/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39075/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39075/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39075/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "fa2f58a8-7d11-444e-805c-d728a92e5d39",
              "parentUUID": "f4cc7a56-5fd0-48d1-ac62-e47d3e466fca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0a92ee6f-a600-49f5-84f8-7eb1eb0f21c5",
            "fa2f58a8-7d11-444e-805c-d728a92e5d39"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1051,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}