{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-10T20:44:06.412Z",
    "end": "2021-09-10T20:45:26.918Z",
    "duration": 80506,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6faf1191-c62d-4144-84b9-bdf2a948a831",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4b9c9530-8848-41a8-890c-5c6dc4119880",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "230e4822-13a1-4aff-9b0b-b5f9f6964a80",
              "parentUUID": "4b9c9530-8848-41a8-890c-5c6dc4119880",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "230e4822-13a1-4aff-9b0b-b5f9f6964a80"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 158,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3d2d57b0-9579-458a-afde-86632755a794",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "deca4938-4cd9-4247-a120-1e5d85bedfd1",
              "parentUUID": "3d2d57b0-9579-458a-afde-86632755a794",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "5871cc74-549b-41a8-86b7-35b5cdaf9de8",
              "parentUUID": "3d2d57b0-9579-458a-afde-86632755a794",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "384affdb-6f24-48c5-a313-e80065ea5a3b",
              "parentUUID": "3d2d57b0-9579-458a-afde-86632755a794",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "4fc9f7d4-594c-4813-ac48-35de6d8f686b",
              "parentUUID": "3d2d57b0-9579-458a-afde-86632755a794",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "3d1fce59-a184-4298-948a-a7671cd2295a",
              "parentUUID": "3d2d57b0-9579-458a-afde-86632755a794",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "fe90b211-7a44-4fee-b977-b9bdcfd32d7d",
              "parentUUID": "3d2d57b0-9579-458a-afde-86632755a794",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "c37a9a4d-1b78-4c45-9c17-a0f51c9edb69",
              "parentUUID": "3d2d57b0-9579-458a-afde-86632755a794",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "deca4938-4cd9-4247-a120-1e5d85bedfd1",
            "5871cc74-549b-41a8-86b7-35b5cdaf9de8",
            "384affdb-6f24-48c5-a313-e80065ea5a3b",
            "4fc9f7d4-594c-4813-ac48-35de6d8f686b",
            "3d1fce59-a184-4298-948a-a7671cd2295a",
            "fe90b211-7a44-4fee-b977-b9bdcfd32d7d",
            "c37a9a4d-1b78-4c45-9c17-a0f51c9edb69"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 933,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9ea426e5-ee3d-4bb5-98fd-f9f20be82800",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f971b73e-5bec-4069-8f84-e55fbc2ef3fa",
              "parentUUID": "9ea426e5-ee3d-4bb5-98fd-f9f20be82800",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "e9e3eb14-b7f9-4bb2-93f7-db50aed26295",
              "parentUUID": "9ea426e5-ee3d-4bb5-98fd-f9f20be82800",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f971b73e-5bec-4069-8f84-e55fbc2ef3fa",
            "e9e3eb14-b7f9-4bb2-93f7-db50aed26295"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 245,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "82fa4d91-a80f-4bab-8719-2a6a41185497",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "77b1d3c5-d246-4da9-89ca-429ffdd0190d",
              "parentUUID": "82fa4d91-a80f-4bab-8719-2a6a41185497",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "5cde93c9-70a0-4da3-b127-fb5e9c972bc0",
              "parentUUID": "82fa4d91-a80f-4bab-8719-2a6a41185497",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "49ed95e0-037c-415f-aefb-7ee7faeace4a",
              "parentUUID": "82fa4d91-a80f-4bab-8719-2a6a41185497",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "9db30834-6ee0-4c97-bdb8-d1888630ed6a",
              "parentUUID": "82fa4d91-a80f-4bab-8719-2a6a41185497",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "77b1d3c5-d246-4da9-89ca-429ffdd0190d",
            "5cde93c9-70a0-4da3-b127-fb5e9c972bc0",
            "49ed95e0-037c-415f-aefb-7ee7faeace4a",
            "9db30834-6ee0-4c97-bdb8-d1888630ed6a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 456,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1ed8bfba-cf1d-4468-9bfd-837c4b17b42b",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "db8d2b17-b041-4008-8a7c-3eb41ac4a3c6",
              "parentUUID": "1ed8bfba-cf1d-4468-9bfd-837c4b17b42b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "5bbc1a65-5754-43a1-83db-612c5920261b",
              "parentUUID": "1ed8bfba-cf1d-4468-9bfd-837c4b17b42b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db8d2b17-b041-4008-8a7c-3eb41ac4a3c6",
            "5bbc1a65-5754-43a1-83db-612c5920261b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 456,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3644e676-10d3-468b-8074-910f0af2c9d3",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "342c9ce5-bc19-42a5-a1eb-1913cf5090c2",
              "parentUUID": "3644e676-10d3-468b-8074-910f0af2c9d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "0b3f40c0-7e10-41a3-b600-b36669815395",
              "parentUUID": "3644e676-10d3-468b-8074-910f0af2c9d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "342c9ce5-bc19-42a5-a1eb-1913cf5090c2",
            "0b3f40c0-7e10-41a3-b600-b36669815395"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 184,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "be770dd3-85c5-44db-9bef-92691a8c83e8",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "9099702e-b0cc-4b68-be35-dd20ba8507de",
              "parentUUID": "be770dd3-85c5-44db-9bef-92691a8c83e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8982,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "168198a7-3fe4-4a13-872f-16d00d0adfd5",
              "parentUUID": "be770dd3-85c5-44db-9bef-92691a8c83e8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9099702e-b0cc-4b68-be35-dd20ba8507de",
            "168198a7-3fe4-4a13-872f-16d00d0adfd5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9464,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8e76b609-8104-4a86-b029-ccdd58625958",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "4c8c1d39-c3af-44fe-bb9a-3067c1e46baa",
              "parentUUID": "8e76b609-8104-4a86-b029-ccdd58625958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8902,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "ae650de3-549d-4a85-afc4-7e352e067836",
              "parentUUID": "8e76b609-8104-4a86-b029-ccdd58625958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "cc2fbe8b-bd9e-4b53-ac25-e9cbd72da62d",
              "parentUUID": "8e76b609-8104-4a86-b029-ccdd58625958",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c8c1d39-c3af-44fe-bb9a-3067c1e46baa",
            "ae650de3-549d-4a85-afc4-7e352e067836",
            "cc2fbe8b-bd9e-4b53-ac25-e9cbd72da62d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12629,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e94e60a1-1257-4c39-a044-0e85773e077b",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "812322cf-5231-4abe-87b5-41e1a466c9e3",
              "parentUUID": "e94e60a1-1257-4c39-a044-0e85773e077b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "c2f532c6-2dd4-47ff-af57-ebf6463cdd70",
              "parentUUID": "e94e60a1-1257-4c39-a044-0e85773e077b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "228c10dd-3b94-4c7e-9af8-ec588099b12a",
              "parentUUID": "e94e60a1-1257-4c39-a044-0e85773e077b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "9afc20f0-af08-4a0b-bba9-1b45210cd092",
              "parentUUID": "e94e60a1-1257-4c39-a044-0e85773e077b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "812322cf-5231-4abe-87b5-41e1a466c9e3",
            "c2f532c6-2dd4-47ff-af57-ebf6463cdd70",
            "228c10dd-3b94-4c7e-9af8-ec588099b12a",
            "9afc20f0-af08-4a0b-bba9-1b45210cd092"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2795,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d945640e-c6f6-49cc-895a-06c20f887a19",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4317,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40975/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40975/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40975/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40975/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40975/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40975/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40975/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40975/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "26761428-14a7-4995-8d8e-a7034e787434",
              "parentUUID": "d945640e-c6f6-49cc-895a-06c20f887a19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4287,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40975/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40975/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40975/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40975/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40975/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40975/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40975/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40975/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8378a194-d817-488b-8d56-36ae402c772a",
              "parentUUID": "d945640e-c6f6-49cc-895a-06c20f887a19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4282,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40975/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40975/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40975/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40975/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40975/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40975/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40975/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40975/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "416776ac-4273-45d1-8bb7-9cf78a2cfd2d",
              "parentUUID": "d945640e-c6f6-49cc-895a-06c20f887a19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4281,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40975/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40975/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40975/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40975/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40975/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40975/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40975/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40975/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "633b9213-c12e-44c3-9c65-d8af5aecc378",
              "parentUUID": "d945640e-c6f6-49cc-895a-06c20f887a19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4266,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40975/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40975/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40975/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40975/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40975/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40975/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40975/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40975/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6182a31a-747e-43df-bd0d-9eb2eb372bca",
              "parentUUID": "d945640e-c6f6-49cc-895a-06c20f887a19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4284,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40975/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40975/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40975/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40975/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40975/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40975/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40975/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40975/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6ded8f60-b363-40f0-b9fd-9ba9978cbb3e",
              "parentUUID": "d945640e-c6f6-49cc-895a-06c20f887a19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4334,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40975/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40975/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40975/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40975/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40975/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40975/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40975/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40975/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "791c7305-f4b1-4d16-8902-02e7fd9cd10f",
              "parentUUID": "d945640e-c6f6-49cc-895a-06c20f887a19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4318,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40975/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40975/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40975/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40975/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40975/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40975/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40975/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40975/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b0fe2492-1ac6-450c-b7d0-88229f97f4ee",
              "parentUUID": "d945640e-c6f6-49cc-895a-06c20f887a19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4318,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40975/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40975/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40975/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40975/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40975/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40975/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40975/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40975/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e488a7d3-db95-4162-acb7-fc82ea1a8e86",
              "parentUUID": "d945640e-c6f6-49cc-895a-06c20f887a19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "26761428-14a7-4995-8d8e-a7034e787434",
            "8378a194-d817-488b-8d56-36ae402c772a",
            "416776ac-4273-45d1-8bb7-9cf78a2cfd2d",
            "633b9213-c12e-44c3-9c65-d8af5aecc378",
            "6182a31a-747e-43df-bd0d-9eb2eb372bca",
            "6ded8f60-b363-40f0-b9fd-9ba9978cbb3e",
            "791c7305-f4b1-4d16-8902-02e7fd9cd10f",
            "b0fe2492-1ac6-450c-b7d0-88229f97f4ee",
            "e488a7d3-db95-4162-acb7-fc82ea1a8e86"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38687,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ad161ee8-8078-420a-8c26-f6cc45971b02",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4261,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40975/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40975/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40975/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40975/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40975/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40975/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40975/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40975/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9e8acc7e-effc-4869-806e-cc934a8c02f1",
              "parentUUID": "ad161ee8-8078-420a-8c26-f6cc45971b02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4280,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40975/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40975/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40975/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40975/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40975/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40975/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40975/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40975/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dd328cea-d607-4e2b-8535-d19fa4e4d80e",
              "parentUUID": "ad161ee8-8078-420a-8c26-f6cc45971b02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4267,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:40975/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:40975/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:40975/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:40975/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40975/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40975/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:40975/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:40975/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40975/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ac265453-7044-4ddf-b4f0-0aae619ece23",
              "parentUUID": "ad161ee8-8078-420a-8c26-f6cc45971b02",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9e8acc7e-effc-4869-806e-cc934a8c02f1",
            "dd328cea-d607-4e2b-8535-d19fa4e4d80e",
            "ac265453-7044-4ddf-b4f0-0aae619ece23"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12808,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "730ada12-a821-42a0-a6ee-376730962604",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 400,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:40975/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:40975/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:40975/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:40975/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:40975/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:40975/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40975/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40975/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:40975/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40975/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "2c35d9fb-75d6-45ce-a2c3-e77077408a9e",
              "parentUUID": "730ada12-a821-42a0-a6ee-376730962604",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 387,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:40975/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:40975/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:40975/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:40975/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:40975/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:40975/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:40975/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:40975/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:40975/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:40975/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:40975/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:40975/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "534a8c9c-bd96-44f3-bae4-1b011f06c820",
              "parentUUID": "730ada12-a821-42a0-a6ee-376730962604",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2c35d9fb-75d6-45ce-a2c3-e77077408a9e",
            "534a8c9c-bd96-44f3-bae4-1b011f06c820"
          ],
          "pending": [],
          "skipped": [],
          "duration": 787,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}