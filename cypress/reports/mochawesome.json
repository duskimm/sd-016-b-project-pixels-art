{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-12T17:31:41.750Z",
    "end": "2021-09-12T17:33:15.403Z",
    "duration": 93653,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3693020b-f6d5-467f-8517-29abcea79fe9",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9d827561-7aef-438f-b740-fd000135d3a6",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 775,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "a0b3ec8c-057c-4e03-b620-5201fa44dd3a",
              "parentUUID": "9d827561-7aef-438f-b740-fd000135d3a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0b3ec8c-057c-4e03-b620-5201fa44dd3a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 775,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bd7b6d06-75b1-49c7-8b4e-a082038f2c4f",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "c0cf655f-1c60-46a7-977b-51906094e4b0",
              "parentUUID": "bd7b6d06-75b1-49c7-8b4e-a082038f2c4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "f1b209bd-75f6-468d-bb53-8e99c0fcfa5c",
              "parentUUID": "bd7b6d06-75b1-49c7-8b4e-a082038f2c4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "ec11aacd-93dd-494f-81e6-0d359981c686",
              "parentUUID": "bd7b6d06-75b1-49c7-8b4e-a082038f2c4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 236,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "29771b7c-6b00-4daa-9cf4-e6b19652cbcd",
              "parentUUID": "bd7b6d06-75b1-49c7-8b4e-a082038f2c4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "1b4dd880-80a3-4378-b5b7-02a577b892f3",
              "parentUUID": "bd7b6d06-75b1-49c7-8b4e-a082038f2c4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "ae2d6361-721c-4422-bdc1-5a14b0e1c0b6",
              "parentUUID": "bd7b6d06-75b1-49c7-8b4e-a082038f2c4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "3bafca08-ec80-4e8f-a8b4-62bfc2a57934",
              "parentUUID": "bd7b6d06-75b1-49c7-8b4e-a082038f2c4f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0cf655f-1c60-46a7-977b-51906094e4b0",
            "f1b209bd-75f6-468d-bb53-8e99c0fcfa5c",
            "ec11aacd-93dd-494f-81e6-0d359981c686",
            "29771b7c-6b00-4daa-9cf4-e6b19652cbcd",
            "1b4dd880-80a3-4378-b5b7-02a577b892f3",
            "ae2d6361-721c-4422-bdc1-5a14b0e1c0b6",
            "3bafca08-ec80-4e8f-a8b4-62bfc2a57934"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1788,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2dcd498a-39f9-4b6a-85bb-ada49765608a",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "21155c86-3309-4603-a542-cd14cc5cf832",
              "parentUUID": "2dcd498a-39f9-4b6a-85bb-ada49765608a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "4ffcdce6-c4fc-40df-ae56-9a3d5310fe5c",
              "parentUUID": "2dcd498a-39f9-4b6a-85bb-ada49765608a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21155c86-3309-4603-a542-cd14cc5cf832",
            "4ffcdce6-c4fc-40df-ae56-9a3d5310fe5c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 529,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ab173921-8f8d-4562-bbfd-e3821e16f47e",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "bc26be74-56db-445c-9a10-99aa5478be67",
              "parentUUID": "ab173921-8f8d-4562-bbfd-e3821e16f47e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 337,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "a89655d3-5fe3-4e5f-8c09-e0012d1ba850",
              "parentUUID": "ab173921-8f8d-4562-bbfd-e3821e16f47e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 389,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "5f524f7d-615b-4a6c-89fe-8fa864fe2594",
              "parentUUID": "ab173921-8f8d-4562-bbfd-e3821e16f47e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "314764fa-a68e-48e8-aa8a-0eb49d57f02e",
              "parentUUID": "ab173921-8f8d-4562-bbfd-e3821e16f47e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc26be74-56db-445c-9a10-99aa5478be67",
            "a89655d3-5fe3-4e5f-8c09-e0012d1ba850",
            "5f524f7d-615b-4a6c-89fe-8fa864fe2594",
            "314764fa-a68e-48e8-aa8a-0eb49d57f02e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1118,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3c400630-aba2-4661-8bf9-17a383cee7a6",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 604,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "8a16333c-aad6-43e6-8526-e79ff8ccb25a",
              "parentUUID": "3c400630-aba2-4661-8bf9-17a383cee7a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 575,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "27081c9b-b278-40ac-aa85-c262d3f35df2",
              "parentUUID": "3c400630-aba2-4661-8bf9-17a383cee7a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a16333c-aad6-43e6-8526-e79ff8ccb25a",
            "27081c9b-b278-40ac-aa85-c262d3f35df2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1179,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a6368fba-3576-4c4a-9311-2a27946b4508",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "dd946b90-edd4-49dd-b606-20ecfa3f149c",
              "parentUUID": "a6368fba-3576-4c4a-9311-2a27946b4508",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "7a9b5fc0-b8e9-4367-ae3c-4cf63710bb11",
              "parentUUID": "a6368fba-3576-4c4a-9311-2a27946b4508",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dd946b90-edd4-49dd-b606-20ecfa3f149c",
            "7a9b5fc0-b8e9-4367-ae3c-4cf63710bb11"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 281,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "62fd412f-9324-47c5-962d-8a39efdca207",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 734,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "f077937f-7ca3-46fb-b163-af0276cc7f53",
              "parentUUID": "62fd412f-9324-47c5-962d-8a39efdca207",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9375,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "97f48305-c61e-43eb-b670-6cabc7d02237",
              "parentUUID": "62fd412f-9324-47c5-962d-8a39efdca207",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f077937f-7ca3-46fb-b163-af0276cc7f53",
            "97f48305-c61e-43eb-b670-6cabc7d02237"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10109,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "08b274f8-c7ef-44db-a7a4-90b67b1d8a99",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2496,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "0760b59a-64cb-4c6f-9fd5-4cb23c410371",
              "parentUUID": "08b274f8-c7ef-44db-a7a4-90b67b1d8a99",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "70e6b227-ab34-4415-8a26-960095e35465",
              "parentUUID": "08b274f8-c7ef-44db-a7a4-90b67b1d8a99",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 3184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "ac9968b9-c927-4c4b-9f00-3aad0507d52e",
              "parentUUID": "08b274f8-c7ef-44db-a7a4-90b67b1d8a99",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0760b59a-64cb-4c6f-9fd5-4cb23c410371",
            "70e6b227-ab34-4415-8a26-960095e35465",
            "ac9968b9-c927-4c4b-9f00-3aad0507d52e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14940,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2b50f30b-1019-456d-a9e9-8b573f83638b",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "62465137-6ba6-4322-8f1d-a8ba29b14f88",
              "parentUUID": "2b50f30b-1019-456d-a9e9-8b573f83638b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "3f4a735d-94e3-41bd-8ee7-ee4501118916",
              "parentUUID": "2b50f30b-1019-456d-a9e9-8b573f83638b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "5d63b82d-5ebf-4bde-a584-73fa85096f9b",
              "parentUUID": "2b50f30b-1019-456d-a9e9-8b573f83638b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2742,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "4c214c40-e225-4d9f-9ed4-5173fb19700c",
              "parentUUID": "2b50f30b-1019-456d-a9e9-8b573f83638b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62465137-6ba6-4322-8f1d-a8ba29b14f88",
            "3f4a735d-94e3-41bd-8ee7-ee4501118916",
            "5d63b82d-5ebf-4bde-a584-73fa85096f9b",
            "4c214c40-e225-4d9f-9ed4-5173fb19700c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3567,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5d300d26-2039-40ed-9cb5-e6de9fcb550c",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4708,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34229/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34229/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34229/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34229/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34229/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34229/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34229/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34229/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d93e340b-0af6-4b99-818f-d54543c649c3",
              "parentUUID": "5d300d26-2039-40ed-9cb5-e6de9fcb550c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4781,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34229/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34229/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34229/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34229/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34229/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34229/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34229/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34229/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "55ac55e7-99fd-4029-bb7e-0083cb4a6a03",
              "parentUUID": "5d300d26-2039-40ed-9cb5-e6de9fcb550c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4577,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34229/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34229/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34229/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34229/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34229/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34229/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34229/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34229/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "adf240d5-e86b-4aab-8ea2-40aad80c84a8",
              "parentUUID": "5d300d26-2039-40ed-9cb5-e6de9fcb550c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4740,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34229/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34229/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34229/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34229/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34229/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34229/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34229/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34229/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8dac7476-c408-4a9a-8d07-066b893e8fc4",
              "parentUUID": "5d300d26-2039-40ed-9cb5-e6de9fcb550c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4691,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34229/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34229/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34229/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34229/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34229/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34229/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34229/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34229/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fe8ef5df-c5ed-4c34-bf2c-a4504bdbe249",
              "parentUUID": "5d300d26-2039-40ed-9cb5-e6de9fcb550c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4586,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34229/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34229/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34229/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34229/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34229/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34229/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34229/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34229/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "37f39f82-48cc-4d05-9b66-7eed577ff570",
              "parentUUID": "5d300d26-2039-40ed-9cb5-e6de9fcb550c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4573,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34229/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34229/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34229/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34229/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34229/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34229/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34229/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34229/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6d965d55-db91-4485-913a-b32d7482db4f",
              "parentUUID": "5d300d26-2039-40ed-9cb5-e6de9fcb550c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4651,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34229/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34229/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34229/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34229/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34229/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34229/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34229/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34229/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a898755e-50d0-4214-845c-639d4f7b2eed",
              "parentUUID": "5d300d26-2039-40ed-9cb5-e6de9fcb550c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4615,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34229/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34229/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34229/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34229/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34229/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34229/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34229/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34229/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d041f0be-153e-4af8-8fe0-e45a5eb06e1b",
              "parentUUID": "5d300d26-2039-40ed-9cb5-e6de9fcb550c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d93e340b-0af6-4b99-818f-d54543c649c3",
            "55ac55e7-99fd-4029-bb7e-0083cb4a6a03",
            "adf240d5-e86b-4aab-8ea2-40aad80c84a8",
            "8dac7476-c408-4a9a-8d07-066b893e8fc4",
            "fe8ef5df-c5ed-4c34-bf2c-a4504bdbe249",
            "37f39f82-48cc-4d05-9b66-7eed577ff570",
            "6d965d55-db91-4485-913a-b32d7482db4f",
            "a898755e-50d0-4214-845c-639d4f7b2eed",
            "d041f0be-153e-4af8-8fe0-e45a5eb06e1b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 41922,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "33d7be15-7a29-4f85-a447-e16e6c30bc59",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4751,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34229/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34229/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34229/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34229/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34229/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34229/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34229/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34229/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8eef9d10-8737-4f67-9cdb-82593458004a",
              "parentUUID": "33d7be15-7a29-4f85-a447-e16e6c30bc59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4686,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34229/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34229/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34229/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34229/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34229/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34229/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34229/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34229/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2ee07595-51f9-45a6-be75-df7e792d0d7c",
              "parentUUID": "33d7be15-7a29-4f85-a447-e16e6c30bc59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4697,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34229/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34229/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34229/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34229/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34229/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34229/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34229/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34229/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34229/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c1a7a101-1f5d-45a1-9565-eed835835589",
              "parentUUID": "33d7be15-7a29-4f85-a447-e16e6c30bc59",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8eef9d10-8737-4f67-9cdb-82593458004a",
            "2ee07595-51f9-45a6-be75-df7e792d0d7c",
            "c1a7a101-1f5d-45a1-9565-eed835835589"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14134,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d8428826-49d5-46e6-a095-7f1539c81eed",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 720,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34229/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34229/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34229/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34229/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34229/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34229/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34229/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34229/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34229/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34229/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "adaf9688-35b8-4258-8c20-964689b8867c",
              "parentUUID": "d8428826-49d5-46e6-a095-7f1539c81eed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 815,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34229/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34229/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34229/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34229/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34229/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34229/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34229/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34229/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34229/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34229/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34229/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34229/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "330af47c-82b8-430c-8e93-fc78f9dd2c8c",
              "parentUUID": "d8428826-49d5-46e6-a095-7f1539c81eed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "adaf9688-35b8-4258-8c20-964689b8867c",
            "330af47c-82b8-430c-8e93-fc78f9dd2c8c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1535,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}