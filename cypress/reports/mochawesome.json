{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-09-11T03:25:19.272Z",
    "end": "2021-09-11T03:26:40.440Z",
    "duration": 81168,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b8cf4425-5540-4810-ba06-c88561ab3c8c",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "638ad4af-d95c-4701-8a58-f1500149c61e",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "802b2ecf-2bd0-4653-8ca2-7fcc5e3a03f9",
              "parentUUID": "638ad4af-d95c-4701-8a58-f1500149c61e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "802b2ecf-2bd0-4653-8ca2-7fcc5e3a03f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 152,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b64356d9-7b66-44ae-8fc3-3b0bd54f5f4c",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "609534b7-4a93-456d-ba28-797db7581011",
              "parentUUID": "b64356d9-7b66-44ae-8fc3-3b0bd54f5f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "afbabe53-be67-42ae-b70a-d3777ad9d382",
              "parentUUID": "b64356d9-7b66-44ae-8fc3-3b0bd54f5f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "539ddb7c-6ad3-42f2-9789-042476a3b987",
              "parentUUID": "b64356d9-7b66-44ae-8fc3-3b0bd54f5f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "58edef29-83a6-4fc6-a716-00e6412250f8",
              "parentUUID": "b64356d9-7b66-44ae-8fc3-3b0bd54f5f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "93267627-68a4-4351-b925-6372d6e8cc13",
              "parentUUID": "b64356d9-7b66-44ae-8fc3-3b0bd54f5f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "78433ad1-afab-4cfe-bc13-0fb77f00da91",
              "parentUUID": "b64356d9-7b66-44ae-8fc3-3b0bd54f5f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "15f7395b-778e-47ff-b7f9-24570b689b56",
              "parentUUID": "b64356d9-7b66-44ae-8fc3-3b0bd54f5f4c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "609534b7-4a93-456d-ba28-797db7581011",
            "afbabe53-be67-42ae-b70a-d3777ad9d382",
            "539ddb7c-6ad3-42f2-9789-042476a3b987",
            "58edef29-83a6-4fc6-a716-00e6412250f8",
            "93267627-68a4-4351-b925-6372d6e8cc13",
            "78433ad1-afab-4cfe-bc13-0fb77f00da91",
            "15f7395b-778e-47ff-b7f9-24570b689b56"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 912,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8341292a-49f6-41a4-b856-764f93d9e52c",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f98859ce-fdd4-447d-b66a-c636688ed4b8",
              "parentUUID": "8341292a-49f6-41a4-b856-764f93d9e52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "219d6479-a37f-41b6-a48a-b96a8f6f7aa3",
              "parentUUID": "8341292a-49f6-41a4-b856-764f93d9e52c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f98859ce-fdd4-447d-b66a-c636688ed4b8",
            "219d6479-a37f-41b6-a48a-b96a8f6f7aa3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 293,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "da439ce2-435f-4a26-a2d5-68b470bb4972",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "d8ba8f5d-7a91-45a2-bf43-6118f915caa6",
              "parentUUID": "da439ce2-435f-4a26-a2d5-68b470bb4972",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "f25cb8f8-0079-4d3a-953b-91ac3680eb7e",
              "parentUUID": "da439ce2-435f-4a26-a2d5-68b470bb4972",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "2a7cd5ea-43a0-485d-8270-730da66acc77",
              "parentUUID": "da439ce2-435f-4a26-a2d5-68b470bb4972",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "60e9a567-f6a4-4aa9-bd7a-3541a1eb34ad",
              "parentUUID": "da439ce2-435f-4a26-a2d5-68b470bb4972",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8ba8f5d-7a91-45a2-bf43-6118f915caa6",
            "f25cb8f8-0079-4d3a-953b-91ac3680eb7e",
            "2a7cd5ea-43a0-485d-8270-730da66acc77",
            "60e9a567-f6a4-4aa9-bd7a-3541a1eb34ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 423,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7cb598f7-0cc5-4356-ba2b-fff4c7263dad",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "14c43d90-71d7-4feb-87cc-fa13facfc321",
              "parentUUID": "7cb598f7-0cc5-4356-ba2b-fff4c7263dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "769dac2b-d34d-4c06-bc65-52247c71da35",
              "parentUUID": "7cb598f7-0cc5-4356-ba2b-fff4c7263dad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "14c43d90-71d7-4feb-87cc-fa13facfc321",
            "769dac2b-d34d-4c06-bc65-52247c71da35"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 457,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "af24280f-fbf2-4b25-892f-fe4ae976d79a",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f78b9f7e-a9c6-4144-9fc5-0be620448cfb",
              "parentUUID": "af24280f-fbf2-4b25-892f-fe4ae976d79a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "b4c2592f-83de-4516-99d4-38959ea43520",
              "parentUUID": "af24280f-fbf2-4b25-892f-fe4ae976d79a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f78b9f7e-a9c6-4144-9fc5-0be620448cfb",
            "b4c2592f-83de-4516-99d4-38959ea43520"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 179,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8c5bab51-557c-4d75-9e41-a94282805c97",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 557,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "66f12c41-7bcf-4138-b3c7-c257d34c3e1c",
              "parentUUID": "8c5bab51-557c-4d75-9e41-a94282805c97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8835,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "e79dfa16-aaac-48a8-98d1-b1c3171b46cf",
              "parentUUID": "8c5bab51-557c-4d75-9e41-a94282805c97",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66f12c41-7bcf-4138-b3c7-c257d34c3e1c",
            "e79dfa16-aaac-48a8-98d1-b1c3171b46cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9392,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a8615495-4a3e-47b9-8b00-c9d91a8bc070",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "51767a9e-1643-4612-aa35-c833135dc543",
              "parentUUID": "a8615495-4a3e-47b9-8b00-c9d91a8bc070",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8729,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "2a1ee4b3-ea22-4940-8e4e-ec6cc11c84b4",
              "parentUUID": "a8615495-4a3e-47b9-8b00-c9d91a8bc070",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "ce0a1281-b232-48ca-b63d-e068954ea5b6",
              "parentUUID": "a8615495-4a3e-47b9-8b00-c9d91a8bc070",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51767a9e-1643-4612-aa35-c833135dc543",
            "2a1ee4b3-ea22-4940-8e4e-ec6cc11c84b4",
            "ce0a1281-b232-48ca-b63d-e068954ea5b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12124,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6ea3f598-e220-4f18-b1e7-8f622c73ee30",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "1d85e2a5-1de9-4efe-84ae-8c1d2cb8aa28",
              "parentUUID": "6ea3f598-e220-4f18-b1e7-8f622c73ee30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "9e38618a-c59f-4ea0-b25e-2ad5cdd486d5",
              "parentUUID": "6ea3f598-e220-4f18-b1e7-8f622c73ee30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "aabf672e-2eb6-450f-9e72-f9a6a3262300",
              "parentUUID": "6ea3f598-e220-4f18-b1e7-8f622c73ee30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "f5ecd0dd-8175-43d4-a378-62b07df5e46e",
              "parentUUID": "6ea3f598-e220-4f18-b1e7-8f622c73ee30",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d85e2a5-1de9-4efe-84ae-8c1d2cb8aa28",
            "9e38618a-c59f-4ea0-b25e-2ad5cdd486d5",
            "aabf672e-2eb6-450f-9e72-f9a6a3262300",
            "f5ecd0dd-8175-43d4-a378-62b07df5e46e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2605,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "644b7864-b36a-482a-9a6e-7c96f0e05e91",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4334,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34907/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34907/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34907/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34907/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34907/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34907/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34907/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34907/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34907/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "04d3913c-c56c-4443-bda2-acc8c010efb0",
              "parentUUID": "644b7864-b36a-482a-9a6e-7c96f0e05e91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4325,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34907/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34907/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34907/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34907/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34907/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34907/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34907/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34907/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34907/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7f1101cb-93c9-45f0-bfed-692ff4a451da",
              "parentUUID": "644b7864-b36a-482a-9a6e-7c96f0e05e91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4409,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34907/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34907/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34907/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34907/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34907/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34907/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34907/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34907/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34907/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6b79d1ae-d2a0-4650-abda-ebb033f4fcd9",
              "parentUUID": "644b7864-b36a-482a-9a6e-7c96f0e05e91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4433,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34907/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34907/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34907/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34907/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34907/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34907/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34907/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34907/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34907/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1cb0ffd1-1b27-48b4-87b3-3e63073e8f17",
              "parentUUID": "644b7864-b36a-482a-9a6e-7c96f0e05e91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4259,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34907/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34907/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34907/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34907/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34907/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34907/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34907/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34907/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34907/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "682b7fb6-a9b5-4464-863b-529b25d32421",
              "parentUUID": "644b7864-b36a-482a-9a6e-7c96f0e05e91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4426,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34907/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34907/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34907/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34907/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34907/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34907/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34907/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34907/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34907/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "266851f1-1b11-4eec-b1b7-0acf77eb7e43",
              "parentUUID": "644b7864-b36a-482a-9a6e-7c96f0e05e91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4310,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34907/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34907/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34907/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34907/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34907/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34907/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34907/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34907/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34907/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "28a4894d-f4cc-4bb4-a045-e618ac56924d",
              "parentUUID": "644b7864-b36a-482a-9a6e-7c96f0e05e91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4478,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34907/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34907/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34907/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34907/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34907/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34907/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34907/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34907/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34907/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1e0c407f-6100-4d0b-9d69-e3c0f4cd49d6",
              "parentUUID": "644b7864-b36a-482a-9a6e-7c96f0e05e91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4416,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34907/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34907/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34907/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34907/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34907/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34907/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34907/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34907/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34907/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "42867a34-a525-4ec0-8b5f-3a32a1d034aa",
              "parentUUID": "644b7864-b36a-482a-9a6e-7c96f0e05e91",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "04d3913c-c56c-4443-bda2-acc8c010efb0",
            "7f1101cb-93c9-45f0-bfed-692ff4a451da",
            "6b79d1ae-d2a0-4650-abda-ebb033f4fcd9",
            "1cb0ffd1-1b27-48b4-87b3-3e63073e8f17",
            "682b7fb6-a9b5-4464-863b-529b25d32421",
            "266851f1-1b11-4eec-b1b7-0acf77eb7e43",
            "28a4894d-f4cc-4bb4-a045-e618ac56924d",
            "1e0c407f-6100-4d0b-9d69-e3c0f4cd49d6",
            "42867a34-a525-4ec0-8b5f-3a32a1d034aa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39390,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "71f5ace9-29b2-4fdc-9cf5-945df703f8f8",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4278,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34907/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34907/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34907/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34907/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34907/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34907/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34907/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34907/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34907/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "087cb719-c4f7-4497-9c3b-66c884b613a9",
              "parentUUID": "71f5ace9-29b2-4fdc-9cf5-945df703f8f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4322,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34907/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34907/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34907/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34907/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34907/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34907/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34907/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34907/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34907/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "07c1cc92-7488-4511-a34c-53fe107edc67",
              "parentUUID": "71f5ace9-29b2-4fdc-9cf5-945df703f8f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4368,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34907/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34907/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34907/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34907/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34907/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34907/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34907/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34907/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34907/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34907/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34907/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3f771f6f-e1eb-4151-bb3e-f0532d1702b8",
              "parentUUID": "71f5ace9-29b2-4fdc-9cf5-945df703f8f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "087cb719-c4f7-4497-9c3b-66c884b613a9",
            "07c1cc92-7488-4511-a34c-53fe107edc67",
            "3f771f6f-e1eb-4151-bb3e-f0532d1702b8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12968,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "efa2337e-d9e1-4a5f-b899-7506fb841331",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 512,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "c23c3c1c-b58c-4759-8eba-4fecf5782d81",
              "parentUUID": "efa2337e-d9e1-4a5f-b899-7506fb841331",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 643,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "0b2e48cc-a29f-43b4-8980-6ec3e22702cc",
              "parentUUID": "efa2337e-d9e1-4a5f-b899-7506fb841331",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c23c3c1c-b58c-4759-8eba-4fecf5782d81",
            "0b2e48cc-a29f-43b4-8980-6ec3e22702cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1155,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}