{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-17T14:29:22.376Z",
    "end": "2021-09-17T14:30:56.469Z",
    "duration": 94093,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "82abd6c9-5e98-499b-b268-dc882153a5c4",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f453ec78-d82d-4b32-a42e-4d65bc18b454",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 608,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "15995be0-18f8-4d7e-a938-1e00a77c8da9",
              "parentUUID": "f453ec78-d82d-4b32-a42e-4d65bc18b454",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "15995be0-18f8-4d7e-a938-1e00a77c8da9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 608,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e86fabdd-0c61-49a0-b498-daaf695c9f51",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "c93e35f9-dd17-4920-8bac-2f24c8c4565d",
              "parentUUID": "e86fabdd-0c61-49a0-b498-daaf695c9f51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "9588c703-f4aa-46b1-8a36-b43e8febc559",
              "parentUUID": "e86fabdd-0c61-49a0-b498-daaf695c9f51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 347,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "6f202ffc-509f-478f-8f20-023c7f5299c1",
              "parentUUID": "e86fabdd-0c61-49a0-b498-daaf695c9f51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "ffaf5e43-3c3a-471b-b344-db1e8e742eba",
              "parentUUID": "e86fabdd-0c61-49a0-b498-daaf695c9f51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "1bc17033-69ff-48de-a425-0047b6e1e7bc",
              "parentUUID": "e86fabdd-0c61-49a0-b498-daaf695c9f51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "ceddd25f-04b0-4154-8791-c86036ba97d1",
              "parentUUID": "e86fabdd-0c61-49a0-b498-daaf695c9f51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "29f1bc68-0776-4a90-96d9-5da754d492bc",
              "parentUUID": "e86fabdd-0c61-49a0-b498-daaf695c9f51",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c93e35f9-dd17-4920-8bac-2f24c8c4565d",
            "9588c703-f4aa-46b1-8a36-b43e8febc559",
            "6f202ffc-509f-478f-8f20-023c7f5299c1",
            "ffaf5e43-3c3a-471b-b344-db1e8e742eba",
            "1bc17033-69ff-48de-a425-0047b6e1e7bc",
            "ceddd25f-04b0-4154-8791-c86036ba97d1",
            "29f1bc68-0776-4a90-96d9-5da754d492bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1631,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "99cf04d6-4e33-42ef-831c-250f0239eee9",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "1aee7f3c-e9f1-4147-ae2a-56c25bb44c76",
              "parentUUID": "99cf04d6-4e33-42ef-831c-250f0239eee9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 419,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "64f89db1-52b6-4bd3-95c9-4ef8193cc39c",
              "parentUUID": "99cf04d6-4e33-42ef-831c-250f0239eee9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1aee7f3c-e9f1-4147-ae2a-56c25bb44c76",
            "64f89db1-52b6-4bd3-95c9-4ef8193cc39c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 714,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "41e23536-d49c-4a71-9e97-96dda5890588",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "bd7f029c-f42f-4bc8-aadf-68474eb241fd",
              "parentUUID": "41e23536-d49c-4a71-9e97-96dda5890588",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 252,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "db80ce28-4b93-4931-a3b1-26a005610b5d",
              "parentUUID": "41e23536-d49c-4a71-9e97-96dda5890588",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "2552d183-176b-4faa-b830-33915e1e5b09",
              "parentUUID": "41e23536-d49c-4a71-9e97-96dda5890588",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "78d02887-3cd8-4429-a5b6-ad865123f6b8",
              "parentUUID": "41e23536-d49c-4a71-9e97-96dda5890588",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd7f029c-f42f-4bc8-aadf-68474eb241fd",
            "db80ce28-4b93-4931-a3b1-26a005610b5d",
            "2552d183-176b-4faa-b830-33915e1e5b09",
            "78d02887-3cd8-4429-a5b6-ad865123f6b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 856,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "73a094bb-fca2-472a-83be-ab69b9adc2cb",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 675,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "4aeac0d1-6d55-4b06-9022-2ace244b6a9a",
              "parentUUID": "73a094bb-fca2-472a-83be-ab69b9adc2cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 572,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "ff549b58-563f-40b7-801c-4f9f9f32043c",
              "parentUUID": "73a094bb-fca2-472a-83be-ab69b9adc2cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4aeac0d1-6d55-4b06-9022-2ace244b6a9a",
            "ff549b58-563f-40b7-801c-4f9f9f32043c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1247,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c06a4635-dc70-4e54-aa9f-3dacf0c015ec",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "0b70f6d2-ef19-45a1-826f-634eb884c3cc",
              "parentUUID": "c06a4635-dc70-4e54-aa9f-3dacf0c015ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "6f5197f0-72e7-4c42-a08c-1e4dbe5aa1ab",
              "parentUUID": "c06a4635-dc70-4e54-aa9f-3dacf0c015ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b70f6d2-ef19-45a1-826f-634eb884c3cc",
            "6f5197f0-72e7-4c42-a08c-1e4dbe5aa1ab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 369,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1b2233a5-eadf-4246-85af-2a9e18f8b18e",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 596,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "4d76146b-61f8-41e3-86df-76dbbef12867",
              "parentUUID": "1b2233a5-eadf-4246-85af-2a9e18f8b18e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9096,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "5c410d54-97e2-4a07-9cd0-7fe5202f32be",
              "parentUUID": "1b2233a5-eadf-4246-85af-2a9e18f8b18e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4d76146b-61f8-41e3-86df-76dbbef12867",
            "5c410d54-97e2-4a07-9cd0-7fe5202f32be"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9692,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "01e2996f-840c-40e9-b878-50d4ef08aea1",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2443,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "5c1ec8d9-509c-40d8-b1b4-f675f3e525b3",
              "parentUUID": "01e2996f-840c-40e9-b878-50d4ef08aea1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8888,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "d4258deb-a476-4ed5-befd-764d8c34f1f5",
              "parentUUID": "01e2996f-840c-40e9-b878-50d4ef08aea1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2059,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "562b3464-d500-436b-8bb3-2368c7844dda",
              "parentUUID": "01e2996f-840c-40e9-b878-50d4ef08aea1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c1ec8d9-509c-40d8-b1b4-f675f3e525b3",
            "d4258deb-a476-4ed5-befd-764d8c34f1f5",
            "562b3464-d500-436b-8bb3-2368c7844dda"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13390,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cdd6f94b-57f9-4a15-ad55-b16d4b5327ee",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "6262840c-3a94-45fb-9444-a9993b9edf4b",
              "parentUUID": "cdd6f94b-57f9-4a15-ad55-b16d4b5327ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "038ad47f-36df-46f0-af59-0adfbc894768",
              "parentUUID": "cdd6f94b-57f9-4a15-ad55-b16d4b5327ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "7fed6a56-632a-479f-b5f7-53614ec0a49a",
              "parentUUID": "cdd6f94b-57f9-4a15-ad55-b16d4b5327ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2744,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "589960d3-4fb1-4189-b499-3ae085c48c67",
              "parentUUID": "cdd6f94b-57f9-4a15-ad55-b16d4b5327ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6262840c-3a94-45fb-9444-a9993b9edf4b",
            "038ad47f-36df-46f0-af59-0adfbc894768",
            "7fed6a56-632a-479f-b5f7-53614ec0a49a",
            "589960d3-4fb1-4189-b499-3ae085c48c67"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3317,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "69392179-4bda-4101-8a6f-825aec29278a",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4760,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:57309/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:57309/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:57309/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:57309/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:57309/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:57309/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:57309/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:57309/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "deb6ca77-3c47-4039-a69a-99f91fee0c6c",
              "parentUUID": "69392179-4bda-4101-8a6f-825aec29278a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4667,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:57309/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:57309/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:57309/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:57309/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:57309/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:57309/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:57309/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:57309/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "70969d02-be54-4949-bd55-2e1da12a35b6",
              "parentUUID": "69392179-4bda-4101-8a6f-825aec29278a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4692,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:57309/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:57309/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:57309/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:57309/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:57309/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:57309/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:57309/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:57309/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5c6deb2e-9253-4fbb-aa30-ffae7cd8aa83",
              "parentUUID": "69392179-4bda-4101-8a6f-825aec29278a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4808,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:57309/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:57309/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:57309/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:57309/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:57309/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:57309/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:57309/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:57309/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "206f2381-67e3-4972-bae3-cc6e0d7a8c59",
              "parentUUID": "69392179-4bda-4101-8a6f-825aec29278a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4769,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:57309/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:57309/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:57309/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:57309/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:57309/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:57309/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:57309/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:57309/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7d9bbd37-56a7-4884-bf1d-8c9878c383a5",
              "parentUUID": "69392179-4bda-4101-8a6f-825aec29278a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4854,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:57309/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:57309/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:57309/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:57309/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:57309/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:57309/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:57309/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:57309/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ed6266a0-9b00-4930-9eba-2570158ed557",
              "parentUUID": "69392179-4bda-4101-8a6f-825aec29278a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 5071,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:57309/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:57309/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:57309/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:57309/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:57309/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:57309/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:57309/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:57309/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "40525416-5849-4b82-8749-34a29064486a",
              "parentUUID": "69392179-4bda-4101-8a6f-825aec29278a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4884,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:57309/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:57309/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:57309/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:57309/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:57309/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:57309/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:57309/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:57309/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9f942d85-fd79-488a-af1e-48cedce92e28",
              "parentUUID": "69392179-4bda-4101-8a6f-825aec29278a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4738,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:57309/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:57309/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:57309/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:57309/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:57309/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:57309/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:57309/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:57309/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f2c885bc-ef79-4915-bf0c-4e561b989878",
              "parentUUID": "69392179-4bda-4101-8a6f-825aec29278a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "deb6ca77-3c47-4039-a69a-99f91fee0c6c",
            "70969d02-be54-4949-bd55-2e1da12a35b6",
            "5c6deb2e-9253-4fbb-aa30-ffae7cd8aa83",
            "206f2381-67e3-4972-bae3-cc6e0d7a8c59",
            "7d9bbd37-56a7-4884-bf1d-8c9878c383a5",
            "ed6266a0-9b00-4930-9eba-2570158ed557",
            "40525416-5849-4b82-8749-34a29064486a",
            "9f942d85-fd79-488a-af1e-48cedce92e28",
            "f2c885bc-ef79-4915-bf0c-4e561b989878"
          ],
          "pending": [],
          "skipped": [],
          "duration": 43243,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e00b518c-335e-4966-90e2-b804a9596fa2",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4892,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:57309/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:57309/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:57309/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:57309/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:57309/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:57309/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:57309/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:57309/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "32a3ff1c-f660-4537-a9bf-6e0c3bea0237",
              "parentUUID": "e00b518c-335e-4966-90e2-b804a9596fa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 5122,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:57309/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:57309/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:57309/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:57309/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:57309/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:57309/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:57309/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:57309/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ecefae78-b189-4155-98f0-e166d40cd62f",
              "parentUUID": "e00b518c-335e-4966-90e2-b804a9596fa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5047,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:57309/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:57309/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:57309/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:57309/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:57309/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:57309/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:57309/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:57309/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:57309/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8d69245d-35be-4496-8001-5b1c13040067",
              "parentUUID": "e00b518c-335e-4966-90e2-b804a9596fa2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "32a3ff1c-f660-4537-a9bf-6e0c3bea0237",
            "ecefae78-b189-4155-98f0-e166d40cd62f",
            "8d69245d-35be-4496-8001-5b1c13040067"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15061,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e03832d5-23d1-4796-978f-8cb067d0d752",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1166,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:57309/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:57309/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:57309/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:57309/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:57309/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:57309/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:57309/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:57309/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:57309/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:57309/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "fc34cb38-ef98-48db-b86d-16b3c4f58d4b",
              "parentUUID": "e03832d5-23d1-4796-978f-8cb067d0d752",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 944,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:57309/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:57309/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:57309/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:57309/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:57309/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:57309/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:57309/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:57309/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:57309/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:57309/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:57309/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:57309/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "0330f85b-c2da-4a93-9e2b-fc1422808998",
              "parentUUID": "e03832d5-23d1-4796-978f-8cb067d0d752",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fc34cb38-ef98-48db-b86d-16b3c4f58d4b",
            "0330f85b-c2da-4a93-9e2b-fc1422808998"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2110,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}