{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 21,
    "pending": 0,
    "failures": 20,
    "start": "2021-09-14T16:29:15.012Z",
    "end": "2021-09-14T16:30:39.690Z",
    "duration": 84678,
    "testsRegistered": 41,
    "passPercent": 51.21951219512195,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "32150b1f-3422-4b8d-a723-f668483a56df",
      "title": "",
      "fullFile": "cypress\\integration\\project.spec.js",
      "file": "cypress\\integration\\project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "225ae6a8-7ec9-43fe-92cf-73ebad706a60",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 382,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "08ee9235-2d3b-4067-b5c6-ab204db4f3db",
              "parentUUID": "225ae6a8-7ec9-43fe-92cf-73ebad706a60",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08ee9235-2d3b-4067-b5c6-ab204db4f3db"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 382,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b813021d-dea5-4c4e-9a5c-88ed4244eb10",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "9748825c-d44a-4490-993a-419feb84df56",
              "parentUUID": "b813021d-dea5-4c4e-9a5c-88ed4244eb10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "c36201d7-c4cc-454b-bd2e-dce70eb577ab",
              "parentUUID": "b813021d-dea5-4c4e-9a5c-88ed4244eb10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "ad62431d-aed8-4b11-8556-f2f1e054128b",
              "parentUUID": "b813021d-dea5-4c4e-9a5c-88ed4244eb10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 4150,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {
                "message": "AssertionError: Timed out retrying: expected '<div.color.selected>' to have CSS property 'border' with the value '1px solid rgb(0, 0, 0)', but the value was '2px solid rgb(255, 255, 255)'",
                "estack": "AssertionError: Timed out retrying: expected '<div.color.selected>' to have CSS property 'border' with the value '1px solid rgb(0, 0, 0)', but the value was '2px solid rgb(255, 255, 255)'\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:98:22)",
                "diff": "- '2px solid rgb(255, 255, 255)'\n+ '1px solid rgb(0, 0, 0)'\n"
              },
              "uuid": "06237e4f-c616-4588-9fb1-faf4cf58858b",
              "parentUUID": "b813021d-dea5-4c4e-9a5c-88ed4244eb10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "42a5972c-4cad-41da-9231-96a22ae8d428",
              "parentUUID": "b813021d-dea5-4c4e-9a5c-88ed4244eb10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "4f2d6929-3adf-4508-9b69-79fc2446bf29",
              "parentUUID": "b813021d-dea5-4c4e-9a5c-88ed4244eb10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "fdc35a25-8dbe-4dc1-a16e-75845c7728f4",
              "parentUUID": "b813021d-dea5-4c4e-9a5c-88ed4244eb10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9748825c-d44a-4490-993a-419feb84df56",
            "c36201d7-c4cc-454b-bd2e-dce70eb577ab",
            "ad62431d-aed8-4b11-8556-f2f1e054128b",
            "42a5972c-4cad-41da-9231-96a22ae8d428",
            "4f2d6929-3adf-4508-9b69-79fc2446bf29",
            "fdc35a25-8dbe-4dc1-a16e-75845c7728f4"
          ],
          "failures": [
            "06237e4f-c616-4588-9fb1-faf4cf58858b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5360,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "17b95321-3aed-4952-a95f-878b51411c9e",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "c87eda1c-5fa8-4f63-a72f-033156fcf9bb",
              "parentUUID": "17b95321-3aed-4952-a95f-878b51411c9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 304,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "ad4dd53d-a35d-4719-8270-822a22382be7",
              "parentUUID": "17b95321-3aed-4952-a95f-878b51411c9e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c87eda1c-5fa8-4f63-a72f-033156fcf9bb",
            "ad4dd53d-a35d-4719-8270-822a22382be7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 462,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5e9b120b-47b8-4ac6-bf03-f466b1ed9522",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "000e385f-f240-4dd0-ac0f-03e5dc902e5e",
              "parentUUID": "5e9b120b-47b8-4ac6-bf03-f466b1ed9522",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 4163,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "AssertionError: Timed out retrying: Not enough elements found. Found '1', expected '25'.",
                "estack": "AssertionError: Timed out retrying: Not enough elements found. Found '1', expected '25'.\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:157:22)",
                "diff": "- 1\n+ 25\n"
              },
              "uuid": "78e408c9-b986-4e19-9fe2-d69cf257477a",
              "parentUUID": "5e9b120b-47b8-4ac6-bf03-f466b1ed9522",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 4156,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying: Not enough elements found. Found '1', expected '25'.",
                "estack": "AssertionError: Timed out retrying: Not enough elements found. Found '1', expected '25'.\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:160:22)",
                "diff": "- 1\n+ 25\n"
              },
              "uuid": "45e32a45-6f52-4d55-80d5-52a49baeb95b",
              "parentUUID": "5e9b120b-47b8-4ac6-bf03-f466b1ed9522",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "9bf78cca-cfa8-4f21-823c-e3404bb2d421",
              "parentUUID": "5e9b120b-47b8-4ac6-bf03-f466b1ed9522",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "000e385f-f240-4dd0-ac0f-03e5dc902e5e",
            "9bf78cca-cfa8-4f21-823c-e3404bb2d421"
          ],
          "failures": [
            "78e408c9-b986-4e19-9fe2-d69cf257477a",
            "45e32a45-6f52-4d55-80d5-52a49baeb95b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8675,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "467c69a6-644a-4e78-b0d3-45b862405d20",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 4138,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying: Not enough elements found. Found '1', expected '25'.",
                "estack": "AssertionError: Timed out retrying: Not enough elements found. Found '1', expected '25'.\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:175:22)",
                "diff": "- 1\n+ 25\n"
              },
              "uuid": "c365338b-a3e8-4295-8b04-1499c020a9a3",
              "parentUUID": "467c69a6-644a-4e78-b0d3-45b862405d20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 4249,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {
                "message": "AssertionError: Timed out retrying: expected '<div.pixel>' to have CSS property 'height' with the value '40px', but the value was '80px'",
                "estack": "AssertionError: Timed out retrying: expected '<div.pixel>' to have CSS property 'height' with the value '40px', but the value was '80px'\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:194:22)",
                "diff": "- '80px'\n+ '40px'\n"
              },
              "uuid": "784373a9-d3a5-4afa-867b-d84e5b3b5e40",
              "parentUUID": "467c69a6-644a-4e78-b0d3-45b862405d20",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c365338b-a3e8-4295-8b04-1499c020a9a3",
            "784373a9-d3a5-4afa-867b-d84e5b3b5e40"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8387,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5bf11585-3c0b-4078-82c4-94ed630c9eed",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d8521a27-2f56-4555-a602-d27802277816",
              "parentUUID": "5bf11585-3c0b-4078-82c4-94ed630c9eed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "643177c4-477a-465b-a207-9d73656af0a0",
              "parentUUID": "5bf11585-3c0b-4078-82c4-94ed630c9eed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8521a27-2f56-4555-a602-d27802277816",
            "643177c4-477a-465b-a207-9d73656af0a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 375,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6c2eea44-1543-4616-b0ed-a902133bade7",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 544,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "3032b68a-0b9d-4ddc-9187-dfd9f2df8aee",
              "parentUUID": "6c2eea44-1543-4616-b0ed-a902133bade7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 838,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "1e9f4912-dfd9-4be1-b2dd-cb5575983f6d",
              "parentUUID": "6c2eea44-1543-4616-b0ed-a902133bade7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3032b68a-0b9d-4ddc-9187-dfd9f2df8aee",
            "1e9f4912-dfd9-4be1-b2dd-cb5575983f6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1382,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d593e004-c272-4826-9ce2-9a4969f6bba3",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "5b339336-4c88-4cf0-a188-b9fecee832e8",
              "parentUUID": "d593e004-c272-4826-9ce2-9a4969f6bba3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 831,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "518ed3a0-0d29-442a-93ab-3dc43e0f410d",
              "parentUUID": "d593e004-c272-4826-9ce2-9a4969f6bba3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 4233,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying: Expected to find element: `6`, but never found it. Queried from element: <div.pixel>",
                "estack": "AssertionError: Timed out retrying: Expected to find element: `6`, but never found it. Queried from element: <div.pixel>\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:266:24)",
                "diff": null
              },
              "uuid": "e6a70a9a-16a4-4999-bc1f-ca225ef17d88",
              "parentUUID": "d593e004-c272-4826-9ce2-9a4969f6bba3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b339336-4c88-4cf0-a188-b9fecee832e8",
            "518ed3a0-0d29-442a-93ab-3dc43e0f410d"
          ],
          "failures": [
            "e6a70a9a-16a4-4999-bc1f-ca225ef17d88"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5287,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "178cfabc-608d-4572-b2b5-bacdeca74ec9",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "406fbc36-d1d2-4db2-afc3-82923eb69c07",
              "parentUUID": "178cfabc-608d-4572-b2b5-bacdeca74ec9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "2516e4d6-adf4-4e9d-82b9-5fa153b4abff",
              "parentUUID": "178cfabc-608d-4572-b2b5-bacdeca74ec9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "e291d390-a09d-4f65-aa2d-6d3fa5177387",
              "parentUUID": "178cfabc-608d-4572-b2b5-bacdeca74ec9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "27750e5c-81e7-4e1f-b87d-6b7dc830d870",
              "parentUUID": "178cfabc-608d-4572-b2b5-bacdeca74ec9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "406fbc36-d1d2-4db2-afc3-82923eb69c07",
            "2516e4d6-adf4-4e9d-82b9-5fa153b4abff",
            "e291d390-a09d-4f65-aa2d-6d3fa5177387",
            "27750e5c-81e7-4e1f-b87d-6b7dc830d870"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 980,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9049b2e8-96d6-4f18-a10c-846492a3c5ba",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4193,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:315:27)",
                "diff": null
              },
              "uuid": "1946178e-03f5-42d5-9937-717563563640",
              "parentUUID": "9049b2e8-96d6-4f18-a10c-846492a3c5ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4292,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying: Expected to find element: `#generate-board`, but never found it.",
                "estack": "AssertionError: Timed out retrying: Expected to find element: `#generate-board`, but never found it.\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:318:31)",
                "diff": null
              },
              "uuid": "2406ac35-d0b7-4348-8288-4a5f2ede2192",
              "parentUUID": "9049b2e8-96d6-4f18-a10c-846492a3c5ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4224,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "AssertionError: Timed out retrying: Expected to find element: `#board-size[type='number'][min='1']`, but never found it.",
                "estack": "AssertionError: Timed out retrying: Expected to find element: `#board-size[type='number'][min='1']`, but never found it.\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:321:8)",
                "diff": null
              },
              "uuid": "b0f43b1c-a617-41ec-9865-fc4cb04bf01c",
              "parentUUID": "9049b2e8-96d6-4f18-a10c-846492a3c5ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4208,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "AssertionError: Timed out retrying: Expected to find element: `#generate-board`, but never found it.",
                "estack": "AssertionError: Timed out retrying: Expected to find element: `#generate-board`, but never found it.\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:324:8)",
                "diff": null
              },
              "uuid": "4ede8e6a-20a4-4407-b6b8-bf2ba7c8170e",
              "parentUUID": "9049b2e8-96d6-4f18-a10c-846492a3c5ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4296,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:328:29)",
                "diff": null
              },
              "uuid": "6d52a783-2bed-42c0-a4be-0f8d0cdaa8ed",
              "parentUUID": "9049b2e8-96d6-4f18-a10c-846492a3c5ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4277,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:335:8)",
                "diff": null
              },
              "uuid": "eab19b73-1d04-49af-8eb4-d071eee4cb02",
              "parentUUID": "9049b2e8-96d6-4f18-a10c-846492a3c5ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4257,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying: Expected to find element: `#generate-board`, but never found it.",
                "estack": "AssertionError: Timed out retrying: Expected to find element: `#generate-board`, but never found it.\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:344:8)",
                "diff": null
              },
              "uuid": "94f50688-588a-4064-9e9d-bc15c4d1b357",
              "parentUUID": "9049b2e8-96d6-4f18-a10c-846492a3c5ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4268,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:349:8)",
                "diff": null
              },
              "uuid": "b027e4a7-eec8-4e78-b075-8d35d234bf2f",
              "parentUUID": "9049b2e8-96d6-4f18-a10c-846492a3c5ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4263,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:354:8)",
                "diff": null
              },
              "uuid": "751102b6-06cb-4779-8392-74ada28e9594",
              "parentUUID": "9049b2e8-96d6-4f18-a10c-846492a3c5ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1946178e-03f5-42d5-9937-717563563640",
            "2406ac35-d0b7-4348-8288-4a5f2ede2192",
            "b0f43b1c-a617-41ec-9865-fc4cb04bf01c",
            "4ede8e6a-20a4-4407-b6b8-bf2ba7c8170e",
            "6d52a783-2bed-42c0-a4be-0f8d0cdaa8ed",
            "eab19b73-1d04-49af-8eb4-d071eee4cb02",
            "94f50688-588a-4064-9e9d-bc15c4d1b357",
            "b027e4a7-eec8-4e78-b075-8d35d234bf2f",
            "751102b6-06cb-4779-8392-74ada28e9594"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38278,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "90476a1d-6beb-4e04-b96c-aadb398efe1c",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4274,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:366:8)",
                "diff": null
              },
              "uuid": "a2cef116-4f32-4c1b-9e34-4694612df957",
              "parentUUID": "90476a1d-6beb-4e04-b96c-aadb398efe1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4300,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:371:8)",
                "diff": null
              },
              "uuid": "cc678e0a-420f-4d60-b4e6-7d7fb1ddd283",
              "parentUUID": "90476a1d-6beb-4e04-b96c-aadb398efe1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4297,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.",
                "estack": "AssertionError: Timed out retrying: Expected to find element: `#board-size`, but never found it.\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:376:8)",
                "diff": null
              },
              "uuid": "5e244836-1618-4e86-b113-0767729d6a34",
              "parentUUID": "90476a1d-6beb-4e04-b96c-aadb398efe1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a2cef116-4f32-4c1b-9e34-4694612df957",
            "cc678e0a-420f-4d60-b4e6-7d7fb1ddd283",
            "5e244836-1618-4e86-b113-0767729d6a34"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12871,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a804b4a4-ae21-4207-b1a6-95cef3de536d",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 322,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:399:45)",
                "diff": ""
              },
              "uuid": "9779d4ac-ead1-431d-870c-7bceabb18c37",
              "parentUUID": "a804b4a4-ae21-4207-b1a6-95cef3de536d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 227,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at Context.eval (http://localhost:52652/__cypress/tests?p=cypress\\integration\\project.spec.js:421:45)",
                "diff": ""
              },
              "uuid": "912d7079-4018-4439-9879-8be87426695c",
              "parentUUID": "a804b4a4-ae21-4207-b1a6-95cef3de536d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9779d4ac-ead1-431d-870c-7bceabb18c37",
            "912d7079-4018-4439-9879-8be87426695c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 549,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}