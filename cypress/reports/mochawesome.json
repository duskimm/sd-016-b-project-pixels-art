{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-09-10T17:54:01.293Z",
    "end": "2021-09-10T17:55:26.536Z",
    "duration": 85243,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b4d7d041-1bd3-49d0-a9a9-66c4e6af618b",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d1086b4c-c315-44b8-83c1-dc0e25db7d28",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "8aad607d-d10c-4caf-a812-9a010ae00fdb",
              "parentUUID": "d1086b4c-c315-44b8-83c1-dc0e25db7d28",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8aad607d-d10c-4caf-a812-9a010ae00fdb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 233,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "95546b29-cc45-4d07-820d-d7d7d4afda4e",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "cf89c4d3-2ee8-4a28-9983-8a55be83cc9e",
              "parentUUID": "95546b29-cc45-4d07-820d-d7d7d4afda4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "3f5cf0aa-bc95-47cf-a2c3-cd7a35e4dffd",
              "parentUUID": "95546b29-cc45-4d07-820d-d7d7d4afda4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "8a9e82cc-d62d-41fb-b810-8a7abda9e88b",
              "parentUUID": "95546b29-cc45-4d07-820d-d7d7d4afda4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "b66f9159-d370-4b27-99f0-159ab6136390",
              "parentUUID": "95546b29-cc45-4d07-820d-d7d7d4afda4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "3d26f4ed-a39f-4596-9849-1290e6651692",
              "parentUUID": "95546b29-cc45-4d07-820d-d7d7d4afda4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "a857ada9-bbe7-4c2a-8757-869f9b9ebb04",
              "parentUUID": "95546b29-cc45-4d07-820d-d7d7d4afda4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "7eea12e3-c8a5-42c4-b694-baeac0acc2c3",
              "parentUUID": "95546b29-cc45-4d07-820d-d7d7d4afda4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cf89c4d3-2ee8-4a28-9983-8a55be83cc9e",
            "3f5cf0aa-bc95-47cf-a2c3-cd7a35e4dffd",
            "8a9e82cc-d62d-41fb-b810-8a7abda9e88b",
            "b66f9159-d370-4b27-99f0-159ab6136390",
            "3d26f4ed-a39f-4596-9849-1290e6651692",
            "a857ada9-bbe7-4c2a-8757-869f9b9ebb04",
            "7eea12e3-c8a5-42c4-b694-baeac0acc2c3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1315,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d07cbaf3-22af-4a4e-bc40-c40d055dee49",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "a5a1283f-b7c6-494f-8af3-1a3caf1f4fab",
              "parentUUID": "d07cbaf3-22af-4a4e-bc40-c40d055dee49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "143d8d77-151a-488c-bea8-0c2c17264f28",
              "parentUUID": "d07cbaf3-22af-4a4e-bc40-c40d055dee49",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5a1283f-b7c6-494f-8af3-1a3caf1f4fab",
            "143d8d77-151a-488c-bea8-0c2c17264f28"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 486,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "949fcb00-d691-404e-9d2b-356a2cfad582",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "3c82da2c-6490-460d-9776-22d491a3697a",
              "parentUUID": "949fcb00-d691-404e-9d2b-356a2cfad582",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "c208ea52-08a2-4564-a854-b6a6cb1d4685",
              "parentUUID": "949fcb00-d691-404e-9d2b-356a2cfad582",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "bf7a4b6f-bea8-4a05-97ee-3c63be69b281",
              "parentUUID": "949fcb00-d691-404e-9d2b-356a2cfad582",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "05d31e0e-4af0-40dd-a7eb-30a0a0a54568",
              "parentUUID": "949fcb00-d691-404e-9d2b-356a2cfad582",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c82da2c-6490-460d-9776-22d491a3697a",
            "c208ea52-08a2-4564-a854-b6a6cb1d4685",
            "bf7a4b6f-bea8-4a05-97ee-3c63be69b281",
            "05d31e0e-4af0-40dd-a7eb-30a0a0a54568"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 687,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bb86850d-bed8-44db-8e4c-6d76ef8720a7",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 355,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "d53b5f7b-3c81-4fdf-aa46-cc2904426578",
              "parentUUID": "bb86850d-bed8-44db-8e4c-6d76ef8720a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 468,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "80872266-9af4-48a4-ad89-ff823b885b8c",
              "parentUUID": "bb86850d-bed8-44db-8e4c-6d76ef8720a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d53b5f7b-3c81-4fdf-aa46-cc2904426578",
            "80872266-9af4-48a4-ad89-ff823b885b8c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 823,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "366191f2-d1cc-4817-b419-b1c5eb417e40",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "db1922c0-ac17-4df1-8ea9-dbce5b2bfbc8",
              "parentUUID": "366191f2-d1cc-4817-b419-b1c5eb417e40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "15f17ba8-48d3-45f2-8b13-b5c7eab99c14",
              "parentUUID": "366191f2-d1cc-4817-b419-b1c5eb417e40",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db1922c0-ac17-4df1-8ea9-dbce5b2bfbc8",
            "15f17ba8-48d3-45f2-8b13-b5c7eab99c14"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 219,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8e2fd8cd-4458-4c8a-a787-802d7bc9018f",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 491,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "9d04caf0-613a-455c-9e27-c65439c1f722",
              "parentUUID": "8e2fd8cd-4458-4c8a-a787-802d7bc9018f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9091,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "aae64074-9d2a-4a9c-87b7-dd0dfb981f0f",
              "parentUUID": "8e2fd8cd-4458-4c8a-a787-802d7bc9018f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d04caf0-613a-455c-9e27-c65439c1f722",
            "aae64074-9d2a-4a9c-87b7-dd0dfb981f0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9582,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1c983528-124b-40b4-b498-a0d69f0254bc",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "2b8ebfed-5a8b-49d5-8f04-ba9b880fa35a",
              "parentUUID": "1c983528-124b-40b4-b498-a0d69f0254bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9032,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "1d7cb1ab-f917-47a5-9792-5a2b71f3cc5f",
              "parentUUID": "1c983528-124b-40b4-b498-a0d69f0254bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1956,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "908f150c-665d-43ac-a960-588fa36fc643",
              "parentUUID": "1c983528-124b-40b4-b498-a0d69f0254bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b8ebfed-5a8b-49d5-8f04-ba9b880fa35a",
            "1d7cb1ab-f917-47a5-9792-5a2b71f3cc5f",
            "908f150c-665d-43ac-a960-588fa36fc643"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13356,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "620d8e2c-0af1-40a9-b4b7-f062b35d713d",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "5fd18956-002a-4b6c-bebd-fede3d4b0935",
              "parentUUID": "620d8e2c-0af1-40a9-b4b7-f062b35d713d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "543ce72d-a83f-4486-b9fe-ad5539518fa6",
              "parentUUID": "620d8e2c-0af1-40a9-b4b7-f062b35d713d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "4326a127-acd8-4f10-a637-7567c4b25310",
              "parentUUID": "620d8e2c-0af1-40a9-b4b7-f062b35d713d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2495,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "3eba96ec-7e5f-4bf1-bf6f-f8d18174aef0",
              "parentUUID": "620d8e2c-0af1-40a9-b4b7-f062b35d713d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5fd18956-002a-4b6c-bebd-fede3d4b0935",
            "543ce72d-a83f-4486-b9fe-ad5539518fa6",
            "4326a127-acd8-4f10-a637-7567c4b25310",
            "3eba96ec-7e5f-4bf1-bf6f-f8d18174aef0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2911,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c734d31d-8f8a-490c-ae77-018f8ddc3412",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4410,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44107/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44107/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44107/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44107/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44107/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44107/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44107/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44107/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44107/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5260a0a2-7159-405f-a338-104e43dd25a5",
              "parentUUID": "c734d31d-8f8a-490c-ae77-018f8ddc3412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4447,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44107/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44107/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44107/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44107/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44107/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44107/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44107/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44107/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44107/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2aed462d-f866-461f-afb6-4b727a34371b",
              "parentUUID": "c734d31d-8f8a-490c-ae77-018f8ddc3412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4469,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44107/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44107/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44107/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44107/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44107/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44107/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44107/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44107/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44107/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "00cd4f0b-08a1-4488-a1b4-cc80289b9d8a",
              "parentUUID": "c734d31d-8f8a-490c-ae77-018f8ddc3412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4373,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44107/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44107/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44107/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44107/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44107/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44107/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44107/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44107/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44107/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "295c6f82-fbe2-4003-94eb-bdcdb3d48489",
              "parentUUID": "c734d31d-8f8a-490c-ae77-018f8ddc3412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4372,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44107/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44107/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44107/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44107/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44107/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44107/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44107/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44107/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44107/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8eef5ab0-3294-437b-9449-8a5f46172f00",
              "parentUUID": "c734d31d-8f8a-490c-ae77-018f8ddc3412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4518,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44107/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44107/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44107/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44107/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44107/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44107/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44107/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44107/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44107/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fe90c8b1-508d-4926-af46-b4ee29ba8263",
              "parentUUID": "c734d31d-8f8a-490c-ae77-018f8ddc3412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4386,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44107/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44107/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44107/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44107/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44107/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44107/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44107/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44107/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44107/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f3af3aec-1ce4-45af-a25c-51e42adf7026",
              "parentUUID": "c734d31d-8f8a-490c-ae77-018f8ddc3412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4374,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44107/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44107/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44107/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44107/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44107/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44107/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44107/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44107/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44107/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f2a999dc-a39d-4151-b3fc-fef92a185342",
              "parentUUID": "c734d31d-8f8a-490c-ae77-018f8ddc3412",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4483,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44107/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44107/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44107/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44107/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44107/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44107/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44107/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44107/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44107/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f95d8bf9-6efb-48f5-bb71-f1c437785d0c",
              "parentUUID": "c734d31d-8f8a-490c-ae77-018f8ddc3412",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5260a0a2-7159-405f-a338-104e43dd25a5",
            "2aed462d-f866-461f-afb6-4b727a34371b",
            "00cd4f0b-08a1-4488-a1b4-cc80289b9d8a",
            "295c6f82-fbe2-4003-94eb-bdcdb3d48489",
            "8eef5ab0-3294-437b-9449-8a5f46172f00",
            "fe90c8b1-508d-4926-af46-b4ee29ba8263",
            "f3af3aec-1ce4-45af-a25c-51e42adf7026",
            "f2a999dc-a39d-4151-b3fc-fef92a185342",
            "f95d8bf9-6efb-48f5-bb71-f1c437785d0c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39832,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1489cd13-acb1-45e6-a1f9-1f5b5d74ac16",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4418,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44107/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44107/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44107/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44107/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44107/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44107/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44107/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44107/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44107/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dc858665-968c-4804-9e76-27a924943d05",
              "parentUUID": "1489cd13-acb1-45e6-a1f9-1f5b5d74ac16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4495,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44107/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44107/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44107/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44107/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44107/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44107/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44107/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44107/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44107/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4a6593ba-c4f1-4988-906a-34db0ecad186",
              "parentUUID": "1489cd13-acb1-45e6-a1f9-1f5b5d74ac16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4393,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44107/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44107/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44107/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44107/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44107/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44107/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44107/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44107/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44107/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44107/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44107/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "47b7b41f-d298-4fba-8324-3e2dfbba5057",
              "parentUUID": "1489cd13-acb1-45e6-a1f9-1f5b5d74ac16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "dc858665-968c-4804-9e76-27a924943d05",
            "4a6593ba-c4f1-4988-906a-34db0ecad186",
            "47b7b41f-d298-4fba-8324-3e2dfbba5057"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13306,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "38b3ab8d-03dc-495b-bacb-bad71ef24058",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 624,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "90f6a376-d6c2-4465-8cf3-900f5a1264cd",
              "parentUUID": "38b3ab8d-03dc-495b-bacb-bad71ef24058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 727,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "3acf8819-73d3-4665-9f3e-cfd1d808c25a",
              "parentUUID": "38b3ab8d-03dc-495b-bacb-bad71ef24058",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "90f6a376-d6c2-4465-8cf3-900f5a1264cd",
            "3acf8819-73d3-4665-9f3e-cfd1d808c25a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1351,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}